/**
 * Inspired by 'PanResponder' from Facebook.
 */
/**
 * The config object contains same callbacks as the default gesture responder(https://facebook.github.io/react-native/docs/gesture-responder-system.html).
 * And every callback are called with an additional argument 'gestureState', like PanResponder.
 * @param config
 * @returns {{}}
 */
/**
 * The config object contains same callbacks as the default gesture responder(https://facebook.github.io/react-native/docs/gesture-responder-system.html).
 * And every callback are called with an additional argument 'gestureState', like PanResponder.
 * @param config
 * @param debug true to enable debug logs
 * @returns {{}}
 */
export default function create(config: any): {
    onStartShouldSetResponder: (e: any) => any;
    onMoveShouldSetResponder: (e: any) => any;
    onStartShouldSetResponderCapture: (e: any) => any;
    onMoveShouldSetResponderCapture: (e: any) => any;
    onResponderGrant: (e: any) => any;
    onResponderReject: (e: any) => void;
    onResponderRelease: (e: any) => void;
    onResponderStart: (e: any) => void;
    onResponderMove: (e: any) => void;
    onResponderEnd: (e: any) => void;
    onResponderTerminate: (e: any) => void;
    onResponderTerminationRequest: (e: any) => any;
};
