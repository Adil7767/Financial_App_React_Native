import * as React from "react";
import { StyleProp, ViewStyle } from "react-native";
declare type DimensionProps = {
    width: number;
    height: number;
};
declare type ImageSourceProps = {
    source: any;
};
declare type Props = {
    image: ImageSourceProps | number;
    style?: StyleProp<ViewStyle>;
    onLoad?: (evt?: any) => void;
    onLoadStart?: (evt?: any) => void;
    enableTransform?: boolean;
    enableScale?: boolean;
    enableTranslate?: boolean;
    onTransformGestureReleased?: (evt?: any) => void;
    onViewTransformed?: (evt?: any) => void;
    imageComponent?: (props?: any) => React.ReactNode;
    resizeMode?: string;
    errorComponent?: (props?: any) => React.ReactNode;
};
declare type State = {
    viewWidth?: number;
    viewHeight?: number;
    imageLoaded?: boolean;
    imageDimensions?: DimensionProps;
    keyAcumulator: number;
    error?: boolean;
    keyAccumulator?: any;
};
export default class TransformableImage extends React.PureComponent<Props, State> {
    static defaultProps: {
        enableTransform: boolean;
        enableScale: boolean;
        enableTranslate: boolean;
        imageComponent: any;
        resizeMode: string;
    };
    _mounted: any;
    viewTransformer: any;
    constructor(props: any);
    UNSAFE_componentWillMount(): void;
    componentDidMount(): void;
    UNSAFE_componentWillReceiveProps(nextProps: any): void;
    componentWillUnmount(): void;
    onLoadStart(e: any): void;
    onLoad(e: any): void;
    onLayout(e: any): void;
    getImageSize(image: any): void;
    getViewTransformerInstance(): any;
    renderError(): {};
    render(): JSX.Element;
}
export {};
