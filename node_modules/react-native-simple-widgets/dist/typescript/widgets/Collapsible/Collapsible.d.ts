import * as React from "react";
import { Animated } from "react-native";
import Accordion from "./Accordion";
declare type Props = {
    collapsed?: boolean;
    collapsedHeight?: number;
    duration?: number;
    height?: number;
    onAnimationEnd?: (evt?: any) => void;
    enablePointerEvents?: boolean;
    renderChildrenCollapsed?: boolean;
    align?: string;
    style?: any;
    easing?: string;
};
declare type State = {
    measuring?: boolean;
    measured?: boolean;
    height?: Animated.Value;
    contentHeight?: number;
    animating?: boolean;
};
declare class Collapsible extends React.Component<Props, State> {
    static defaultProps: {
        align: string;
        collapsed: boolean;
        collapsedHeight: number;
        enablePointerEvents: boolean;
        duration: number;
        easing: string;
        onAnimationEnd: () => any;
        renderChildrenCollapsed: boolean;
    };
    static Accordion: typeof Accordion;
    unmounted: boolean;
    _animation: Animated.CompositeAnimation;
    constructor(props: any);
    componentDidUpdate(prevProps: any): void;
    componentWillUnmount(): void;
    _componentDidUpdate(prevProps: any): void;
    contentHandle: any;
    _handleRef: (ref: any) => void;
    _measureContent(callback: any): void;
    _toggleCollapsed(collapsed: any): void;
    _transitionToHeight(height: any): void;
    _handleLayoutChange: (event: any) => void;
    render(): JSX.Element;
}
export default Collapsible;
