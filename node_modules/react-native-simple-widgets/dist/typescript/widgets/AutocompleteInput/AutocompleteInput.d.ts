import * as React from "react";
import { FlatList, StyleProp, TextInput, View } from "react-native";
declare type Props = React.ComponentProps<typeof TextInput> & {
    /**
     * These styles will be applied to the container which
     * surrounds the autocomplete component.
     */
    containerStyle?: StyleProp<View>;
    /**
     * Assign an array of data objects which should be
     * rendered in respect to the entered text.
     */
    data: string[] | Record<string, any>[];
    /**
     * Props which can be applied to result `FlatList`.
     */
    flatListProps?: React.ComponentProps<typeof FlatList>;
    /**
     * Set to `true` to hide the suggestion list.
     */
    hideResults?: boolean;
    /**
     * These styles will be applied to the container which surrounds
     * the textInput component.
     */
    inputContainerStyle?: StyleProp<View>;
    /**
     * Set `keyboardShouldPersistTaps` to true if RN version is <= 0.39.
     */
    keyboardShouldPersistTaps?: "always" | "handeld" | "never" | boolean;
    /**
     * These style will be applied to the result list.
     */
    listContainerStyle?: StyleProp<View>;
    /**
     * `onShowResults` will be called when list is going to
     * show/hide results.
     */
    onShowResults?: (showResults: any) => void;
    /**
     * `onShowResults` will be called when list is going to
     * show/hide results.
     */
    onStartShouldSetResponderCapture?: () => boolean;
    /**
     * renders custom TextInput. All props passed to this function.
     */
    renderTextInput: (props: any) => React.ReactNode;
    onBackdropPress?: () => void;
    [key: string]: any;
};
export declare const AutocompleteInput: {
    (props: Props): JSX.Element;
    defaultProps: {
        data: any[];
        keyboardShouldPersistTaps: string;
        onStartShouldSetResponderCapture: () => boolean;
        flatListProps: {
            renderItem: ({ item }: {
                item: any;
            }) => JSX.Element;
            keyExtractor: (_: any, index: any) => string;
        };
    };
};
export default AutocompleteInput;
