import * as React from "react";
export declare const BACKGROUND_COLOR_LIGHT = "white";
export declare const BACKGROUND_COLOR_DARK = "#0E0E0E";
export declare const BORDER_COLOR = "#d5d5d5";
export declare const BORDER_COLOR_DARK = "#272729";
export declare const BORDER_RADIUS = 13;
export declare const BUTTON_FONT_WEIGHT = "normal";
export declare const BUTTON_FONT_COLOR = "#007ff9";
export declare const BUTTON_FONT_SIZE = 20;
export declare const HIGHLIGHT_COLOR_DARK = "#444444";
export declare const HIGHLIGHT_COLOR_LIGHT = "#ebebeb";
export declare const TITLE_FONT_SIZE = 20;
export declare const TITLE_COLOR = "#8f8f8f";
export declare type Props = {
    cancelTextIOS?: string;
    confirmTextIOS?: string;
    customCancelButtonIOS?: React.ReactElement;
    customConfirmButtonIOS?: React.ReactElement;
    customHeaderIOS?: React.ReactElement;
    customPickerIOS?: React.ReactElement;
    date?: Date;
    mode?: string;
    headerTextIOS?: string;
    modalPropsIOS?: any;
    modalStyleIOS?: any;
    isDarkModeEnabled?: boolean;
    isVisible?: boolean;
    pickerContainerStyleIOS?: any;
    onCancel: () => void;
    onConfirm: (date: any) => void;
    onChange?: (date: any) => void;
    onHide?: (flag: any, date?: any) => void;
    maximumDate?: Date;
    minimumDate?: Date;
    use12Hours?: boolean;
};
declare class DateTimePickerWeb extends React.PureComponent<Props> {
    static defaultProps: {
        cancelTextIOS: string;
        confirmTextIOS: string;
        modalPropsIOS: {};
        date: Date;
        isDarkModeEnabled: any;
        isVisible: boolean;
        pickerContainerStyleIOS: {};
        use12Hours: boolean;
    };
    state: {
        currentDate: Date;
        isPickerVisible: boolean;
    };
    didPressConfirm: boolean;
    static getDerivedStateFromProps(props: any, state: any): {
        currentDate: any;
        isPickerVisible: boolean;
    };
    handleCancel: () => void;
    handleConfirm: () => void;
    handleHide: () => void;
    handleChange: (date: any, index?: any) => void;
    render(): JSX.Element;
}
export declare const Header: ({ label, style }: {
    label: any;
    style?: {
        root: {
            borderBottomColor: string;
            borderBottomWidth: number;
            padding: number;
            backgroundColor: string;
        };
        text: {
            textAlign: "center";
            color: string;
            fontSize: number;
        };
    };
}) => JSX.Element;
export declare const headerStyles: {
    root: {
        borderBottomColor: string;
        borderBottomWidth: number;
        padding: number;
        backgroundColor: string;
    };
    text: {
        textAlign: "center";
        color: string;
        fontSize: number;
    };
};
export declare const ConfirmButton: ({ isDarkModeEnabled, onPress, label, style, }: {
    isDarkModeEnabled: any;
    onPress: any;
    label: any;
    style?: {
        button: {
            borderTopWidth: number;
            backgroundColor: string;
            height: number;
            justifyContent: "center";
        };
        buttonLight: {
            borderColor: string;
        };
        buttonDark: {
            borderColor: string;
        };
        text: {
            textAlign: "center";
            color: string;
            fontSize: number;
            fontWeight: "normal";
            backgroundColor: string;
        };
    };
}) => JSX.Element;
export declare const confirmButtonStyles: {
    button: {
        borderTopWidth: number;
        backgroundColor: string;
        height: number;
        justifyContent: "center";
    };
    buttonLight: {
        borderColor: string;
    };
    buttonDark: {
        borderColor: string;
    };
    text: {
        textAlign: "center";
        color: string;
        fontSize: number;
        fontWeight: "normal";
        backgroundColor: string;
    };
};
export declare const CancelButton: ({ isDarkModeEnabled, onPress, label, style, }: {
    isDarkModeEnabled: any;
    onPress: any;
    label: any;
    style?: {
        button: {
            borderRadius: number;
            height: number;
            marginBottom: number;
            justifyContent: "center";
        };
        buttonLight: {
            backgroundColor: string;
        };
        buttonDark: {
            backgroundColor: string;
        };
        text: {
            padding: number;
            textAlign: "center";
            color: string;
            fontSize: number;
            fontWeight: "600";
            backgroundColor: string;
        };
    };
}) => JSX.Element;
export declare const cancelButtonStyles: {
    button: {
        borderRadius: number;
        height: number;
        marginBottom: number;
        justifyContent: "center";
    };
    buttonLight: {
        backgroundColor: string;
    };
    buttonDark: {
        backgroundColor: string;
    };
    text: {
        padding: number;
        textAlign: "center";
        color: string;
        fontSize: number;
        fontWeight: "600";
        backgroundColor: string;
    };
};
export default DateTimePickerWeb;
