{"version":3,"sources":["DropdownInput.tsx"],"names":["React","Platform","StyleSheet","Animated","BackHandler","Dimensions","Easing","I18nManager","TouchableWithoutFeedback","View","ScrollView","findNodeHandle","Surface","APPROX_STATUSBAR_HEIGHT","ThemeContext","Portal","SCREEN_INDENT","ANIMATION_DURATION","EASING","bezier","DropdownInput","Component","rendered","props","visible","top","left","menuLayout","width","height","anchorLayout","opacityAnimation","Value","scaleAnimation","ValueXY","x","y","isValidElement","anchor","Promise","resolve","menu","measureInWindow","isAnchorCoord","show","hide","OS","global","el","isBrowser","node","focusableNode","querySelector","focus","onDismiss","e","key","addEventListener","handleDismiss","document","handleKeypress","removeEventListener","theme","context","windowLayout","get","all","measureMenuLayout","measureAnchorLayout","requestAnimationFrame","setState","attachListeners","animation","parallel","timing","state","toValue","duration","scale","easing","useNativeDriver","start","finished","focusFirstDOMNode","removeListeners","setValue","getDerivedStateFromProps","nextProps","prevState","componentDidUpdate","prevProps","updateVisibility","componentWillUnmount","render","contentStyle","style","children","statusBarHeight","overlayAccessibilityLabel","additionalVerticalValue","select","android","default","scaleTransforms","scaleX","interpolate","inputRange","outputRange","scaleY","positionTransforms","push","translateX","right","scrollableMenuHeight","translateY","bottom","shadowMenuContainerStyle","opacity","transform","borderRadius","roundness","positionStyle","isRTL","ref","absoluteFill","styles","wrapper","shadowMenuContainer","create","position","paddingVertical","elevation"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n    Platform,\n    StyleProp,\n    StyleSheet,\n    Animated,\n    BackHandler,\n    Dimensions,\n    Easing,\n    I18nManager,\n    LayoutRectangle,\n    TouchableWithoutFeedback,\n    View,\n    ViewStyle,\n    ScrollView,\n    findNodeHandle,\n} from \"react-native\";\n\nimport { $Omit } from \"react-native-simple-elements/components/types\";\nimport Surface from \"react-native-simple-elements/components/Surface\";\nimport { APPROX_STATUSBAR_HEIGHT } from \"react-native-simple-elements/components/theme/constants\";\nimport { DefaultTheme, ThemeContext } from \"styled-components\";\nimport Portal from \"react-native-simple-elements/components/Portal/Portal\";\n\ntype Props = {\n    /**\n     * Whether the Menu is currently visible.\n     */\n    visible: boolean;\n    /**\n     * The anchor to open the menu from. In most cases, it will be a button that opens the menu.\n     */\n    anchor: React.ReactNode | { x: number; y: number };\n    /**\n     * Extra margin to add at the top of the menu to account for translucent status bar on Android.\n     * If you are using Expo, we assume translucent status bar and set a height for status bar automatically.\n     * Pass `0` or a custom value to and customize it.\n     * This is automatically handled on iOS.\n     */\n    statusBarHeight?: number;\n    /**\n     * Callback called when Menu is dismissed. The `visible` prop needs to be updated when this is called.\n     */\n    onDismiss: () => void;\n    /**\n     * Accessibility label for the overlay. This is read by the screen reader when the user taps outside the menu.\n     */\n    overlayAccessibilityLabel?: string;\n    /**\n     * Content of the `Menu`.\n     */\n    children: React.ReactNode;\n    /**\n     * Style of menu's inner content.\n     */\n    contentStyle?: StyleProp<ViewStyle>;\n    style?: StyleProp<ViewStyle>;\n    /**\n     * @optional\n     */\n    theme?: DefaultTheme;\n};\n\ntype Layout = $Omit<$Omit<LayoutRectangle, \"x\">, \"y\">;\n\ntype State = {\n    rendered: boolean;\n    top: number;\n    left: number;\n    menuLayout: Layout;\n    anchorLayout: Layout;\n    opacityAnimation: Animated.Value;\n    scaleAnimation: Animated.ValueXY;\n};\n\n// Minimum padding between the edge of the screen and the menu\nconst SCREEN_INDENT = 8;\n// From https://material.io/design/motion/speed.html#duration\nconst ANIMATION_DURATION = 250;\n// From the 'Standard easing' section of https://material.io/design/motion/speed.html#easing\nconst EASING = Easing.bezier(0.4, 0, 0.2, 1);\n\n/**\n * Menus display a list of choices on temporary elevated surfaces. Their placement varies based on the element that opens them.\n *\n *  <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/menu-1.png\" />\n *   <img class=\"medium\" src=\"screenshots/menu-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import Provider from 'react-native-simple-elements/components/theme/Provider';\n * import Button from 'react-native-simple-elements/components/Button';\n * import Divider from 'react-native-simple-elements';\n * import DropdownInput from 'react-native-simple-widgets/widgets/DropdownInput';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const openMenu = () => setVisible(true);\n *\n *   const closeMenu = () => setVisible(false);\n *\n *   return (\n *     <Provider>\n *       <View\n *         style={{\n *           paddingTop: 50,\n *           flexDirection: 'row',\n *           justifyContent: 'center',\n *         }}>\n *         <DropdownInput\n *           visible={visible}\n *           onDismiss={closeMenu}\n *           anchor={<Button onPress={openMenu}>Show menu</Button>}>\n *           <Menu.Item onPress={() => {}} title=\"Item 1\" />\n *           <Menu.Item onPress={() => {}} title=\"Item 2\" />\n *           <Divider />\n *           <Menu.Item onPress={() => {}} title=\"Item 3\" />\n *         </DropdownInput>\n *       </View>\n *     </Provider>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nclass DropdownInput extends React.Component<Props, State> {\n\n    static defaultProps = {\n        statusBarHeight: APPROX_STATUSBAR_HEIGHT,\n        overlayAccessibilityLabel: \"Close menu\",\n    };\n\n    static contextType: any = ThemeContext;\n\n    static getDerivedStateFromProps(nextProps: Props, prevState: State) {\n        if (nextProps.visible && !prevState.rendered) {\n            return { rendered: true };\n        }\n\n        return null;\n    }\n\n    state = {\n        rendered: this.props.visible,\n        top: 0,\n        left: 0,\n        menuLayout: { width: 0, height: 0 },\n        anchorLayout: { width: 0, height: 0 },\n        opacityAnimation: new Animated.Value(0),\n        scaleAnimation: new Animated.ValueXY({ x: 0, y: 0 }),\n    };\n\n    componentDidUpdate(prevProps: Props) {\n        if (prevProps.visible !== this.props.visible) {\n            this.updateVisibility();\n        }\n    }\n\n    componentWillUnmount() {\n        this.removeListeners();\n    }\n\n    private anchor?: View | null = null;\n    private menu?: View | null = null;\n\n    private isAnchorCoord = () => !React.isValidElement(this.props.anchor);\n\n    private measureMenuLayout = () =>\n        new Promise<LayoutRectangle>((resolve) => {\n            if (this.menu) {\n                this.menu.measureInWindow((x, y, width, height) => {\n                    resolve({ x, y, width, height });\n                });\n            }\n        });\n\n    private measureAnchorLayout = () =>\n        new Promise<LayoutRectangle>((resolve) => {\n            const { anchor } = this.props;\n            if (this.isAnchorCoord()) {\n                // @ts-ignore\n                resolve({ x: anchor.x, y: anchor.y, width: 0, height: 0 });\n                return;\n            }\n\n            if (this.anchor) {\n                this.anchor.measureInWindow((x, y, width, height) => {\n                    resolve({ x, y, width, height });\n                });\n            }\n        });\n\n    private updateVisibility = async () => {\n        // Menu is rendered in Portal, which updates items asynchronously\n        // We need to do the same here so that the ref is up-to-date\n        await Promise.resolve();\n\n        if (this.props.visible) {\n            this.show();\n        } else {\n            this.hide();\n        }\n    };\n\n    private isBrowser = () => Platform.OS === \"web\" && \"document\" in global;\n\n    private focusFirstDOMNode = (el: View | null | undefined) => {\n        if (el && this.isBrowser()) {\n            // When in the browser, we want to focus the first focusable item on toggle\n            // For example, when menu is shown, focus the first item in the menu\n            // And when menu is dismissed, send focus back to the button to resume tabbing\n            const node: any = findNodeHandle(el);\n            const focusableNode = node.querySelector(\n                // This is a rough list of selectors that can be focused\n                \"button, [href], input, select, textarea, [tabindex]:not([tabindex=\\\"-1\\\"])\"\n            );\n\n            focusableNode?.focus();\n        }\n    };\n\n    private handleDismiss = () => {\n        if (this.props.visible) {\n            this.props.onDismiss();\n        }\n        return true;\n    };\n\n    private handleKeypress = (e: KeyboardEvent) => {\n        if (e.key === \"Escape\") {\n            this.props.onDismiss();\n        }\n    };\n\n    private attachListeners = () => {\n        BackHandler.addEventListener(\"hardwareBackPress\", this.handleDismiss);\n        Dimensions.addEventListener(\"change\", this.handleDismiss);\n\n        this.isBrowser() && document.addEventListener(\"keyup\", this.handleKeypress);\n    };\n\n    private removeListeners = () => {\n        BackHandler.removeEventListener(\"hardwareBackPress\", this.handleDismiss);\n        Dimensions.removeEventListener(\"change\", this.handleDismiss);\n\n        this.isBrowser() &&\n            document.removeEventListener(\"keyup\", this.handleKeypress);\n    };\n\n    private show = async () => {\n        const theme = this.context;\n        const windowLayout = Dimensions.get(\"window\");\n        const [menuLayout, anchorLayout] = await Promise.all([\n            this.measureMenuLayout(),\n            this.measureAnchorLayout(),\n        ]);\n\n        // When visible is true for first render\n        // native views can be still not rendered and\n        // measureMenuLayout/measureAnchorLayout functions\n        // return wrong values e.g { x:0, y: 0, width: 0, height: 0 }\n        // so we have to wait until views are ready\n        // and rerun this function to show menu\n        if (\n            !windowLayout.width ||\n            !windowLayout.height ||\n            !menuLayout.width ||\n            !menuLayout.height ||\n            (!anchorLayout.width && !this.isAnchorCoord()) ||\n            (!anchorLayout.height && !this.isAnchorCoord())\n        ) {\n            requestAnimationFrame(this.show);\n            return;\n        }\n\n        this.setState(\n            () => ({\n                left: anchorLayout.x,\n                top: anchorLayout.y + anchorLayout.height,\n                // top: anchorLayout.y + anchorLayout.height,\n                anchorLayout: {\n                    height: anchorLayout.height,\n                    width: anchorLayout.width,\n                },\n                menuLayout: {\n                    width: menuLayout.width,\n                    height: menuLayout.height,\n                },\n            }),\n            () => {\n                this.attachListeners();\n\n                const { animation } = theme;\n                Animated.parallel([\n                    Animated.timing(this.state.scaleAnimation, {\n                        toValue: { x: menuLayout.width, y: menuLayout.height },\n                        duration: ANIMATION_DURATION * animation.scale,\n                        easing: EASING,\n                        useNativeDriver: true,\n                    }),\n                    Animated.timing(this.state.opacityAnimation, {\n                        toValue: 1,\n                        duration: ANIMATION_DURATION * animation.scale,\n                        easing: EASING,\n                        useNativeDriver: true,\n                    }),\n                ]).start(({ finished }) => {\n                    if (finished) {\n                        this.focusFirstDOMNode(this.menu);\n                    }\n                });\n            }\n        );\n    };\n\n    private hide = () => {\n        const theme = this.context;\n        this.removeListeners();\n\n        const { animation } = theme;\n        Animated.timing(this.state.opacityAnimation, {\n            toValue: 0,\n            duration: ANIMATION_DURATION * animation.scale,\n            easing: EASING,\n            useNativeDriver: true,\n        }).start(({ finished }) => {\n            if (finished) {\n                this.setState({ menuLayout: { width: 0, height: 0 }, rendered: false });\n                this.state.scaleAnimation.setValue({ x: 0, y: 0 });\n                // this.focusFirstDOMNode(this.anchor);\n            }\n        });\n    };\n\n    render() {\n        const {\n            visible,\n            anchor,\n            contentStyle,\n            style,\n            children,\n            statusBarHeight,\n            onDismiss,\n            overlayAccessibilityLabel,\n        } = this.props;\n        const theme = this.context;\n\n        const {\n            rendered,\n            menuLayout,\n            anchorLayout,\n            opacityAnimation,\n            scaleAnimation,\n        } = this.state;\n\n        let { left, top } = this.state;\n\n        // I don't know why but on Android measure function is wrong by 24\n        const additionalVerticalValue = Platform.select({\n            android: statusBarHeight,\n            default: 0,\n        });\n\n        const scaleTransforms = [\n            {\n                scaleX: scaleAnimation.x.interpolate({\n                    inputRange: [0, menuLayout.width],\n                    outputRange: [0, 1],\n                }),\n            },\n            {\n                scaleY: scaleAnimation.y.interpolate({\n                    inputRange: [0, menuLayout.height],\n                    outputRange: [0, 1],\n                }),\n            },\n        ];\n\n        const windowLayout = Dimensions.get(\"window\");\n\n        // We need to translate menu while animating scale to imitate transform origin for scale animation\n        const positionTransforms = [];\n\n        // Check if menu fits horizontally and if not align it to right.\n        if (left <= windowLayout.width - menuLayout.width - SCREEN_INDENT) {\n            positionTransforms.push({\n                translateX: scaleAnimation.x.interpolate({\n                    inputRange: [0, menuLayout.width],\n                    outputRange: [-(menuLayout.width / 2), 0],\n                }),\n            });\n\n            // Check if menu position has enough space from left side\n            if (left < SCREEN_INDENT) {\n                left = SCREEN_INDENT;\n            }\n        } else {\n            positionTransforms.push({\n                translateX: scaleAnimation.x.interpolate({\n                    inputRange: [0, menuLayout.width],\n                    outputRange: [menuLayout.width / 2, 0],\n                }),\n            });\n\n            left += anchorLayout.width - menuLayout.width;\n\n            const right = left + menuLayout.width;\n            // Check if menu position has enough space from right side\n            if (right > windowLayout.width - SCREEN_INDENT) {\n                left = windowLayout.width - SCREEN_INDENT - menuLayout.width;\n            }\n        }\n\n        // If the menu is larger than available vertical space,\n        // calculate the height of scrollable view\n        let scrollableMenuHeight = 0;\n\n        // Check if the menu should be scrollable\n        if (\n            // Check if the menu overflows from bottom side\n            top >=\n            windowLayout.height -\n            menuLayout.height -\n            SCREEN_INDENT -\n            additionalVerticalValue &&\n            // And bottom side of the screen has more space than top side\n            top <= windowLayout.height - top\n        ) {\n            // Scrollable menu should be below the anchor (expands downwards)\n            scrollableMenuHeight =\n                windowLayout.height - top - SCREEN_INDENT - additionalVerticalValue;\n        } else if (\n            // Check if the menu overflows from bottom side\n            top >=\n            windowLayout.height -\n            menuLayout.height -\n            SCREEN_INDENT -\n            additionalVerticalValue &&\n            // And top side of the screen has more space than bottom side\n            top >= windowLayout.height - top &&\n            // And menu overflows from top side\n            top <=\n            menuLayout.height -\n            anchorLayout.height +\n            SCREEN_INDENT -\n            additionalVerticalValue\n        ) {\n            // Scrollable menu should be above the anchor (expands upwards)\n            scrollableMenuHeight =\n                top + anchorLayout.height - SCREEN_INDENT + additionalVerticalValue;\n        }\n\n        // Scrollable menu max height\n        scrollableMenuHeight =\n            scrollableMenuHeight > windowLayout.height - 2 * SCREEN_INDENT\n                ? windowLayout.height - 2 * SCREEN_INDENT\n                : scrollableMenuHeight;\n\n        // Menu is typically positioned below the element that generates it\n        // So first check if it fits below the anchor (expands downwards)\n        if (\n            // Check if menu fits vertically\n            top <=\n            windowLayout.height -\n            menuLayout.height -\n            SCREEN_INDENT -\n            additionalVerticalValue ||\n            // Or if the menu overflows from bottom side\n            (top >=\n                windowLayout.height -\n                menuLayout.height -\n                SCREEN_INDENT -\n                additionalVerticalValue &&\n                // And bottom side of the screen has more space than top side\n                top <= windowLayout.height - top)\n        ) {\n            positionTransforms.push({\n                translateY: scaleAnimation.y.interpolate({\n                    inputRange: [0, menuLayout.height],\n                    outputRange: [-((scrollableMenuHeight || menuLayout.height) / 2), 0],\n                }),\n            });\n\n            // Check if menu position has enough space from top side\n            if (top < SCREEN_INDENT) {\n                top = SCREEN_INDENT;\n            }\n        } else {\n            positionTransforms.push({\n                translateY: scaleAnimation.y.interpolate({\n                    inputRange: [0, menuLayout.height],\n                    outputRange: [(scrollableMenuHeight || menuLayout.height) / 2, 0],\n                }),\n            });\n\n            top += anchorLayout.height - (scrollableMenuHeight || menuLayout.height);\n\n            const bottom =\n                top +\n                (scrollableMenuHeight || menuLayout.height) +\n                additionalVerticalValue;\n\n            // Check if menu position has enough space from bottom side\n            if (bottom > windowLayout.height - SCREEN_INDENT) {\n                top =\n                    scrollableMenuHeight === windowLayout.height - 2 * SCREEN_INDENT\n                        ? -SCREEN_INDENT * 2\n                        : windowLayout.height -\n                        menuLayout.height -\n                        SCREEN_INDENT -\n                        additionalVerticalValue;\n            }\n        }\n\n        const shadowMenuContainerStyle = {\n            opacity: opacityAnimation,\n            transform: scaleTransforms,\n            borderRadius: theme.roundness,\n            ...(scrollableMenuHeight ? { height: scrollableMenuHeight } : {}),\n        };\n\n        const positionStyle = {\n            top: this.isAnchorCoord() ? top : top + additionalVerticalValue,\n            ...(I18nManager.isRTL ? { right: left } : { left }),\n        };\n\n        return (\n            <View\n                ref={(ref) => {\n                    this.anchor = ref;\n                }}\n                collapsable={false}\n            >\n                {this.isAnchorCoord() ? null : anchor}\n                {rendered ? (\n                    <Portal\n                        theme={theme}\n                    >\n                        <TouchableWithoutFeedback\n                            accessibilityLabel={overlayAccessibilityLabel}\n                            accessibilityRole=\"button\"\n                            onPress={onDismiss}\n                        >\n                            <View style={StyleSheet.absoluteFill} />\n                        </TouchableWithoutFeedback>\n                        <View\n                            ref={(ref) => {\n                                this.menu = ref;\n                            }}\n                            collapsable={false}\n                            accessibilityViewIsModal={visible}\n                            style={[styles.wrapper, positionStyle, style]}\n                            pointerEvents={visible ? \"box-none\" : \"none\"}\n                            onAccessibilityEscape={onDismiss}\n                        >\n                            <Animated.View style={{ transform: positionTransforms }}>\n                                <Surface\n                                    style={\n                                        [\n                                            styles.shadowMenuContainer,\n                                            shadowMenuContainerStyle,\n                                            contentStyle,\n                                        ] as StyleProp<ViewStyle>\n                                    }\n                                >\n                                    {(scrollableMenuHeight && (\n                                        <ScrollView>{children}</ScrollView>\n                                    )) || <React.Fragment>{children}</React.Fragment>}\n                                </Surface>\n                            </Animated.View>\n                        </View>\n                    </Portal>\n                ) : null}\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    wrapper: {\n        position: \"absolute\",\n    },\n    shadowMenuContainer: {\n        opacity: 0,\n        paddingVertical: 8,\n        elevation: 8,\n    },\n});\n\nexport default DropdownInput;\n"]}