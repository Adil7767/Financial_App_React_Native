{"version":3,"sources":["CalendarHeader.tsx"],"names":["dayjs","React","Platform","Text","TouchableOpacity","View","eventCellCss","u","useTheme","isToday","typedMemo","_CalendarHeader","dateRange","cellHeight","style","allDayEvents","onPressDateHeader","_onPress","useCallback","date","theme","borderColor","palette","gray","primaryBg","backgroundColor","primary","main","isRTL","map","_isToday","toDate","undefined","toString","height","typography","xs","color","format","contrastText","xl","OS","event","isBetween","start","end","title","fontSize","sm","CalendarHeader"],"mappings":"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","sourcesContent":["import dayjs from \"dayjs\";\nimport * as React from \"react\";\nimport { Platform, Text, TouchableOpacity, View, ViewStyle } from \"react-native\";\n\nimport { eventCellCss, u } from \"./styles/commonStyles\";\nimport { ICalendarEvent } from \"./interfaces\";\nimport { useTheme } from \"./theme/ThemeContext\";\nimport { isToday, typedMemo } from \"./utils\";\n\nexport interface CalendarHeaderProps<T> {\n    dateRange: dayjs.Dayjs[]\n    cellHeight: number\n    style: ViewStyle\n    allDayEvents: ICalendarEvent<T>[]\n    onPressDateHeader?: (date: Date) => void\n}\n\nfunction _CalendarHeader<T>({\n    dateRange,\n    cellHeight,\n    style,\n    allDayEvents,\n    onPressDateHeader,\n}: CalendarHeaderProps<T>) {\n    const _onPress = React.useCallback(\n        (date: Date) => {\n            onPressDateHeader && onPressDateHeader(date);\n        },\n        [onPressDateHeader],\n    );\n\n    const theme = useTheme();\n\n    const borderColor = { borderColor: theme.palette.gray[\"200\"] };\n    const primaryBg = { backgroundColor: theme.palette.primary.main };\n\n    return (\n        <View\n            style={[\n                u[\"border-b-2\"],\n                borderColor,\n                theme.isRTL ? u[\"flex-row-reverse\"] : u[\"flex-row\"],\n                style,\n            ]}\n        >\n            <View style={[u[\"z-10\"], u[\"w-50\"], borderColor]} />\n            {dateRange.map((date) => {\n                const _isToday = isToday(date);\n                return (\n                    <TouchableOpacity\n                        style={[u[\"flex-1\"], u[\"pt-2\"]]}\n                        onPress={() => _onPress(date.toDate())}\n                        disabled={onPressDateHeader === undefined}\n                        key={date.toString()}\n                    >\n                        <View style={[u[\"justify-between\"], { height: cellHeight }]}>\n                            <Text\n                                style={[\n                                    theme.typography.xs,\n                                    u[\"text-center\"],\n                                    { color: _isToday ? theme.palette.primary.main : theme.palette.gray[\"500\"] },\n                                ]}\n                            >\n                                {date.format(\"ddd\")}\n                            </Text>\n                            <View\n                                style={\n                                    _isToday\n                                        ? [\n                                            primaryBg,\n                                            u[\"h-36\"],\n                                            u[\"w-36\"],\n                                            u[\"pb-6\"],\n                                            u[\"rounded-full\"],\n                                            u[\"items-center\"],\n                                            u[\"justify-center\"],\n                                            u[\"self-center\"],\n                                            u[\"z-20\"],\n                                        ]\n                                        : [u[\"mb-6\"]]\n                                }\n                            >\n                                <Text\n                                    style={[\n                                        {\n                                            color: _isToday\n                                                ? theme.palette.primary.contrastText\n                                                : theme.palette.gray[\"800\"],\n                                        },\n                                        theme.typography.xl,\n                                        u[\"text-center\"],\n                                        Platform.OS === \"web\" && _isToday && u[\"mt-6\"],\n                                    ]}\n                                >\n                                    {date.format(\"D\")}\n                                </Text>\n                            </View>\n                        </View>\n                        <View\n                            style={[\n                                u[\"border-l\"],\n                                { borderColor: theme.palette.gray[\"200\"] },\n                                { height: cellHeight },\n                            ]}\n                        >\n                            {allDayEvents.map((event) => {\n                                if (!dayjs(date).isBetween(event.start, event.end, \"day\", \"[]\")) {\n                                    return null;\n                                }\n                                return (\n                                    <View\n                                        style={[eventCellCss.style, primaryBg, u[\"mt-2\"]]}\n                                        key={`${event.start}${event.title}`}\n                                    >\n                                        <Text\n                                            style={{\n                                                fontSize: theme.typography.sm.fontSize,\n                                                color: theme.palette.primary.contrastText,\n                                            }}\n                                        >\n                                            {event.title}\n                                        </Text>\n                                    </View>\n                                );\n                            })}\n                        </View>\n                    </TouchableOpacity>\n                );\n            })}\n        </View>\n    );\n}\n\nexport const CalendarHeader = typedMemo(_CalendarHeader);\n"]}