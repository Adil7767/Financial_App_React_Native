{"version":3,"sources":["CalendarBody.tsx"],"names":["dayjs","React","Platform","ScrollView","StyleSheet","View","u","useNow","usePanResponder","useTheme","getCountOfEventsAtEvent","getOrderOfEvent","getRelativeTopInDay","hours","isToday","typedMemo","CalendarEvent","HourGuideCell","HourGuideColumn","styles","create","nowIndicator","position","zIndex","height","width","_CalendarBody","containerHeight","cellHeight","dateRange","style","onPressCell","events","onPressEvent","eventCellStyle","ampm","showTime","scrollOffsetMinutes","onSwipeHorizontal","hideNowIndicator","overlapOffset","renderEvent","scrollView","useRef","now","useEffect","current","OS","setTimeout","scrollTo","y","animated","panResponder","_onPressCell","useCallback","date","toDate","_renderMappedEvent","event","start","title","end","theme","panHandlers","x","isRTL","map","hour","toString","filter","isBetween","startOf","endOf","isBefore","isAfter","backgroundColor","palette","top","CalendarBody"],"mappings":"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","sourcesContent":["import dayjs from \"dayjs\";\nimport * as React from \"react\";\nimport { Platform, ScrollView, StyleSheet, View, ViewStyle } from \"react-native\";\n\nimport { u } from \"./styles/commonStyles\";\nimport { useNow } from \"./hooks/useNow\";\nimport { usePanResponder } from \"./hooks/usePanResponder\";\nimport { EventCellStyle, EventRenderer, HorizontalDirection, ICalendarEvent } from \"./interfaces\";\nimport { useTheme } from \"./theme/ThemeContext\";\nimport {\n    getCountOfEventsAtEvent,\n    getOrderOfEvent,\n    getRelativeTopInDay,\n    hours,\n    isToday,\n    typedMemo,\n} from \"./utils\";\nimport { CalendarEvent } from \"./CalendarEvent\";\nimport { HourGuideCell } from \"./HourGuideCell\";\nimport { HourGuideColumn } from \"./HourGuideColumn\";\n\nconst styles = StyleSheet.create({\n    nowIndicator: {\n        position: \"absolute\",\n        zIndex: 10000,\n        height: 2,\n        width: \"100%\",\n    },\n});\n\ninterface CalendarBodyProps<T> {\n    cellHeight: number\n    containerHeight: number\n    dateRange: dayjs.Dayjs[]\n    events: ICalendarEvent<T>[]\n    scrollOffsetMinutes: number\n    ampm: boolean\n    showTime: boolean\n    style: ViewStyle\n    eventCellStyle?: EventCellStyle<T>\n    hideNowIndicator?: boolean\n    overlapOffset?: number\n    onPressCell?: (date: Date) => void\n    onPressEvent?: (event: ICalendarEvent<T>) => void\n    onSwipeHorizontal?: (d: HorizontalDirection) => void\n    renderEvent?: EventRenderer<T>\n}\n\nfunction _CalendarBody<T>({\n    containerHeight,\n    cellHeight,\n    dateRange,\n    style,\n    onPressCell,\n    events,\n    onPressEvent,\n    eventCellStyle,\n    ampm,\n    showTime,\n    scrollOffsetMinutes,\n    onSwipeHorizontal,\n    hideNowIndicator,\n    overlapOffset,\n    renderEvent,\n}: CalendarBodyProps<T>) {\n    const scrollView = React.useRef<ScrollView>(null);\n    const { now } = useNow(!hideNowIndicator);\n\n    React.useEffect(() => {\n        if (scrollView.current && scrollOffsetMinutes && Platform.OS !== \"ios\") {\n            // We add delay here to work correct on React Native\n            // see: https://stackoverflow.com/questions/33208477/react-native-android-scrollview-scrollto-not-working\n            setTimeout(\n                () => {\n                    if (scrollView && scrollView.current) {\n                        scrollView.current.scrollTo({\n                            y: (cellHeight * scrollOffsetMinutes) / 60,\n                            animated: false,\n                        });\n                    }\n                },\n                Platform.OS === \"web\" ? 0 : 10,\n            );\n        }\n    }, [scrollView, scrollOffsetMinutes, cellHeight]);\n\n    const panResponder = usePanResponder({\n        onSwipeHorizontal,\n    });\n\n    const _onPressCell = React.useCallback(\n        (date: dayjs.Dayjs) => {\n            onPressCell && onPressCell(date.toDate());\n        },\n        [onPressCell],\n    );\n\n    const _renderMappedEvent = (event: ICalendarEvent<T>) => (\n        <CalendarEvent\n            key={`${event.start}${event.title}${event.end}`}\n            event={event}\n            onPressEvent={onPressEvent}\n            eventCellStyle={eventCellStyle}\n            showTime={showTime}\n            eventCount={getCountOfEventsAtEvent(event, events)}\n            eventOrder={getOrderOfEvent(event, events)}\n            overlapOffset={overlapOffset}\n            renderEvent={renderEvent}\n            ampm={ampm}\n        />\n    );\n\n    const theme = useTheme();\n\n    return (\n        <ScrollView\n            style={[\n                {\n                    height: containerHeight - cellHeight * 3,\n                },\n                style,\n            ]}\n            ref={scrollView}\n            scrollEventThrottle={32}\n            {...(Platform.OS !== \"web\" ? panResponder.panHandlers : {})}\n            showsVerticalScrollIndicator={false}\n            nestedScrollEnabled\n            contentOffset={Platform.OS === \"ios\" ? { x: 0, y: scrollOffsetMinutes } : { x: 0, y: 0 }}\n        >\n            <View\n                style={[u[\"flex-1\"], theme.isRTL ? u[\"flex-row-reverse\"] : u[\"flex-row\"]]}\n                {...(Platform.OS === \"web\" ? panResponder.panHandlers : {})}\n            >\n                <View style={[u[\"z-20\"], u[\"w-50\"]]}>\n                    {hours.map((hour) => (\n                        <HourGuideColumn key={hour} cellHeight={cellHeight} hour={hour} ampm={ampm} />\n                    ))}\n                </View>\n                {dateRange.map((date) => (\n                    <View style={[u[\"flex-1\"], u[\"overflow-hidden\"]]} key={date.toString()}>\n                        {hours.map((hour) => (\n                            <HourGuideCell\n                                key={hour}\n                                cellHeight={cellHeight}\n                                date={date}\n                                hour={hour}\n                                onPress={_onPressCell}\n                            />\n                        ))}\n\n                        {/* Render events of this date */}\n                        {/* M  T  (W)  T  F  S  S */}\n                        {/*       S-E             */}\n                        {events\n                            .filter(({ start }) =>\n                                dayjs(start).isBetween(date.startOf(\"day\"), date.endOf(\"day\"), null, \"[)\"),\n                            )\n                            .map(_renderMappedEvent)}\n\n                        {/* Render events which starts before this date and ends on this date */}\n                        {/* M  T  (W)  T  F  S  S */}\n                        {/* S------E              */}\n                        {events\n                            .filter(\n                                ({ start, end }) =>\n                                    dayjs(start).isBefore(date.startOf(\"day\")) &&\n                                    dayjs(end).isBetween(date.startOf(\"day\"), date.endOf(\"day\"), null, \"[)\"),\n                            )\n                            .map((event) => ({\n                                ...event,\n                                start: dayjs(event.end).startOf(\"day\"),\n                            }))\n                            .map(_renderMappedEvent)}\n\n                        {/* Render events which starts before this date and ends after this date */}\n                        {/* M  T  (W)  T  F  S  S */}\n                        {/*    S-------E          */}\n                        {events\n                            .filter(\n                                ({ start, end }) =>\n                                    dayjs(start).isBefore(date.startOf(\"day\")) &&\n                                    dayjs(end).isAfter(date.endOf(\"day\")),\n                            )\n                            .map((event) => ({\n                                ...event,\n                                start: dayjs(event.end).startOf(\"day\"),\n                                end: dayjs(event.end).endOf(\"day\"),\n                            }))\n                            .map(_renderMappedEvent)}\n\n                        {isToday(date) && !hideNowIndicator && (\n                            <View\n                                style={[\n                                    styles.nowIndicator,\n                                    { backgroundColor: theme.palette.nowIndicator },\n                                    { top: `${getRelativeTopInDay(now)}%` },\n                                ]}\n                            />\n                        )}\n                    </View>\n                ))}\n            </View>\n        </ScrollView>\n    );\n}\n\nexport const CalendarBody = typedMemo(_CalendarBody);\n"]}