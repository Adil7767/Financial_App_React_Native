{"version":3,"sources":["CalendarHeaderForMonthView.tsx"],"names":["dayjs","React","Text","View","u","useTheme","getDatesInWeek","typedMemo","_CalendarHeaderForMonthView","locale","weekStartsOn","style","dates","Date","todayWeekNum","day","theme","borderColor","palette","gray","isRTL","map","date","flex","paddingTop","toISOString","height","color","primary","main","format","CalendarHeaderForMonthView"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,EAAeC,IAAf,QAAsC,cAAtC;AAEA,SAASC,CAAT,QAAkB,uBAAlB;AAEA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,cAAT,EAAyBC,SAAzB,QAA0C,SAA1C;;AAQA,SAASC,2BAAT,CAAqC;AACjCC,EAAAA,MADiC;AAEjCC,EAAAA,YAFiC;AAGjCC,EAAAA;AAHiC,CAArC,EAIoC;AAChC,QAAMC,KAAK,GAAGN,cAAc,CAAC,IAAIO,IAAJ,EAAD,EAAaH,YAAb,EAA2BD,MAA3B,CAA5B;AACA,QAAMK,YAAY,GAAGd,KAAK,GAAGe,GAAR,EAArB;AAEA,QAAMC,KAAK,GAAGX,QAAQ,EAAtB;AAEA,sBACI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAE,CACHD,CAAC,CAAC,UAAD,CADE,EAEH;AAAEa,MAAAA,WAAW,EAAED,KAAK,CAACE,OAAN,CAAcC,IAAd,CAAmB,KAAnB;AAAf,KAFG,EAGHH,KAAK,CAACI,KAAN,GAAchB,CAAC,CAAC,kBAAD,CAAf,GAAsCA,CAAC,CAAC,UAAD,CAHpC,EAIHO,KAJG;AADX,KAQKC,KAAK,CAACS,GAAN,CAAWC,IAAD,iBACP,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,UAAU,EAAE;AAAvB,KAAb;AAAyC,IAAA,GAAG,EAAEF,IAAI,CAACG,WAAL;AAA9C,kBACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV;AAAb,kBACI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAE,CACHtB,CAAC,CAAC,aAAD,CADE,EAEH;AACIuB,MAAAA,KAAK,EACDb,YAAY,KAAKQ,IAAI,CAACP,GAAL,EAAjB,GACMC,KAAK,CAACE,OAAN,CAAcU,OAAd,CAAsBC,IAD5B,GAEMb,KAAK,CAACE,OAAN,CAAcC,IAAd,CAAmB,KAAnB;AAJd,KAFG;AADX,KAWKG,IAAI,CAACQ,MAAL,CAAY,KAAZ,CAXL,CADJ,CADJ,CADH,CARL,CADJ;AA8BH;;AAED,OAAO,MAAMC,0BAA0B,GAAGxB,SAAS,CAACC,2BAAD,CAA5C","sourcesContent":["import dayjs from \"dayjs\";\nimport * as React from \"react\";\nimport { Text, View, ViewStyle } from \"react-native\";\n\nimport { u } from \"./styles/commonStyles\";\nimport { WeekNum } from \"./interfaces\";\nimport { useTheme } from \"./theme/ThemeContext\";\nimport { getDatesInWeek, typedMemo } from \"./utils\";\n\nexport interface CalendarHeaderForMonthViewProps {\n    weekStartsOn: WeekNum\n    locale: string\n    style: ViewStyle\n}\n\nfunction _CalendarHeaderForMonthView({\n    locale,\n    weekStartsOn,\n    style,\n}: CalendarHeaderForMonthViewProps) {\n    const dates = getDatesInWeek(new Date(), weekStartsOn, locale);\n    const todayWeekNum = dayjs().day();\n\n    const theme = useTheme();\n\n    return (\n        <View\n            style={[\n                u[\"border-b\"],\n                { borderColor: theme.palette.gray[\"100\"] },\n                theme.isRTL ? u[\"flex-row-reverse\"] : u[\"flex-row\"],\n                style,\n            ]}\n        >\n            {dates.map((date) => (\n                <View style={{ flex: 1, paddingTop: 2 }} key={date.toISOString()}>\n                    <View style={{ height: 30 }}>\n                        <Text\n                            style={[\n                                u[\"text-center\"],\n                                {\n                                    color:\n                                        todayWeekNum === date.day()\n                                            ? theme.palette.primary.main\n                                            : theme.palette.gray[\"800\"],\n                                },\n                            ]}\n                        >\n                            {date.format(\"ddd\")}\n                        </Text>\n                    </View>\n                </View>\n            ))}\n        </View>\n    );\n}\n\nexport const CalendarHeaderForMonthView = typedMemo(_CalendarHeaderForMonthView);\n"]}