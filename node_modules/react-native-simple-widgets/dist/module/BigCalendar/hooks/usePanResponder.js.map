{"version":3,"sources":["usePanResponder.tsx"],"names":["React","PanResponder","SWIPE_THRESHOLD","usePanResponder","onSwipeHorizontal","panHandled","setPanHandled","useState","panResponder","useMemo","create","onMoveShouldSetPanResponder","_","dx","dy","onPanResponderMove","onPanResponderEnd"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,YAAT,QAA6B,cAA7B;AAGA,MAAMC,eAAe,GAAG,EAAxB;AAEA,OAAO,SAASC,eAAT,CAAyB;AAC5BC,EAAAA;AAD4B,CAAzB,EAIJ;AACC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,KAAK,CAACO,QAAN,CAAe,KAAf,CAApC;AAEA,QAAMC,YAAY,GAAGR,KAAK,CAACS,OAAN,CACjB,MACIR,YAAY,CAACS,MAAb,CAAoB;AAChB;AACAC,IAAAA,2BAA2B,EAAE,CAACC,CAAD,EAAI;AAAEC,MAAAA,EAAF;AAAMC,MAAAA;AAAN,KAAJ,KAAmB;AAC5C,aAAOD,EAAE,GAAG,CAAL,IAAUA,EAAE,GAAG,CAAC,CAAhB,IAAqBC,EAAE,GAAG,CAA1B,IAA+BA,EAAE,GAAG,CAAC,CAA5C;AACH,KAJe;AAKhBC,IAAAA,kBAAkB,EAAE,CAACH,CAAD,EAAI;AAAEE,MAAAA,EAAF;AAAMD,MAAAA;AAAN,KAAJ,KAAmB;AACnC,UAAIC,EAAE,GAAG,CAAC,CAAD,GAAKZ,eAAV,IAA6BA,eAAe,GAAGY,EAA/C,IAAqDT,UAAzD,EAAqE;AACjE;AACH;;AACD,UAAIQ,EAAE,GAAG,CAAC,CAAD,GAAKX,eAAd,EAA+B;AAC3BE,QAAAA,iBAAiB,IAAIA,iBAAiB,CAAC,MAAD,CAAtC;AACAE,QAAAA,aAAa,CAAC,IAAD,CAAb;AACA;AACH;;AACD,UAAIO,EAAE,GAAGX,eAAT,EAA0B;AACtBE,QAAAA,iBAAiB,IAAIA,iBAAiB,CAAC,OAAD,CAAtC;AACAE,QAAAA,aAAa,CAAC,IAAD,CAAb;AACA;AACH;AACJ,KAnBe;AAoBhBU,IAAAA,iBAAiB,EAAE,MAAM;AACrBV,MAAAA,aAAa,CAAC,KAAD,CAAb;AACH;AAtBe,GAApB,CAFa,EA0BjB,CAACD,UAAD,EAAaD,iBAAb,CA1BiB,CAArB;AA6BA,SAAOI,YAAP;AACH","sourcesContent":["import * as React from \"react\";\nimport { PanResponder } from \"react-native\";\nimport { HorizontalDirection } from \"../interfaces\";\n\nconst SWIPE_THRESHOLD = 50;\n\nexport function usePanResponder({\n    onSwipeHorizontal,\n}: {\n    onSwipeHorizontal?: (d: HorizontalDirection) => void\n}) {\n    const [panHandled, setPanHandled] = React.useState(false);\n\n    const panResponder = React.useMemo(\n        () =>\n            PanResponder.create({\n                // see https://stackoverflow.com/questions/47568850/touchableopacity-with-parent-panresponder\n                onMoveShouldSetPanResponder: (_, { dx, dy }) => {\n                    return dx > 2 || dx < -2 || dy > 2 || dy < -2;\n                },\n                onPanResponderMove: (_, { dy, dx }) => {\n                    if (dy < -1 * SWIPE_THRESHOLD || SWIPE_THRESHOLD < dy || panHandled) {\n                        return;\n                    }\n                    if (dx < -1 * SWIPE_THRESHOLD) {\n                        onSwipeHorizontal && onSwipeHorizontal(\"LEFT\");\n                        setPanHandled(true);\n                        return;\n                    }\n                    if (dx > SWIPE_THRESHOLD) {\n                        onSwipeHorizontal && onSwipeHorizontal(\"RIGHT\");\n                        setPanHandled(true);\n                        return;\n                    }\n                },\n                onPanResponderEnd: () => {\n                    setPanHandled(false);\n                },\n            }),\n        [panHandled, onSwipeHorizontal],\n    );\n\n    return panResponder;\n}\n"]}