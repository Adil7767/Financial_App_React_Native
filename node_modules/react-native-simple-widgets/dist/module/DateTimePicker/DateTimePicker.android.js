function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import * as React from "react";
import DateTimePicker from "@react-native-community/datetimepicker"; // Memo workaround for https://github.com/react-native-community/datetimepicker/issues/54

const areEqual = (prevProps, nextProps) => {
  return prevProps.isVisible === nextProps.isVisible && prevProps.date.getTime() === nextProps.date.getTime();
};

const DateTimePickerModal = /*#__PURE__*/React.memo(props => {
  const {
    date,
    mode,
    isVisible,
    onCancel,
    onConfirm,
    onHide,
    ...otherProps
  } = props;
  const currentDateRef = React.useRef(date);
  const [currentMode, setCurrentMode] = React.useState(null);
  React.useEffect(() => {
    if (isVisible && currentMode === null) {
      setCurrentMode(mode === "time" ? "time" : "date");
    } else if (!isVisible) {
      setCurrentMode(null);
    }
  }, [isVisible, currentMode, mode]);
  if (!isVisible || !currentMode) return null;

  const handleChange = (event, date) => {
    if (event.type === "dismissed") {
      onCancel();
      onHide(false);
      return;
    }

    let nextDate = date;

    if (mode === "datetime") {
      if (currentMode === "date") {
        setCurrentMode("time");
        currentDateRef.current = new Date(date);
        return;
      } else if (currentMode === "time") {
        const year = currentDateRef.current.getFullYear();
        const month = currentDateRef.current.getMonth();
        const day = currentDateRef.current.getDate();
        const hours = date.getHours();
        const minutes = date.getMinutes();
        nextDate = new Date(year, month, day, hours, minutes);
      }
    }

    onConfirm(nextDate);
    onHide(true, nextDate);
  };

  return /*#__PURE__*/React.createElement(DateTimePicker, _extends({}, otherProps, {
    mode: currentMode,
    value: date,
    onChange: handleChange
  }));
}, areEqual); // DateTimePickerModal.defaultProps = {
//     date: new Date(),
//     isVisible: false,
// };

export default DateTimePickerModal;
//# sourceMappingURL=DateTimePicker.android.js.map