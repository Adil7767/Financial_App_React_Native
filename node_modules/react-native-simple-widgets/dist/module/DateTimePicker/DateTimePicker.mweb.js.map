{"version":3,"sources":["DateTimePicker.mweb.tsx"],"names":["React","StyleSheet","Text","TouchableHighlight","View","Appearance","dfSet","DateTimePicker","Modal","isIphoneX","BACKGROUND_COLOR_LIGHT","BACKGROUND_COLOR_DARK","BORDER_COLOR","BORDER_COLOR_DARK","BORDER_RADIUS","BUTTON_FONT_WEIGHT","BUTTON_FONT_COLOR","BUTTON_FONT_SIZE","HIGHLIGHT_COLOR_DARK","HIGHLIGHT_COLOR_LIGHT","TITLE_FONT_SIZE","TITLE_COLOR","convertValuesToDate","cur","values","index","use12Hours","newDate","year","month","date","hours","getHours","parseInt","minutes","DateTimePickerWeb","PureComponent","currentDate","props","isPickerVisible","isVisible","didPressConfirm","onCancel","onConfirm","state","onHide","setState","onChange","getDerivedStateFromProps","render","cancelTextIOS","confirmTextIOS","headerTextIOS","isDarkModeEnabled","modalStyleIOS","modalPropsIOS","pickerContainerStyleIOS","otherProps","isAppearanceModuleAvailable","getColorScheme","_isDarkModeEnabled","undefined","ConfirmButtonComponent","ConfirmButton","CancelButtonComponent","CancelButton","HeaderComponent","Header","PickerComponent","themedContainerStyle","pickerStyles","containerDark","containerLight","headerText","mode","modal","handleCancel","handleHide","container","handleChange","handleConfirm","Date","create","justifyContent","margin","borderRadius","marginBottom","overflow","backgroundColor","label","style","headerStyles","root","text","borderBottomColor","borderBottomWidth","hairlineWidth","padding","textAlign","color","fontSize","onPress","confirmButtonStyles","themedButtonStyle","buttonDark","buttonLight","underlayColor","button","borderTopWidth","height","borderColor","fontWeight","cancelButtonStyles"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n    StyleSheet,\n    Text,\n    TouchableHighlight,\n    View,\n    Appearance,\n} from \"react-native\";\nimport dfSet from \"date-fns/set\";\nimport DateTimePicker from \"./mweb/DateTimePicker\";\nimport Modal from \"./Modal\";\nimport { isIphoneX } from \"./utils\";\n\nexport const BACKGROUND_COLOR_LIGHT = \"white\";\nexport const BACKGROUND_COLOR_DARK = \"#0E0E0E\";\nexport const BORDER_COLOR = \"#d5d5d5\";\nexport const BORDER_COLOR_DARK = \"#272729\";\nexport const BORDER_RADIUS = 13;\nexport const BUTTON_FONT_WEIGHT = \"normal\";\nexport const BUTTON_FONT_COLOR = \"#007ff9\";\nexport const BUTTON_FONT_SIZE = 20;\nexport const HIGHLIGHT_COLOR_DARK = \"#444444\";\nexport const HIGHLIGHT_COLOR_LIGHT = \"#ebebeb\";\nexport const TITLE_FONT_SIZE = 20;\nexport const TITLE_COLOR = \"#8f8f8f\";\n\nconst convertValuesToDate = (cur, values, index, use12Hours) => {\n    let newDate = cur;\n    switch (index) {\n        case 0:\n            newDate = dfSet(newDate, { year: values[index] });\n            break;\n        case 1:\n            newDate = dfSet(newDate, { month: values[index] });\n            break;\n        case 2:\n            newDate = dfSet(newDate, { date: values[index] });\n            break;\n        case 3:\n            newDate = dfSet(newDate, { hours: use12Hours && newDate.getHours() >= 12 ? parseInt(values[index], 10) + 12 : values[index] });\n            break;\n        case 4:\n            newDate = dfSet(newDate, { minutes: values[index] });\n            break;\n        case 5:\n            if (parseInt(values[index], 10) === 0) {\n                newDate = dfSet(newDate, { hours: newDate.getHours() >= 12 ? newDate.getHours() - 12 : newDate.getHours() });\n            } else {\n                newDate = dfSet(newDate, { hours: newDate.getHours() + 12  });\n            }\n            break;\n    }\n\n    return newDate;\n}\n\nexport type Props = {\n    cancelTextIOS?: string,\n    confirmTextIOS?: string,\n    customCancelButtonIOS?: React.ReactElement,\n    customConfirmButtonIOS?: React.ReactElement,\n    customHeaderIOS?: React.ReactElement,\n    customPickerIOS?: React.ReactElement,\n    date?: Date,\n    mode?: string,\n    headerTextIOS?: string,\n    modalPropsIOS?: any,\n    modalStyleIOS?: any,\n    isDarkModeEnabled?: boolean,\n    isVisible?: boolean,\n    pickerContainerStyleIOS?: any,\n    onCancel: () => void,\n    onConfirm: (date) => void,\n    onChange?: (date) => void,\n    onHide?: (flag, date?) => void,\n    maximumDate?: Date,\n    minimumDate?: Date,\n    use12Hours?: boolean,\n};\n\nclass DateTimePickerWeb extends React.PureComponent<Props> {\n\n    static defaultProps = {\n        cancelTextIOS: \"Cancel\",\n        confirmTextIOS: \"Confirm\",\n        modalPropsIOS: {},\n        date: new Date(),\n        isDarkModeEnabled: undefined,\n        isVisible: false,\n        pickerContainerStyleIOS: {},\n        use12Hours: false,\n    };\n\n    state = {\n        currentDate: this.props.date,\n        isPickerVisible: this.props.isVisible,\n    };\n\n    didPressConfirm = false;\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.isVisible && !state.isPickerVisible) {\n            return { currentDate: props.date, isPickerVisible: true };\n        }\n        return null;\n    }\n\n    handleCancel = () => {\n        this.didPressConfirm = false;\n        this.props.onCancel();\n    };\n\n    handleConfirm = () => {\n        this.didPressConfirm = true;\n        this.props.onConfirm(this.state.currentDate);\n    };\n\n    handleHide = () => {\n        const { onHide } = this.props;\n        if (onHide) {\n            onHide(this.didPressConfirm, this.state.currentDate);\n        }\n        this.setState({ isPickerVisible: false });\n    };\n\n    handleChange = (date, index?) => {\n        if (this.props.onChange) {\n            this.props.onChange(date);\n        }\n        this.setState({ currentDate: convertValuesToDate(this.state.currentDate, date, index, this.props.use12Hours) });\n    };\n\n    render() {\n        const {\n            cancelTextIOS,\n            confirmTextIOS,\n            // customCancelButtonIOS,\n            // customConfirmButtonIOS,\n            // customHeaderIOS,\n            // customPickerIOS,\n            // date,\n            headerTextIOS,\n            isDarkModeEnabled,\n            isVisible,\n            modalStyleIOS,\n            modalPropsIOS,\n            pickerContainerStyleIOS,\n            // onCancel,\n            // onConfirm,\n            // onChange,\n            // onHide,\n            ...otherProps\n        } = this.props;\n        const isAppearanceModuleAvailable = !!(\n            Appearance && Appearance.getColorScheme\n        );\n        const _isDarkModeEnabled =\n            isDarkModeEnabled === undefined && isAppearanceModuleAvailable\n                ? Appearance.getColorScheme() === \"dark\"\n                : isDarkModeEnabled || false;\n\n        //   const ConfirmButtonComponent = customConfirmButtonIOS || ConfirmButton;\n        const ConfirmButtonComponent = ConfirmButton;\n        //   const CancelButtonComponent = customCancelButtonIOS || CancelButton;\n        const CancelButtonComponent = CancelButton;\n        //   const HeaderComponent = customHeaderIOS || Header;\n        const HeaderComponent = Header;\n        //   const PickerComponent = customPickerIOS || DateTimePicker;\n        const PickerComponent = DateTimePicker;\n\n\n        const themedContainerStyle = _isDarkModeEnabled\n            ? pickerStyles.containerDark\n            : pickerStyles.containerLight;\n\n        const headerText =\n            headerTextIOS || (this.props.mode === \"time\"\n                ? \"Pick a time\"\n                : \"Pick a date\");\n\n        return (\n            <Modal\n                isVisible={isVisible}\n                contentStyle={[pickerStyles.modal, modalStyleIOS]}\n                onBackdropPress={this.handleCancel}\n                onHide={this.handleHide}\n                {...modalPropsIOS}\n            >\n                <View\n                    style={[\n                        pickerStyles.container,\n                        themedContainerStyle,\n                        pickerContainerStyleIOS,\n                    ]}\n                >\n                    <HeaderComponent label={headerText} />\n                    <PickerComponent\n                        // display=\"spinner\"\n                        {...otherProps}\n                        date={this.state.currentDate}\n                        // onChange={this.handleChange}\n                        onValueChange={this.handleChange}\n                    />\n                    <ConfirmButtonComponent\n                        isDarkModeEnabled={_isDarkModeEnabled}\n                        onPress={this.handleConfirm}\n                        label={confirmTextIOS}\n                    />\n                </View>\n                <CancelButtonComponent\n                    isDarkModeEnabled={_isDarkModeEnabled}\n                    onPress={this.handleCancel}\n                    label={cancelTextIOS}\n                />\n            </Modal>\n        );\n    }\n}\n\nconst pickerStyles = StyleSheet.create({\n    modal: {\n        justifyContent: \"flex-end\",\n        margin: 10,\n    },\n    container: {\n        borderRadius: BORDER_RADIUS,\n        marginBottom: 8,\n        overflow: \"hidden\",\n    },\n    containerLight: {\n        backgroundColor: BACKGROUND_COLOR_LIGHT,\n    },\n    containerDark: {\n        backgroundColor: BACKGROUND_COLOR_DARK,\n    },\n});\n\nexport const Header = ({ label, style = headerStyles }) => {\n    return (\n        <View style={style.root}>\n            <Text style={style.text}>{label}</Text>\n        </View>\n    );\n};\n\nexport const headerStyles = StyleSheet.create({\n    root: {\n        borderBottomColor: BORDER_COLOR,\n        borderBottomWidth: StyleSheet.hairlineWidth,\n        padding: 14,\n        backgroundColor: \"transparent\",\n    },\n    text: {\n        textAlign: \"center\",\n        color: TITLE_COLOR,\n        fontSize: TITLE_FONT_SIZE,\n    },\n});\n\nexport const ConfirmButton = ({\n    isDarkModeEnabled,\n    onPress,\n    label,\n    style = confirmButtonStyles,\n}) => {\n    const themedButtonStyle = isDarkModeEnabled\n        ? confirmButtonStyles.buttonDark\n        : confirmButtonStyles.buttonLight;\n\n    const underlayColor = isDarkModeEnabled\n        ? HIGHLIGHT_COLOR_DARK\n        : HIGHLIGHT_COLOR_LIGHT;\n    return (\n        <TouchableHighlight\n            style={[themedButtonStyle, style.button]}\n            underlayColor={underlayColor}\n            onPress={onPress}\n            accessible={true}\n            accessibilityRole=\"button\"\n            accessibilityLabel={label}\n        >\n            <Text style={style.text}>{label}</Text>\n        </TouchableHighlight>\n    );\n};\n\nexport const confirmButtonStyles = StyleSheet.create({\n    button: {\n        borderTopWidth: StyleSheet.hairlineWidth,\n        backgroundColor: \"transparent\",\n        height: 57,\n        justifyContent: \"center\",\n    },\n    buttonLight: {\n        borderColor: BORDER_COLOR,\n    },\n    buttonDark: {\n        borderColor: BORDER_COLOR_DARK,\n    },\n    text: {\n        textAlign: \"center\",\n        color: BUTTON_FONT_COLOR,\n        fontSize: BUTTON_FONT_SIZE,\n        fontWeight: BUTTON_FONT_WEIGHT,\n        backgroundColor: \"transparent\",\n    },\n});\n\nexport const CancelButton = ({\n    isDarkModeEnabled,\n    onPress,\n    label,\n    style = cancelButtonStyles,\n}) => {\n    const themedButtonStyle = isDarkModeEnabled\n        ? cancelButtonStyles.buttonDark\n        : cancelButtonStyles.buttonLight;\n    const underlayColor = isDarkModeEnabled\n        ? HIGHLIGHT_COLOR_DARK\n        : HIGHLIGHT_COLOR_LIGHT;\n    return (\n        <TouchableHighlight\n            style={[style.button, themedButtonStyle]}\n            underlayColor={underlayColor}\n            onPress={onPress}\n            accessible={true}\n            accessibilityRole=\"button\"\n            accessibilityLabel={label}\n        >\n            <Text style={style.text}>{label}</Text>\n        </TouchableHighlight>\n    );\n};\n\nexport const cancelButtonStyles = StyleSheet.create({\n    button: {\n        borderRadius: BORDER_RADIUS,\n        height: 57,\n        marginBottom: isIphoneX() ? 20 : 0,\n        justifyContent: \"center\",\n    },\n    buttonLight: {\n        backgroundColor: BACKGROUND_COLOR_LIGHT,\n    },\n    buttonDark: {\n        backgroundColor: BACKGROUND_COLOR_DARK,\n    },\n    text: {\n        padding: 10,\n        textAlign: \"center\",\n        color: BUTTON_FONT_COLOR,\n        fontSize: BUTTON_FONT_SIZE,\n        fontWeight: \"600\",\n        backgroundColor: \"transparent\",\n    },\n});\n\nexport default DateTimePickerWeb;\n"]}