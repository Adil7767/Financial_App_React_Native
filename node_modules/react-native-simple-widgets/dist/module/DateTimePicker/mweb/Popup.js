function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import * as React from "react";
import PopupPicker from "../../SelectPicker/mweb/Popup";

class PopupDatePicker extends React.Component {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "onOk", v => {
      const {
        onChange,
        onOk
      } = this.props;

      if (onChange) {
        onChange(v);
      }

      if (onOk) {
        onOk(v);
      }
    });
  }

  render() {
    return /*#__PURE__*/React.createElement(PopupPicker, _extends({
      picker: this.props.datePicker,
      value: this.props.date
    }, this.props, {
      onOk: this.onOk
    }));
  }

}

_defineProperty(PopupDatePicker, "defaultProps", {
  pickerValueProp: "date",
  pickerValueChangeProp: "onDateChange"
});

export default PopupDatePicker;
//# sourceMappingURL=Popup.js.map