{"version":3,"sources":["SelectPicker.ios.tsx"],"names":["React","StyleSheet","Text","TouchableHighlight","View","Appearance","Picker","Modal","isIphoneX","BACKGROUND_COLOR_LIGHT","BACKGROUND_COLOR_DARK","BORDER_COLOR","BORDER_COLOR_DARK","BORDER_RADIUS","BUTTON_FONT_WEIGHT","BUTTON_FONT_COLOR","BUTTON_FONT_SIZE","HIGHLIGHT_COLOR_DARK","HIGHLIGHT_COLOR_LIGHT","TITLE_FONT_SIZE","TITLE_COLOR","SelectPicker","PureComponent","currentDate","props","date","isPickerVisible","isVisible","didPressConfirm","onCancel","onConfirm","state","onHide","setState","value","index","onChange","getDerivedStateFromProps","render","cancelTextIOS","confirmTextIOS","headerTextIOS","isDarkModeEnabled","modalStyleIOS","modalPropsIOS","pickerContainerStyleIOS","options","otherProps","isAppearanceModuleAvailable","getColorScheme","_isDarkModeEnabled","undefined","ConfirmButtonComponent","ConfirmButton","CancelButtonComponent","CancelButton","HeaderComponent","Header","PickerComponent","themedContainerStyle","pickerStyles","containerDark","containerLight","headerText","modal","handleCancel","handleHide","container","handleChange","map","item","label","handleConfirm","Date","create","justifyContent","margin","borderRadius","marginBottom","overflow","backgroundColor","style","headerStyles","root","text","borderBottomColor","borderBottomWidth","hairlineWidth","padding","textAlign","color","fontSize","onPress","confirmButtonStyles","themedButtonStyle","buttonDark","buttonLight","underlayColor","button","borderTopWidth","height","borderColor","fontWeight","cancelButtonStyles"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n    StyleSheet,\n    Text,\n    TouchableHighlight,\n    View,\n    Appearance,\n} from \"react-native\";\nimport { Picker } from \"@react-native-picker/picker\";\nimport Modal from \"./Modal\";\nimport { isIphoneX } from \"./utils\";\n\nexport const BACKGROUND_COLOR_LIGHT = \"white\";\nexport const BACKGROUND_COLOR_DARK = \"#0E0E0E\";\nexport const BORDER_COLOR = \"#d5d5d5\";\nexport const BORDER_COLOR_DARK = \"#272729\";\nexport const BORDER_RADIUS = 13;\nexport const BUTTON_FONT_WEIGHT = \"normal\";\nexport const BUTTON_FONT_COLOR = \"#007ff9\";\nexport const BUTTON_FONT_SIZE = 20;\nexport const HIGHLIGHT_COLOR_DARK = \"#444444\";\nexport const HIGHLIGHT_COLOR_LIGHT = \"#ebebeb\";\nexport const TITLE_FONT_SIZE = 20;\nexport const TITLE_COLOR = \"#8f8f8f\";\n\ntype Props = {\n    cancelTextIOS?: string,\n    confirmTextIOS?: string,\n    customCancelButtonIOS?: React.ReactElement,\n    customConfirmButtonIOS?: React.ReactElement,\n    customHeaderIOS?: React.ReactElement,\n    customPickerIOS?: React.ReactElement,\n    date?: Date,\n    mode?: \"dialog\" | \"dropdown\",\n    headerTextIOS?: string,\n    modalPropsIOS?: any,\n    modalStyleIOS?: any,\n    isDarkModeEnabled?: boolean,\n    isVisible?: boolean,\n    pickerContainerStyleIOS?: any,\n    onCancel: () => void,\n    onConfirm: (date) => void,\n    onChange?: (date) => void,\n    onHide?: (flag, date?) => void,\n    maximumDate?: Date,\n    minimumDate?: Date,\n    options: any[],\n};\n\nclass SelectPicker extends React.PureComponent<Props> {\n\n    static defaultProps = {\n        cancelTextIOS: \"Cancel\",\n        confirmTextIOS: \"Confirm\",\n        modalPropsIOS: {},\n        date: new Date(),\n        isDarkModeEnabled: undefined,\n        isVisible: false,\n        pickerContainerStyleIOS: {},\n        options: [],\n    };\n\n    state = {\n        currentDate: this.props.date,\n        isPickerVisible: this.props.isVisible,\n    };\n\n    didPressConfirm = false;\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.isVisible && !state.isPickerVisible) {\n            return { currentDate: props.date, isPickerVisible: true };\n        }\n        return null;\n    }\n\n    handleCancel = () => {\n        this.didPressConfirm = false;\n        this.props.onCancel();\n    };\n\n    handleConfirm = () => {\n        this.didPressConfirm = true;\n        this.props.onConfirm(this.state.currentDate);\n    };\n\n    handleHide = () => {\n        const { onHide } = this.props;\n        if (onHide) {\n            onHide(this.didPressConfirm, this.state.currentDate);\n        }\n        this.setState({ isPickerVisible: false });\n    };\n\n    handleChange = (value, index) => {\n        if (this.props.onChange) {\n            this.props.onChange(value);\n        }\n        this.setState({ currentDate: value });\n    };\n\n    render() {\n        const {\n            cancelTextIOS,\n            confirmTextIOS,\n            // customCancelButtonIOS,\n            // customConfirmButtonIOS,\n            // customHeaderIOS,\n            // customPickerIOS,\n            // date,\n            headerTextIOS,\n            isDarkModeEnabled,\n            isVisible,\n            modalStyleIOS,\n            modalPropsIOS,\n            pickerContainerStyleIOS,\n            // onCancel,\n            // onConfirm,\n            // onChange,\n            // onHide,\n            options,\n            ...otherProps\n        } = this.props;\n        const isAppearanceModuleAvailable = !!(\n            Appearance && Appearance.getColorScheme\n        );\n        const _isDarkModeEnabled =\n            isDarkModeEnabled === undefined && isAppearanceModuleAvailable\n                ? Appearance.getColorScheme() === \"dark\"\n                : isDarkModeEnabled || false;\n\n        //   const ConfirmButtonComponent = customConfirmButtonIOS || ConfirmButton;\n        const ConfirmButtonComponent = ConfirmButton;\n        //   const CancelButtonComponent = customCancelButtonIOS || CancelButton;\n        const CancelButtonComponent = CancelButton;\n        //   const HeaderComponent = customHeaderIOS || Header;\n        const HeaderComponent = Header;\n        //   const PickerComponent = customPickerIOS || DateTimePicker;\n        const PickerComponent = Picker;\n\n\n        const themedContainerStyle = _isDarkModeEnabled\n            ? pickerStyles.containerDark\n            : pickerStyles.containerLight;\n\n        const headerText =\n            headerTextIOS || \"Pick an options\";\n\n        return (\n            <Modal\n                isVisible={isVisible}\n                contentStyle={[pickerStyles.modal, modalStyleIOS]}\n                onBackdropPress={this.handleCancel}\n                onHide={this.handleHide}\n                {...modalPropsIOS}\n            >\n                <View\n                    style={[\n                        pickerStyles.container,\n                        themedContainerStyle,\n                        pickerContainerStyleIOS,\n                    ]}\n                >\n                    <HeaderComponent label={headerText} />\n                    <PickerComponent\n                        // display=\"spinner\"\n                        {...otherProps}\n                        selectedValue={this.state.currentDate}\n                        onValueChange={this.handleChange}\n                    >\n                        {options.map((item, index) => (\n                            <PickerComponent.Item label={item.label} value={item.value} key={index} />\n                        ))}\n                    </PickerComponent>\n                    <ConfirmButtonComponent\n                        isDarkModeEnabled={_isDarkModeEnabled}\n                        onPress={this.handleConfirm}\n                        label={confirmTextIOS}\n                    />\n                </View>\n                <CancelButtonComponent\n                    isDarkModeEnabled={_isDarkModeEnabled}\n                    onPress={this.handleCancel}\n                    label={cancelTextIOS}\n                />\n            </Modal>\n        );\n    }\n}\n\nconst pickerStyles = StyleSheet.create({\n    modal: {\n        justifyContent: \"flex-end\",\n        margin: 10,\n    },\n    container: {\n        borderRadius: BORDER_RADIUS,\n        marginBottom: 8,\n        overflow: \"hidden\",\n    },\n    containerLight: {\n        backgroundColor: BACKGROUND_COLOR_LIGHT,\n    },\n    containerDark: {\n        backgroundColor: BACKGROUND_COLOR_DARK,\n    },\n});\n\nexport const Header = ({ label, style = headerStyles }) => {\n    return (\n        <View style={style.root}>\n            <Text style={style.text}>{label}</Text>\n        </View>\n    );\n};\n\nexport const headerStyles = StyleSheet.create({\n    root: {\n        borderBottomColor: BORDER_COLOR,\n        borderBottomWidth: StyleSheet.hairlineWidth,\n        padding: 14,\n        backgroundColor: \"transparent\",\n    },\n    text: {\n        textAlign: \"center\",\n        color: TITLE_COLOR,\n        fontSize: TITLE_FONT_SIZE,\n    },\n});\n\nexport const ConfirmButton = ({\n    isDarkModeEnabled,\n    onPress,\n    label,\n    style = confirmButtonStyles,\n}) => {\n    const themedButtonStyle = isDarkModeEnabled\n        ? confirmButtonStyles.buttonDark\n        : confirmButtonStyles.buttonLight;\n\n    const underlayColor = isDarkModeEnabled\n        ? HIGHLIGHT_COLOR_DARK\n        : HIGHLIGHT_COLOR_LIGHT;\n    return (\n        <TouchableHighlight\n            style={[themedButtonStyle, style.button]}\n            underlayColor={underlayColor}\n            onPress={onPress}\n            accessible={true}\n            accessibilityRole=\"button\"\n            accessibilityLabel={label}\n        >\n            <Text style={style.text}>{label}</Text>\n        </TouchableHighlight>\n    );\n};\n\nexport const confirmButtonStyles = StyleSheet.create({\n    button: {\n        borderTopWidth: StyleSheet.hairlineWidth,\n        backgroundColor: \"transparent\",\n        height: 57,\n        justifyContent: \"center\",\n    },\n    buttonLight: {\n        borderColor: BORDER_COLOR,\n    },\n    buttonDark: {\n        borderColor: BORDER_COLOR_DARK,\n    },\n    text: {\n        textAlign: \"center\",\n        color: BUTTON_FONT_COLOR,\n        fontSize: BUTTON_FONT_SIZE,\n        fontWeight: BUTTON_FONT_WEIGHT,\n        backgroundColor: \"transparent\",\n    },\n});\n\nexport const CancelButton = ({\n    isDarkModeEnabled,\n    onPress,\n    label,\n    style = cancelButtonStyles,\n}) => {\n    const themedButtonStyle = isDarkModeEnabled\n        ? cancelButtonStyles.buttonDark\n        : cancelButtonStyles.buttonLight;\n    const underlayColor = isDarkModeEnabled\n        ? HIGHLIGHT_COLOR_DARK\n        : HIGHLIGHT_COLOR_LIGHT;\n    return (\n        <TouchableHighlight\n            style={[style.button, themedButtonStyle]}\n            underlayColor={underlayColor}\n            onPress={onPress}\n            accessible={true}\n            accessibilityRole=\"button\"\n            accessibilityLabel={label}\n        >\n            <Text style={style.text}>{label}</Text>\n        </TouchableHighlight>\n    );\n};\n\nexport const cancelButtonStyles = StyleSheet.create({\n    button: {\n        borderRadius: BORDER_RADIUS,\n        height: 57,\n        marginBottom: isIphoneX() ? 20 : 0,\n        justifyContent: \"center\",\n    },\n    buttonLight: {\n        backgroundColor: BACKGROUND_COLOR_LIGHT,\n    },\n    buttonDark: {\n        backgroundColor: BACKGROUND_COLOR_DARK,\n    },\n    text: {\n        padding: 10,\n        textAlign: \"center\",\n        color: BUTTON_FONT_COLOR,\n        fontSize: BUTTON_FONT_SIZE,\n        fontWeight: \"600\",\n        backgroundColor: \"transparent\",\n    },\n});\n\nexport default SelectPicker;\n"]}