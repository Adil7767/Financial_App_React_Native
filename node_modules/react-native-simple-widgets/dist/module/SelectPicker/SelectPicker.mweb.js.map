{"version":3,"sources":["SelectPicker.mweb.tsx"],"names":["React","StyleSheet","Text","TouchableHighlight","View","Appearance","SelectPickerWeb","Modal","isIphoneX","BACKGROUND_COLOR_LIGHT","BACKGROUND_COLOR_DARK","BORDER_COLOR","BORDER_COLOR_DARK","BORDER_RADIUS","BUTTON_FONT_WEIGHT","BUTTON_FONT_COLOR","BUTTON_FONT_SIZE","HIGHLIGHT_COLOR_DARK","HIGHLIGHT_COLOR_LIGHT","TITLE_FONT_SIZE","TITLE_COLOR","SelectPicker","PureComponent","currentDate","props","selectedValue","isPickerVisible","isVisible","didPressConfirm","onCancel","onConfirm","state","onHide","setState","date","onValueChange","arg2","getDerivedStateFromProps","render","cancelTextIOS","confirmTextIOS","headerTextIOS","isDarkModeEnabled","modalStyleIOS","modalPropsIOS","pickerContainerStyleIOS","options","otherProps","isAppearanceModuleAvailable","getColorScheme","_isDarkModeEnabled","undefined","ConfirmButtonComponent","ConfirmButton","CancelButtonComponent","CancelButton","HeaderComponent","Header","PickerComponent","themedContainerStyle","pickerStyles","containerDark","containerLight","headerText","mode","modal","handleCancel","handleHide","container","flex","flexDirection","handleChange","handleScrollChange","map","item","value","label","handleConfirm","Date","create","justifyContent","margin","borderRadius","marginBottom","overflow","backgroundColor","style","headerStyles","root","text","borderBottomColor","borderBottomWidth","hairlineWidth","padding","textAlign","color","fontSize","onPress","confirmButtonStyles","themedButtonStyle","buttonDark","buttonLight","underlayColor","button","borderTopWidth","height","borderColor","fontWeight","cancelButtonStyles"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport {\r\n    StyleSheet,\r\n    Text,\r\n    TouchableHighlight,\r\n    View,\r\n    Appearance,\r\n} from \"react-native\";\r\nimport SelectPickerWeb from \"./mweb\";\r\nimport Modal from \"./Modal\";\r\nimport { isIphoneX } from \"./utils\";\r\n\r\nexport const BACKGROUND_COLOR_LIGHT = \"white\";\r\nexport const BACKGROUND_COLOR_DARK = \"#0E0E0E\";\r\nexport const BORDER_COLOR = \"#d5d5d5\";\r\nexport const BORDER_COLOR_DARK = \"#272729\";\r\nexport const BORDER_RADIUS = 13;\r\nexport const BUTTON_FONT_WEIGHT = \"normal\";\r\nexport const BUTTON_FONT_COLOR = \"#007ff9\";\r\nexport const BUTTON_FONT_SIZE = 20;\r\nexport const HIGHLIGHT_COLOR_DARK = \"#444444\";\r\nexport const HIGHLIGHT_COLOR_LIGHT = \"#ebebeb\";\r\nexport const TITLE_FONT_SIZE = 20;\r\nexport const TITLE_COLOR = \"#8f8f8f\";\r\n\r\nexport type Props = {\r\n    cancelTextIOS?: string,\r\n    confirmTextIOS?: string,\r\n    customCancelButtonIOS?: React.ReactElement,\r\n    customConfirmButtonIOS?: React.ReactElement,\r\n    customHeaderIOS?: React.ReactElement,\r\n    customPickerIOS?: React.ReactElement,\r\n    selectedValue?: string,\r\n    mode?: string,\r\n    headerTextIOS?: string,\r\n    modalPropsIOS?: any,\r\n    modalStyleIOS?: any,\r\n    isDarkModeEnabled?: boolean,\r\n    isVisible?: boolean,\r\n    pickerContainerStyleIOS?: any,\r\n    onCancel: () => void,\r\n    onConfirm: (date) => void,\r\n    onValueChange?: (date) => void,\r\n    onHide?: (flag, date?) => void,\r\n    maximumDate?: Date,\r\n    minimumDate?: Date,\r\n    options: any[],\r\n    style?: any,\r\n    itemStyle?: any,\r\n    disabled?: boolean,\r\n    prefixCls?: string,\r\n};\r\n\r\nclass SelectPicker extends React.PureComponent<Props> {\r\n\r\n    static defaultProps = {\r\n        cancelTextIOS: \"Cancel\",\r\n        confirmTextIOS: \"Confirm\",\r\n        modalPropsIOS: {},\r\n        date: new Date(),\r\n        isDarkModeEnabled: undefined,\r\n        isVisible: false,\r\n        pickerContainerStyleIOS: {},\r\n        options: [],\r\n    };\r\n\r\n    state = {\r\n        currentDate: this.props.selectedValue,\r\n        isPickerVisible: this.props.isVisible,\r\n    };\r\n\r\n    didPressConfirm = false;\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.isVisible && !state.isPickerVisible) {\r\n            return { currentDate: props.selectedValue, isPickerVisible: true };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    handleCancel = () => {\r\n        this.didPressConfirm = false;\r\n        this.props.onCancel();\r\n    };\r\n\r\n    handleConfirm = () => {\r\n        this.didPressConfirm = true;\r\n        this.props.onConfirm(this.state.currentDate);\r\n    };\r\n\r\n    handleHide = () => {\r\n        const { onHide } = this.props;\r\n        if (onHide) {\r\n            onHide(this.didPressConfirm, this.state.currentDate);\r\n        }\r\n        this.setState({ isPickerVisible: false });\r\n    };\r\n\r\n    handleChange = (date) => {\r\n        if (this.props.onValueChange) {\r\n            this.props.onValueChange(date);\r\n        }\r\n        this.setState({ currentDate: date });\r\n    };\r\n\r\n    handleScrollChange = (date, arg2?) => {\r\n        if (this.props.onValueChange) {\r\n            this.props.onValueChange(date);\r\n        }\r\n        this.setState({ currentDate: date });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            cancelTextIOS,\r\n            confirmTextIOS,\r\n            // customCancelButtonIOS,\r\n            // customConfirmButtonIOS,\r\n            // customHeaderIOS,\r\n            // customPickerIOS,\r\n            // date,\r\n            headerTextIOS,\r\n            isDarkModeEnabled,\r\n            isVisible,\r\n            modalStyleIOS,\r\n            modalPropsIOS,\r\n            pickerContainerStyleIOS,\r\n            // onCancel,\r\n            // onConfirm,\r\n            // onValueChange,\r\n            // onHide,\r\n            options,\r\n            ...otherProps\r\n        } = this.props;\r\n        const isAppearanceModuleAvailable = !!(\r\n            Appearance && Appearance.getColorScheme\r\n        );\r\n        const _isDarkModeEnabled =\r\n            isDarkModeEnabled === undefined && isAppearanceModuleAvailable\r\n                ? Appearance.getColorScheme() === \"dark\"\r\n                : isDarkModeEnabled || false;\r\n\r\n        //   const ConfirmButtonComponent = customConfirmButtonIOS || ConfirmButton;\r\n        const ConfirmButtonComponent = ConfirmButton;\r\n        //   const CancelButtonComponent = customCancelButtonIOS || CancelButton;\r\n        const CancelButtonComponent = CancelButton;\r\n        //   const HeaderComponent = customHeaderIOS || Header;\r\n        const HeaderComponent = Header;\r\n        //   const PickerComponent = customPickerIOS || DateTimePicker;\r\n        const PickerComponent = SelectPickerWeb;\r\n\r\n\r\n        const themedContainerStyle = _isDarkModeEnabled\r\n            ? pickerStyles.containerDark\r\n            : pickerStyles.containerLight;\r\n\r\n        const headerText =\r\n            headerTextIOS || (this.props.mode === \"time\"\r\n                ? \"Pick a time\"\r\n                : \"Pick a date\");\r\n\r\n        return (\r\n            <Modal\r\n                isVisible={isVisible}\r\n                contentStyle={[pickerStyles.modal, modalStyleIOS]}\r\n                onBackdropPress={this.handleCancel}\r\n                onHide={this.handleHide}\r\n                {...modalPropsIOS}\r\n            >\r\n                <View\r\n                    style={[\r\n                        pickerStyles.container,\r\n                        themedContainerStyle,\r\n                        pickerContainerStyleIOS,\r\n                    ]}\r\n                >\r\n                    <HeaderComponent label={headerText} />\r\n                    <View style={{\r\n                        flex: 1,\r\n                        flexDirection: \"row\",\r\n                    }}>\r\n                        <PickerComponent\r\n                            // display=\"spinner\"\r\n                            {...otherProps}\r\n                            selectedValue={this.state.currentDate}\r\n                            // onChange={this.handleChange}\r\n                            onValueChange={this.handleChange}\r\n                            onScrollChange={this.handleScrollChange}\r\n                        >\r\n                            {options.map(item => (\r\n                                <PickerComponent.Item key={item.value} value={item.value}>\r\n                                    {item.label}\r\n                                </PickerComponent.Item>\r\n                            ))}\r\n                        </PickerComponent>\r\n                    </View>\r\n                    <ConfirmButtonComponent\r\n                        isDarkModeEnabled={_isDarkModeEnabled}\r\n                        onPress={this.handleConfirm}\r\n                        label={confirmTextIOS}\r\n                    />\r\n                </View>\r\n                <CancelButtonComponent\r\n                    isDarkModeEnabled={_isDarkModeEnabled}\r\n                    onPress={this.handleCancel}\r\n                    label={cancelTextIOS}\r\n                />\r\n            </Modal>\r\n        );\r\n    }\r\n}\r\n\r\nconst pickerStyles = StyleSheet.create({\r\n    modal: {\r\n        justifyContent: \"flex-end\",\r\n        margin: 10,\r\n    },\r\n    container: {\r\n        borderRadius: BORDER_RADIUS,\r\n        marginBottom: 8,\r\n        overflow: \"hidden\",\r\n    },\r\n    containerLight: {\r\n        backgroundColor: BACKGROUND_COLOR_LIGHT,\r\n    },\r\n    containerDark: {\r\n        backgroundColor: BACKGROUND_COLOR_DARK,\r\n    },\r\n});\r\n\r\nexport const Header = ({ label, style = headerStyles }) => {\r\n    return (\r\n        <View style={style.root}>\r\n            <Text style={style.text}>{label}</Text>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport const headerStyles = StyleSheet.create({\r\n    root: {\r\n        borderBottomColor: BORDER_COLOR,\r\n        borderBottomWidth: StyleSheet.hairlineWidth,\r\n        padding: 14,\r\n        backgroundColor: \"transparent\",\r\n    },\r\n    text: {\r\n        textAlign: \"center\",\r\n        color: TITLE_COLOR,\r\n        fontSize: TITLE_FONT_SIZE,\r\n    },\r\n});\r\n\r\nexport const ConfirmButton = ({\r\n    isDarkModeEnabled,\r\n    onPress,\r\n    label,\r\n    style = confirmButtonStyles,\r\n}) => {\r\n    const themedButtonStyle = isDarkModeEnabled\r\n        ? confirmButtonStyles.buttonDark\r\n        : confirmButtonStyles.buttonLight;\r\n\r\n    const underlayColor = isDarkModeEnabled\r\n        ? HIGHLIGHT_COLOR_DARK\r\n        : HIGHLIGHT_COLOR_LIGHT;\r\n    return (\r\n        <TouchableHighlight\r\n            style={[themedButtonStyle, style.button]}\r\n            underlayColor={underlayColor}\r\n            onPress={onPress}\r\n            accessible={true}\r\n            accessibilityRole=\"button\"\r\n            accessibilityLabel={label}\r\n        >\r\n            <Text style={style.text}>{label}</Text>\r\n        </TouchableHighlight>\r\n    );\r\n};\r\n\r\nexport const confirmButtonStyles = StyleSheet.create({\r\n    button: {\r\n        borderTopWidth: StyleSheet.hairlineWidth,\r\n        backgroundColor: \"transparent\",\r\n        height: 57,\r\n        justifyContent: \"center\",\r\n    },\r\n    buttonLight: {\r\n        borderColor: BORDER_COLOR,\r\n    },\r\n    buttonDark: {\r\n        borderColor: BORDER_COLOR_DARK,\r\n    },\r\n    text: {\r\n        textAlign: \"center\",\r\n        color: BUTTON_FONT_COLOR,\r\n        fontSize: BUTTON_FONT_SIZE,\r\n        fontWeight: BUTTON_FONT_WEIGHT,\r\n        backgroundColor: \"transparent\",\r\n    },\r\n});\r\n\r\nexport const CancelButton = ({\r\n    isDarkModeEnabled,\r\n    onPress,\r\n    label,\r\n    style = cancelButtonStyles,\r\n}) => {\r\n    const themedButtonStyle = isDarkModeEnabled\r\n        ? cancelButtonStyles.buttonDark\r\n        : cancelButtonStyles.buttonLight;\r\n    const underlayColor = isDarkModeEnabled\r\n        ? HIGHLIGHT_COLOR_DARK\r\n        : HIGHLIGHT_COLOR_LIGHT;\r\n    return (\r\n        <TouchableHighlight\r\n            style={[style.button, themedButtonStyle]}\r\n            underlayColor={underlayColor}\r\n            onPress={onPress}\r\n            accessible={true}\r\n            accessibilityRole=\"button\"\r\n            accessibilityLabel={label}\r\n        >\r\n            <Text style={style.text}>{label}</Text>\r\n        </TouchableHighlight>\r\n    );\r\n};\r\n\r\nexport const cancelButtonStyles = StyleSheet.create({\r\n    button: {\r\n        borderRadius: BORDER_RADIUS,\r\n        height: 57,\r\n        marginBottom: isIphoneX() ? 20 : 0,\r\n        justifyContent: \"center\",\r\n    },\r\n    buttonLight: {\r\n        backgroundColor: BACKGROUND_COLOR_LIGHT,\r\n    },\r\n    buttonDark: {\r\n        backgroundColor: BACKGROUND_COLOR_DARK,\r\n    },\r\n    text: {\r\n        padding: 10,\r\n        textAlign: \"center\",\r\n        color: BUTTON_FONT_COLOR,\r\n        fontSize: BUTTON_FONT_SIZE,\r\n        fontWeight: \"600\",\r\n        backgroundColor: \"transparent\",\r\n    },\r\n});\r\n\r\nexport default SelectPicker;\r\n"]}