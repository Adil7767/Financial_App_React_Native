{"version":3,"sources":["PopupMixin.tsx"],"names":["React","PopupMixin","getModal","platformProps","Component","constructor","props","pickerValue","state","setState","picker","pickerValueChangeProp","e","child","children","childProps","triggerType","fireVisibleChange","visible","onOk","getValue","value","cloneElement","pickerValueProp","onPickerChange","ref","saveRef","content","onDismiss","UNSAFE_componentWillReceiveProps","nextProps","setVisibleState","onVisibleChange","getRender","getContent","hide","WrapComponent","disabled","newChildProps","onTriggerClick","wrapStyle","render","okText","dismissText","title"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { IPopupPickerProps } from \"./PopupPickerTypes\";\n\nexport default function PopupMixin(getModal, platformProps) {\n    return class extends React.Component<IPopupPickerProps, any> {\n\n        static defaultProps = {\n            onVisibleChange: () => {\n                // do something\n            },\n            okText: \"Ok\",\n            dismissText: \"Dismiss\",\n            title: \"\",\n            onOk: () => {\n                // do something\n            },\n            onDismiss: () => {\n                // do something\n            },\n            ...platformProps,\n        };\n\n        picker: any;\n\n        constructor(props) {\n            super(props);\n\n            this.state = {\n                pickerValue: \"value\" in this.props ? this.props.value : null,\n                visible: this.props.visible || false,\n            };\n        }\n\n        UNSAFE_componentWillReceiveProps(nextProps) {\n            if (\"value\" in nextProps) {\n                this.setState({\n                    pickerValue: nextProps.value,\n                });\n            }\n            if (\"visible\" in nextProps) {\n                this.setVisibleState(nextProps.visible);\n            }\n        }\n\n        onPickerChange = (pickerValue) => {\n            if (this.state.pickerValue !== pickerValue) {\n                this.setState({\n                    pickerValue,\n                });\n                const { picker, pickerValueChangeProp } = this.props;\n                if (picker && picker.props[pickerValueChangeProp!]) {\n                    picker.props[pickerValueChangeProp!](pickerValue);\n                }\n            }\n        }\n\n        saveRef = (picker) => {\n            this.picker = picker;\n        }\n\n        setVisibleState(visible) {\n            this.setState({\n                visible,\n            });\n            if (!visible) {\n                this.setState({\n                    pickerValue: null,\n                });\n            }\n        }\n\n        fireVisibleChange(visible) {\n            if (this.state.visible !== visible) {\n                if (!(\"visible\" in this.props)) {\n                    this.setVisibleState(visible);\n                }\n                this.props.onVisibleChange!(visible);\n            }\n        }\n\n        getRender() {\n            const props = this.props;\n            const children = props.children;\n            if (!children) {\n                return getModal(props, this.state.visible, {\n                    getContent: this.getContent,\n                    onOk: this.onOk,\n                    hide: this.hide,\n                    onDismiss: this.onDismiss,\n                });\n            }\n            const { WrapComponent, disabled } = this.props;\n            const child = children;\n            const newChildProps = {};\n            if (!disabled) {\n                newChildProps[props.triggerType!] = this.onTriggerClick;\n            }\n            return (\n                <WrapComponent style={props.wrapStyle}>\n                    {React.cloneElement(child as any, newChildProps)}\n                    {\n                        getModal(props, this.state.visible, {\n                            getContent: this.getContent,\n                            onOk: this.onOk,\n                            hide: this.hide,\n                            onDismiss: this.onDismiss,\n                        })\n                    }\n                </WrapComponent>\n            );\n        }\n\n        onTriggerClick = (e) => {\n            const child: any = this.props.children;\n            const childProps = child.props || {};\n            if (childProps[this.props.triggerType!]) {\n                childProps[this.props.triggerType!](e);\n            }\n            this.fireVisibleChange(!this.state.visible);\n        }\n\n        onOk = () => {\n            this.props.onOk!(this.picker && this.picker.getValue());\n            this.fireVisibleChange(false);\n        }\n\n        getContent = () => {\n            if (this.props.picker) {\n                let { pickerValue } = this.state;\n                if (pickerValue === null) {\n                    pickerValue = this.props.value;\n                }\n                return React.cloneElement(this.props.picker, ({\n                    [this.props.pickerValueProp!]: pickerValue,\n                    [this.props.pickerValueChangeProp!]: this.onPickerChange,\n                    ref: this.saveRef,\n                }));\n            } else {\n                return this.props.content;\n            }\n        }\n\n        onDismiss = () => {\n            this.props.onDismiss!();\n            this.fireVisibleChange(false);\n        }\n\n        hide = () => {\n            this.fireVisibleChange(false);\n        }\n\n        render() {\n            return this.getRender();\n        }\n    };\n}\n"]}