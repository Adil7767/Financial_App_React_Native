import * as React from "react";
import { View, TouchableHighlight, Text, Modal } from "react-native";
import PopupMixin from "./PopupMixin"; // import Modal from 'rmc-dialog/lib/Modal';

const getModal = (props, visible, {
  getContent,
  hide,
  onDismiss,
  onOk
}) => {
  const {
    styles,
    title,
    okText,
    dismissText
  } = props;
  const titleEl = typeof title === "string" ? /*#__PURE__*/React.createElement(Text, {
    style: [styles.title]
  }, title) : title;
  const okEl = typeof okText === "string" ? /*#__PURE__*/React.createElement(Text, {
    style: [styles.actionText, styles.okText]
  }, okText) : okText;
  const dismissEl = typeof dismissText === "string" ? /*#__PURE__*/React.createElement(Text, {
    style: [styles.actionText, styles.dismissText]
  }, dismissText) : dismissText;
  return /*#__PURE__*/React.createElement(Modal // animationType="slide-up"
  // wrapStyle={styles.modal}
  , {
    visible: visible // onClose={hide}

  }, /*#__PURE__*/React.createElement(View, {
    style: [styles.header]
  }, /*#__PURE__*/React.createElement(TouchableHighlight, {
    onPress: onDismiss,
    style: [styles.headerItem],
    activeOpacity: props.actionTextActiveOpacity,
    underlayColor: props.actionTextUnderlayColor
  }, dismissEl), /*#__PURE__*/React.createElement(View, {
    style: [styles.headerItem]
  }, titleEl), /*#__PURE__*/React.createElement(TouchableHighlight, {
    onPress: onOk,
    style: [styles.headerItem],
    activeOpacity: props.actionTextActiveOpacity,
    underlayColor: props.actionTextUnderlayColor
  }, okEl)), getContent());
};

export default PopupMixin(getModal, {
  actionTextUnderlayColor: "#ddd",
  actionTextActiveOpacity: 1,
  triggerType: "onPress",
  styles: {},
  WrapComponent: View
});
//# sourceMappingURL=Popup.native.js.map