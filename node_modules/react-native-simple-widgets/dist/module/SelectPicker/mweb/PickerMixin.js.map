{"version":3,"sources":["PickerMixin.tsx"],"names":["React","Item","_props","ComposedComponent","Component","value","itemHeight","scrollTo","children","Children","toArray","props","i","len","length","selectByIndex","top","fireValueChange","index","computeChildIndex","child","console","warn","zscrollTo","count","childrenLength","Math","round","min","render","doScrollingComplete","select"],"mappings":";;;;AAAA;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AASA,MAAMC,IAAI,GAAIC,MAAD,IAAwB,IAArC;;AAEA,eAAe,UAAUC,iBAAV,EAA6B;AAAA;;AACxC,0BAAO,cAAcH,KAAK,CAACI,SAApB,CAAiD;AAAA;AAAA;;AAAA,sCAG3C,CAACC,KAAD,EAAQC,UAAR,EAAoBC,QAApB,KAAiC;AACtC,cAAMC,QAAa,GAAGR,KAAK,CAACS,QAAN,CAAeC,OAAf,CAAuB,KAAKC,KAAL,CAAWH,QAAlC,CAAtB;;AACA,aAAK,IAAII,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGL,QAAQ,CAACM,MAA/B,EAAuCF,CAAC,GAAGC,GAA3C,EAAgDD,CAAC,EAAjD,EAAqD;AACjD,cAAIJ,QAAQ,CAACI,CAAD,CAAR,CAAYD,KAAZ,CAAkBN,KAAlB,KAA4BA,KAAhC,EAAuC;AACnC,iBAAKU,aAAL,CAAmBH,CAAnB,EAAsBN,UAAtB,EAAkCC,QAAlC;AACA;AACH;AACJ;;AACD,aAAKQ,aAAL,CAAmB,CAAnB,EAAsBT,UAAtB,EAAkCC,QAAlC;AACH,OAZmD;;AAAA,mDA0B9B,CAACS,GAAD,EAAMV,UAAN,EAAkBW,eAAlB,KAAsC;AACxD,cAAMT,QAAQ,GAAGR,KAAK,CAACS,QAAN,CAAeC,OAAf,CAAuB,KAAKC,KAAL,CAAWH,QAAlC,CAAjB;AACA,cAAMU,KAAK,GAAG,KAAKC,iBAAL,CAAuBH,GAAvB,EAA4BV,UAA5B,EAAwCE,QAAQ,CAACM,MAAjD,CAAd;AACA,cAAMM,KAAU,GAAGZ,QAAQ,CAACU,KAAD,CAA3B;;AACA,YAAIE,KAAJ,EAAW;AACPH,UAAAA,eAAe,CAACG,KAAK,CAACT,KAAN,CAAYN,KAAb,CAAf;AACH,SAFD,MAEO,IAAIgB,OAAO,CAACC,IAAZ,EAAkB;AACrBD,UAAAA,OAAO,CAACC,IAAR,CAAa,iBAAb,EAAgCd,QAAhC,EAA0CU,KAA1C;AACH;AACJ,OAnCmD;AAAA;;AAcpDH,IAAAA,aAAa,CAACG,KAAD,EAAQZ,UAAR,EAAoBiB,SAApB,EAA+B;AACxC,UAAIL,KAAK,GAAG,CAAR,IAAaA,KAAK,IAAIlB,KAAK,CAACS,QAAN,CAAee,KAAf,CAAqB,KAAKb,KAAL,CAAWH,QAAhC,CAAtB,IAAmE,CAACF,UAAxE,EAAoF;AAChF;AACH;;AACDiB,MAAAA,SAAS,CAACL,KAAK,GAAGZ,UAAT,CAAT;AACH;;AAEDa,IAAAA,iBAAiB,CAACH,GAAD,EAAMV,UAAN,EAAkBmB,cAAlB,EAAkC;AAC/C,YAAMP,KAAK,GAAGQ,IAAI,CAACC,KAAL,CAAWX,GAAG,GAAGV,UAAjB,CAAd;AACA,aAAOoB,IAAI,CAACE,GAAL,CAASV,KAAT,EAAgBO,cAAc,GAAG,CAAjC,CAAP;AACH;;AAaDI,IAAAA,MAAM,GAAG;AACL,0BACI,oBAAC,iBAAD,eACQ,KAAKlB,KADb;AAEI,QAAA,mBAAmB,EAAE,KAAKmB,mBAF9B;AAGI,QAAA,iBAAiB,EAAE,KAAKX,iBAH5B;AAII,QAAA,MAAM,EAAE,KAAKY;AAJjB,SADJ;AAQH;;AA9CmD,GAAxD,kCACkB9B,IADlB;AAgDH","sourcesContent":["/* tslint:disable:no-console */\nimport * as React from \"react\";\nimport { IPickerProps } from \"./PickerTypes\";\n\nexport interface IItemProps {\n    className?: string;\n    value: any;\n    children?: React.ReactNode;\n}\n\nconst Item = (_props: IItemProps) => null;\n\nexport default function (ComposedComponent) {\n    return class extends React.Component<IPickerProps, any> {\n        static Item = Item;\n\n        select = (value, itemHeight, scrollTo) => {\n            const children: any = React.Children.toArray(this.props.children);\n            for (let i = 0, len = children.length; i < len; i++) {\n                if (children[i].props.value === value) {\n                    this.selectByIndex(i, itemHeight, scrollTo);\n                    return;\n                }\n            }\n            this.selectByIndex(0, itemHeight, scrollTo);\n        }\n\n        selectByIndex(index, itemHeight, zscrollTo) {\n            if (index < 0 || index >= React.Children.count(this.props.children) || !itemHeight) {\n                return;\n            }\n            zscrollTo(index * itemHeight);\n        }\n\n        computeChildIndex(top, itemHeight, childrenLength) {\n            const index = Math.round(top / itemHeight);\n            return Math.min(index, childrenLength - 1);\n        }\n\n        doScrollingComplete = (top, itemHeight, fireValueChange) => {\n            const children = React.Children.toArray(this.props.children);\n            const index = this.computeChildIndex(top, itemHeight, children.length);\n            const child: any = children[index];\n            if (child) {\n                fireValueChange(child.props.value);\n            } else if (console.warn) {\n                console.warn(\"child not found\", children, index);\n            }\n        }\n\n        render() {\n            return (\n                <ComposedComponent\n                    {...this.props}\n                    doScrollingComplete={this.doScrollingComplete}\n                    computeChildIndex={this.computeChildIndex}\n                    select={this.select}\n                />\n            );\n        }\n    };\n}\n"]}