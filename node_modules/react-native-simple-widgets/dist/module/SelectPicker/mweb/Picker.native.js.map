{"version":3,"sources":["Picker.native.tsx"],"names":["React","NativePicker","Item","Picker","Component","getValue","props","selectedValue","children","Children","toArray","value","shouldComponentUpdate","nextProps","render","map","c","key"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAGA,MAAMC,IAAI,GAAID,YAAD,CAAsBC,IAAnC;;AAEA,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAwD;AAKpD,SAAOF,IAAP,GAAc,CACV;AACH;;AAEDG,EAAAA,QAAQ,GAAG;AACP,QAAI,mBAAmB,KAAKC,KAA5B,EAAmC;AAC/B,aAAO,KAAKA,KAAL,CAAWC,aAAlB;AACH;;AACD,UAAMC,QAAa,GAAGR,KAAK,CAACS,QAAN,CAAeC,OAAf,CAAuB,KAAKJ,KAAL,CAAWE,QAAlC,CAAtB;AACA,WAAOA,QAAQ,IAAIA,QAAQ,CAAC,CAAD,CAApB,IAA2BA,QAAQ,CAAC,CAAD,CAAR,CAAYF,KAAZ,CAAkBK,KAApD;AACH;;AAEDC,EAAAA,qBAAqB,CAACC,SAAD,EAAiB;AAClC,WAAO,KAAKP,KAAL,CAAWC,aAAX,KAA6BM,SAAS,CAACN,aAAvC,IACA,KAAKD,KAAL,CAAWE,QAAX,KAAwBK,SAAS,CAACL,QADzC;AAEH;;AAEDM,EAAAA,MAAM,GAAG;AACL,UAAMN,QAAQ,GAAGR,KAAK,CAACS,QAAN,CAAeM,GAAf,CAAmB,KAAKT,KAAL,CAAWE,QAA9B,EAAyCQ,CAAD,IAAY;AACjE,0BAAO,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEA,CAAC,CAACV,KAAF,CAAQE,QAAR,GAAmB,EAAhC;AAAoC,QAAA,KAAK,EAAEQ,CAAC,CAACV,KAAF,CAAQK,KAAR,GAAgB,EAA3D;AAA+D,QAAA,GAAG,EAAEK,CAAC,CAACC;AAAtE,QAAP;AACH,KAFgB,CAAjB;AAGA,wBAAO,oBAAC,YAAD,EAAkB,KAAKX,KAAvB,EAA+BE,QAA/B,CAAP;AACH;;AA3BmD;;gBAAlDL,M,kBACoB;AAClBK,EAAAA,QAAQ,EAAE;AADQ,C;;AA6B1B,eAAeL,MAAf","sourcesContent":["import * as React from \"react\";\nimport NativePicker from \"./NativePicker\";\nimport { IPickerProps } from \"./PickerTypes\";\n\nconst Item = (NativePicker as any).Item;\n\nclass Picker extends React.Component<IPickerProps, any> {\n    static defaultProps = {\n        children: [],\n    };\n\n    static Item() {\n        // do something\n    }\n\n    getValue() {\n        if (\"selectedValue\" in this.props) {\n            return this.props.selectedValue;\n        }\n        const children: any = React.Children.toArray(this.props.children);\n        return children && children[0] && children[0].props.value;\n    }\n\n    shouldComponentUpdate(nextProps: any) {\n        return this.props.selectedValue !== nextProps.selectedValue\n            || this.props.children !== nextProps.children;\n    }\n\n    render() {\n        const children = React.Children.map(this.props.children, (c: any) => {\n            return <Item label={c.props.children + \"\"} value={c.props.value + \"\"} key={c.key} />;\n        });\n        return <NativePicker {...this.props}>{children}</NativePicker>;\n    }\n}\n\nexport default Picker;\n"]}