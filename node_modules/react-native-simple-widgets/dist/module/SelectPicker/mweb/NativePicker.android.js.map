{"version":3,"sources":["NativePicker.android.tsx"],"names":["React","ScrollView","View","StyleSheet","PixelRatio","Text","PickerMixin","ratio","get","styles","create","indicator","position","left","top","borderColor","borderTopWidth","borderBottomWidth","scrollView","height","selectedItemText","fontSize","fontWeight","color","itemText","textAlign","Picker","Component","e","width","nativeEvent","layout","itemHeight","itemWidth","indicatorRef","setNativeProps","style","scrollerRef","contentRef","paddingTop","paddingBottom","setTimeout","props","select","selectedValue","scrollTo","y","animated","onValueChange","contentOffset","clearScrollBuffer","scrollBuffer","doScrollingComplete","fireValueChange","componentDidUpdate","componentWillUnmount","clearTimeout","render","children","itemStyle","items","Children","map","item","index","totalStyle","value","push","el","onItemLayout","undefined","key","label","onScroll"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { ScrollView, View, StyleSheet, PixelRatio, Text } from \"react-native\";\nimport PickerMixin from \"./PickerMixin\";\nimport { IPickerProps } from \"./PickerTypes\";\n\nconst ratio = PixelRatio.get();\nconst styles = StyleSheet.create({\n    indicator: {\n        position: \"absolute\",\n        left: 0,\n        top: -99,\n        borderColor: \"#aaa\",\n        borderTopWidth: 1 / ratio,\n        borderBottomWidth: 1 / ratio,\n    } as any,\n\n    scrollView: {\n        height: 0,\n    },\n\n    selectedItemText: {\n        fontSize: 20,\n        fontWeight: \"bold\",\n        color: \"#000\",\n    } as any,\n\n    itemText: {\n        fontSize: 20,\n        color: \"#aaa\",\n        textAlign: \"center\",\n    } as any,\n});\n\nexport interface IPickerProp {\n    select: (...arg) => void;\n    doScrollingComplete: (...arg) => void;\n}\n\nclass Picker extends React.Component<IPickerProp & IPickerProps, any> {\n    itemHeight: number;\n    itemWidth: number;\n    scrollBuffer: any;\n    scrollerRef: any;\n    contentRef: any;\n    indicatorRef: any;\n\n    onItemLayout = e => {\n        const { height, width } = e.nativeEvent.layout;\n        // console.log('onItemLayout', height);\n        if (this.itemHeight !== height || this.itemWidth !== width) {\n            this.itemWidth = width;\n            if (this.indicatorRef) {\n                this.indicatorRef.setNativeProps({\n                    style: [\n                        styles.indicator,\n                        {\n                            top: height * 3,\n                            height,\n                            width,\n                        },\n                    ],\n                });\n            }\n        }\n        if (this.itemHeight !== height) {\n            this.itemHeight = height;\n            if (this.scrollerRef) {\n                this.scrollerRef.setNativeProps({\n                    style: {\n                        height: height * 7,\n                    },\n                });\n            }\n            if (this.contentRef) {\n                this.contentRef.setNativeProps({\n                    style: {\n                        paddingTop: height * 3,\n                        paddingBottom: height * 3,\n                    },\n                });\n            }\n\n            // i do no know why!...\n            setTimeout(() => {\n                this.props.select(\n                    this.props.selectedValue,\n                    this.itemHeight,\n                    this.scrollTo,\n                );\n            }, 0);\n        }\n    }\n\n    componentDidUpdate() {\n        this.props.select(this.props.selectedValue, this.itemHeight, this.scrollTo);\n    }\n\n    componentWillUnmount() {\n        this.clearScrollBuffer();\n    }\n\n    clearScrollBuffer() {\n        if (this.scrollBuffer) {\n            clearTimeout(this.scrollBuffer);\n        }\n    }\n\n    scrollTo = y => {\n        if (this.scrollerRef) {\n            this.scrollerRef.scrollTo({\n                y,\n                animated: false,\n            });\n        }\n    }\n\n    fireValueChange = selectedValue => {\n        if (\n            this.props.selectedValue !== selectedValue &&\n            this.props.onValueChange\n        ) {\n            this.props.onValueChange(selectedValue);\n        }\n    }\n\n    onScroll = e => {\n        const { y } = e.nativeEvent.contentOffset;\n        this.clearScrollBuffer();\n        this.scrollBuffer = setTimeout(() => {\n            this.clearScrollBuffer();\n            this.props.doScrollingComplete(y, this.itemHeight, this.fireValueChange);\n        }, 100);\n    }\n\n    render() {\n        const { children, itemStyle, selectedValue, style } = this.props;\n        const items = React.Children.map(children, (item: any, index) => {\n            const totalStyle = [styles.itemText];\n            if (selectedValue === item.props.value) {\n                totalStyle.push(styles.selectedItemText);\n            }\n            totalStyle.push(itemStyle);\n            return (\n                <View\n                    ref={el => (this[`item${index}`] = el)}\n                    onLayout={index === 0 ? this.onItemLayout : undefined}\n                    key={item.key}\n                >\n                    <Text style={totalStyle} numberOfLines={1}>\n                        {item.props.label}\n                    </Text>\n                </View>\n            );\n        });\n        return (\n            <View style={style}>\n                <View ref={el => this.indicatorRef = el} style={styles.indicator} />\n                <ScrollView\n                    style={styles.scrollView}\n                    ref={el => (this.scrollerRef = el)}\n                    onScroll={this.onScroll}\n                    showsVerticalScrollIndicator={false}\n                    overScrollMode=\"never\"\n                >\n                    <View ref={el => (this.contentRef = el)}>{items}</View>\n                </ScrollView>\n            </View>\n        );\n    }\n}\n\nexport default PickerMixin(Picker);\n"]}