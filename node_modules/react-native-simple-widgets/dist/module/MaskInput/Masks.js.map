{"version":3,"sources":["Masks.ts"],"names":["createNumberMask","BRL_CAR_PLATE","BRL_CNPJ","BRL_CPF","BRL_CPF_CNPJ","text","rawValue","replace","length","BRL_CURRENCY","prefix","separator","delimiter","precision","BRL_PHONE","CREDIT_CARD","DATE_DDMMYYYY","DATE_MMDDYYYY","DATE_YYYYMMDD","ZIP_CODE"],"mappings":"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","sourcesContent":["import createNumberMask from \"./createNumberMask\";\nimport type { MaskArray } from \"./formatWithMask.types\";\n\nconst BRL_CAR_PLATE = [/[a-zA-Z]/, /[a-zA-Z]/, /[a-zA-Z]/, \"-\", /\\d/, /\\w/, /\\d/, /\\d/];\n\nconst BRL_CNPJ = [\n    /\\d/,\n    /\\d/,\n    \".\",\n    /\\d/,\n    /\\d/,\n    /\\d/,\n    \".\",\n    /\\d/,\n    /\\d/,\n    /\\d/,\n    \"/\",\n    /\\d/,\n    /\\d/,\n    /\\d/,\n    /\\d/,\n    \"-\",\n    /\\d/,\n    /\\d/,\n];\n\nconst BRL_CPF = [\n    /\\d/,\n    /\\d/,\n    /\\d/,\n    \".\",\n    /\\d/,\n    /\\d/,\n    /\\d/,\n    \".\",\n    /\\d/,\n    /\\d/,\n    /\\d/,\n    \"-\",\n    /\\d/,\n    /\\d/,\n];\n\nconst BRL_CPF_CNPJ = (text?: string) => {\n    const rawValue = text?.replace(/\\D+/g, \"\") || \"\";\n    return rawValue.length <= 11 ? BRL_CPF : BRL_CNPJ;\n};\n\nconst BRL_CURRENCY = createNumberMask({\n    prefix: [\"R\", \"$\", \" \"],\n    separator: \",\",\n    delimiter: \".\",\n    precision: 2,\n});\n\nconst BRL_PHONE = [\n    \"(\",\n    /\\d/,\n    /\\d/,\n    \")\",\n    \" \",\n    /\\d/,\n    /\\d/,\n    /\\d/,\n    /\\d/,\n    /\\d/,\n    \"-\",\n    /\\d/,\n    /\\d/,\n    /\\d/,\n    /\\d/,\n];\n\nconst CREDIT_CARD = [\n    /\\d/,\n    /\\d/,\n    /\\d/,\n    /\\d/,\n    \" \",\n    [/\\d/],\n    [/\\d/],\n    [/\\d/],\n    [/\\d/],\n    \" \",\n    [/\\d/],\n    [/\\d/],\n    [/\\d/],\n    [/\\d/],\n    \" \",\n    /\\d/,\n    /\\d/,\n    /\\d/,\n    /\\d/,\n] as MaskArray;\n\nconst DATE_DDMMYYYY = [/[0-3]/, /\\d/, \"/\", /[0-1]/, /\\d/, \"/\", /\\d/, /\\d/, /\\d/, /\\d/];\nconst DATE_MMDDYYYY = [/[0-1]/, /\\d/, \"/\", /[0-3]/, /\\d/, \"/\", /\\d/, /\\d/, /\\d/, /\\d/];\nconst DATE_YYYYMMDD = [/\\d/, /\\d/, /\\d/, /\\d/, \"/\", /[0-1]/, /\\d/, \"/\", /[0-3]/, /\\d/];\nconst ZIP_CODE = [/\\d/, /\\d/, /\\d/, /\\d/, /\\d/, \"-\", /\\d/, /\\d/, /\\d/];\n\nexport default {\n    BRL_CAR_PLATE,\n    BRL_CNPJ,\n    BRL_CPF,\n    BRL_CPF_CNPJ,\n    BRL_CURRENCY,\n    BRL_PHONE,\n    CREDIT_CARD,\n    DATE_DDMMYYYY,\n    DATE_MMDDYYYY,\n    DATE_YYYYMMDD,\n    ZIP_CODE,\n};\n"]}