import * as React from "react";
import { AvatarText } from "react-native-simple-elements/components/Avatar";
import Menu from "react-native-simple-elements/components/Menu";
import ImageButton from "react-native-simple-elements/components/ImageButton";
import Divider from "react-native-simple-elements/components/Divider";
import TouchableRipple from "react-native-simple-elements/components/TouchableRipple";

const parseAvatarText = fullName => {
  const parts = (fullName || "").split(" ");
  let text = "";

  if (parts.length >= 1) {
    text = text + parts[0].charAt(0).toUpperCase();
  }

  if (parts.length >= 2) {
    text = text + parts[1].charAt(0).toUpperCase();
  }

  return text;
};

const defaultProps = {
  circle: false
};

const AuthorizedUserMenu = ({
  loggedInUser,
  circle,
  avatarSize,
  avatarStyle,
  avatarLabelStyle,
  onViewProfileClick,
  onLogoutClick,
  userMenuItems,
  onUserMenuItemPress
}) => {
  const {
    firstName,
    avatarUrl
  } = loggedInUser || {};
  const [isOpen, setIsOpen] = React.useState(false);

  const openMenu = () => {
    setIsOpen(true);
  };

  const closeMenu = () => {
    setIsOpen(false);
  };

  const _handleMenuItemPress = item => {
    if (onUserMenuItemPress) {
      onUserMenuItemPress(item);
    }
  };

  return /*#__PURE__*/React.createElement(Menu, {
    visible: isOpen,
    onDismiss: closeMenu,
    anchor: loggedInUser !== null && loggedInUser !== void 0 && loggedInUser.userId && avatarUrl ? /*#__PURE__*/React.createElement(ImageButton, {
      source: {
        uri: avatarUrl
      },
      circle: circle,
      onPress: openMenu
    }) : /*#__PURE__*/React.createElement(TouchableRipple, {
      onPress: openMenu
    }, /*#__PURE__*/React.createElement(AvatarText, {
      label: parseAvatarText(loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.fullName),
      size: avatarSize,
      style: avatarStyle,
      labelStyle: avatarLabelStyle
    })),
    alignRight: true
  }, (loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.userId) && /*#__PURE__*/React.createElement(Menu.Item, {
    title: firstName || "",
    titleStyle: {
      textAlign: "center"
    },
    onPress: () => {
      if (typeof onViewProfileClick === "function") {
        onViewProfileClick();
      }
    }
  }), /*#__PURE__*/React.createElement(Divider, null), Array.isArray(userMenuItems) && userMenuItems.length > 0 ? userMenuItems.map((item, index) => {
    return /*#__PURE__*/React.createElement(Menu.Item, {
      key: index,
      title: item.label,
      icon: item.icon,
      onPress: () => _handleMenuItemPress(item)
    });
  }) : null, /*#__PURE__*/React.createElement(Divider, null), (loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.userId) && /*#__PURE__*/React.createElement(Menu.Item, {
    title: "Logout",
    onPress: () => {
      if (typeof onLogoutClick === "function") {
        onLogoutClick();
      }
    }
  }));
};

AuthorizedUserMenu.defaultProps = defaultProps;
export default AuthorizedUserMenu;
//# sourceMappingURL=AuthorizedUserMenu.js.map