{"version":3,"sources":["Pagination.tsx"],"names":["React","StyleSheet","TouchableOpacity","View","colors","vertical","horizontal","styles","create","container","position","flexDirection","marginVertical","xxSmall","justifyContent","alignSelf","bottom","height","small","pagination","width","borderRadius","marginHorizontal","xSmall","Pagination","size","paginationIndex","scrollToIndex","paginationDefaultColor","gray","paginationActiveColor","white","paginationStyle","paginationStyleItem","paginationStyleItemActive","paginationStyleItemInactive","onPaginationSelectedIndex","e2eID","Array","from","length","map","_","index","backgroundColor"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,gBAArB,EAAuCC,IAAvC,QAAmD,cAAnD;AAEA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,UAA3B,QAA6C,WAA7C;AAGA,MAAMC,MAAM,GAAGN,UAAU,CAACO,MAAX,CAAkB;AAC7BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,QAAQ,EAAE,UADH;AAEPC,IAAAA,aAAa,EAAE,KAFR;AAGPC,IAAAA,cAAc,EAAEP,QAAQ,CAACQ,OAHlB;AAIPC,IAAAA,cAAc,EAAE,QAJT;AAKPC,IAAAA,SAAS,EAAE,QALJ;AAMPC,IAAAA,MAAM,EAAE,CAND;AAOPC,IAAAA,MAAM,EAAEX,UAAU,CAACY;AAPZ,GADkB;AAU7BC,EAAAA,UAAU,EAAE;AACRC,IAAAA,KAAK,EAAEd,UAAU,CAACY,KADV;AAERD,IAAAA,MAAM,EAAEX,UAAU,CAACY,KAFX;AAGRG,IAAAA,YAAY,EAAE,EAHN;AAIRC,IAAAA,gBAAgB,EAAEhB,UAAU,CAACiB;AAJrB;AAViB,CAAlB,CAAf;AAkBA,OAAO,MAAMC,UAAqC,GAAG,CAAC;AAClDC,EAAAA,IADkD;AAElDC,EAAAA,eAAe,GAAG,CAFgC;AAGlDC,EAAAA,aAHkD;AAIlDC,EAAAA,sBAAsB,GAAGxB,MAAM,CAACyB,IAJkB;AAKlDC,EAAAA,qBAAqB,GAAG1B,MAAM,CAAC2B,KALmB;AAMlDC,EAAAA,eAAe,GAAG,EANgC;AAOlDC,EAAAA,mBAAmB,GAAG,EAP4B;AAQlDC,EAAAA,yBAAyB,GAAG,EARsB;AASlDC,EAAAA,2BAA2B,GAAG,EAToB;AAUlDC,EAAAA,yBAVkD;AAWlDC,EAAAA,KAAK,GAAG;AAX0C,CAAD,KAY/C;AACF,sBACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAAC9B,MAAM,CAACE,SAAR,EAAmBuB,eAAnB;AAAb,KACKM,KAAK,CAACC,IAAN,CAAW;AAAEC,IAAAA,MAAM,EAAEf;AAAV,GAAX,EAA6BgB,GAA7B,CAAiC,CAACC,CAAD,EAAIC,KAAJ,kBAC9B,oBAAC,gBAAD;AACI,IAAA,MAAM,YAAKN,KAAL,yBAAyBM,KAAzB,CADV;AAEI,IAAA,KAAK,EAAE,CACHpC,MAAM,CAACY,UADJ,EAEHc,mBAFG,EAGHP,eAAe,KAAKiB,KAApB,GACM;AAAEC,MAAAA,eAAe,EAAEd;AAAnB,KADN,GAEM;AAAEc,MAAAA,eAAe,EAAEhB;AAAnB,KALH,EAMHF,eAAe,KAAKiB,KAApB,GAA4BT,yBAA5B,GAAwDC,2BANrD,CAFX;AAUI,IAAA,GAAG,EAAEQ,KAVT;AAWI,IAAA,OAAO,EAAE,MAAM;AACXhB,MAAAA,aAAa,CAAC;AAAEgB,QAAAA;AAAF,OAAD,CAAb;AACAP,MAAAA,yBAAyB,SAAzB,IAAAA,yBAAyB,WAAzB,YAAAA,yBAAyB;AAC5B;AAdL,IADH,CADL,CADJ;AAsBH,CAnCM","sourcesContent":["import React from \"react\";\r\nimport { StyleSheet, TouchableOpacity, View } from \"react-native\";\r\n\r\nimport { colors, vertical, horizontal } from \"../themes\";\r\nimport { PaginationProps } from \"./PaginationProps\";\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        position: \"absolute\",\r\n        flexDirection: \"row\",\r\n        marginVertical: vertical.xxSmall,\r\n        justifyContent: \"center\",\r\n        alignSelf: \"center\",\r\n        bottom: 0,\r\n        height: horizontal.small,\r\n    },\r\n    pagination: {\r\n        width: horizontal.small,\r\n        height: horizontal.small,\r\n        borderRadius: 25,\r\n        marginHorizontal: horizontal.xSmall,\r\n    },\r\n});\r\n\r\nexport const Pagination: React.FC<PaginationProps> = ({\r\n    size,\r\n    paginationIndex = 0,\r\n    scrollToIndex,\r\n    paginationDefaultColor = colors.gray,\r\n    paginationActiveColor = colors.white,\r\n    paginationStyle = {},\r\n    paginationStyleItem = {},\r\n    paginationStyleItemActive = {},\r\n    paginationStyleItemInactive = {},\r\n    onPaginationSelectedIndex,\r\n    e2eID = \"\",\r\n}) => {\r\n    return (\r\n        <View style={[styles.container, paginationStyle]}>\r\n            {Array.from({ length: size }).map((_, index) => (\r\n                <TouchableOpacity\r\n                    testID={`${e2eID}_pagination_${index}`}\r\n                    style={[\r\n                        styles.pagination,\r\n                        paginationStyleItem,\r\n                        paginationIndex === index\r\n                            ? { backgroundColor: paginationActiveColor }\r\n                            : { backgroundColor: paginationDefaultColor },\r\n                        paginationIndex === index ? paginationStyleItemActive : paginationStyleItemInactive,\r\n                    ]}\r\n                    key={index}\r\n                    onPress={() => {\r\n                        scrollToIndex({ index });\r\n                        onPaginationSelectedIndex?.();\r\n                    }}\r\n                />\r\n            ))}\r\n        </View>\r\n    );\r\n};\r\n"]}