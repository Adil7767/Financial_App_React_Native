import * as React from "react";
import styled from "styled-components/native";
import useScrollbarSize from "react-scrollbar-size";
import { AppbarBackAction, AppbarContent, AppbarHeader } from "react-native-simple-elements/components/Appbar";
import useScreenSize from "react-native-simple-elements/components/Container/utils/useScreenSize";
import HomeIcon from "@mdi/svg/svg/home.svg";
import { View } from "react-native";
import Container, { ContainerFluid, FlexItem } from "react-native-simple-elements/components/Container";
const HeaderContainer = styled.View({
  zIndex: 3
});
const DesktopLeftContentWrapper = styled.View({
  width: 240,
  flexDirection: "row",
  alignItems: "center"
});
const defaultProps = {
  isUserIconCircle: true,
  shouldCheckScrollbarSize: false,
  fluid: false
};

const SimpleHeader = ({
  title,
  subtitle,
  mobileLeft,
  mobileContent,
  mobileRight,
  desktopLeft,
  desktopContent,
  desktopRight,
  showBackIcon,
  backButtonIcon,
  onHomeActionPress,
  onBackActionPress,
  shouldCheckScrollbarSize,
  fluid
}) => {
  const ContainerComponent = fluid ? ContainerFluid : Container;
  const {
    isMobileView
  } = useScreenSize();
  const {
    width: scrollbarSize
  } = useScrollbarSize();

  const _handleBackActionPress = () => {
    if (showBackIcon) {
      if (typeof onBackActionPress === "function") {
        onBackActionPress();
      }
    } else {
      if (typeof onHomeActionPress === "function") {
        onHomeActionPress();
      }
    }
  };

  return /*#__PURE__*/React.createElement(HeaderContainer, {
    style: {
      marginRight: shouldCheckScrollbarSize ? scrollbarSize || 0 : 0
    }
  }, /*#__PURE__*/React.createElement(AppbarHeader, {
    style: {
      justifyContent: "center"
    }
  }, /*#__PURE__*/React.createElement(ContainerComponent, null, isMobileView ? /*#__PURE__*/React.createElement(FlexItem, {
    left: () => mobileLeft ? mobileLeft() : /*#__PURE__*/React.createElement(AppbarBackAction, {
      icon: showBackIcon ? backButtonIcon : HomeIcon,
      onPress: _handleBackActionPress
    }),
    content: () => mobileContent ? mobileContent() : /*#__PURE__*/React.createElement(AppbarContent, {
      title: title,
      subtitle: subtitle,
      style: {
        justifyContent: "center"
      }
    }),
    right: () => mobileRight ? mobileRight() : null
  }) : null, !isMobileView ? /*#__PURE__*/React.createElement(FlexItem, {
    left: () => desktopLeft ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DesktopLeftContentWrapper, null, desktopLeft ? desktopLeft() : null)) : null,
    content: () => /*#__PURE__*/React.createElement(View, {
      style: {
        flex: 1,
        flexDirection: "row",
        alignItems: "center"
      }
    }, desktopContent ? desktopContent() : null),
    right: () => desktopRight ? desktopRight() : null
  }) : null)));
};

SimpleHeader.defaultProps = defaultProps;
export default SimpleHeader;
//# sourceMappingURL=SimpleHeader.js.map