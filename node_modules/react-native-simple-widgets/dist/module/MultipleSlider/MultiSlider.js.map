{"version":3,"sources":["MultiSlider.tsx"],"names":["React","Text","StyleSheet","PanResponder","View","Platform","I18nManager","ImageBackground","DefaultMarker","DefaultLabel","createArray","valueToPosition","positionToValue","noop","values","MultiSlider","Component","constructor","props","customPanResponder","start","move","end","create","onStartShouldSetPanResponder","evt","gestureState","onStartShouldSetPanResponderCapture","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderGrant","onPanResponderMove","onPanResponderTerminationRequest","onPanResponderRelease","onPanResponderTerminate","onShouldBlockNativeResponder","_panResponderBetween","startOne","startTwo","moveOne","moveTwo","endOne","endTwo","_panResponderOne","_panResponderTwo","enabledOne","onValuesChangeStart","setState","onePressed","state","enabledTwo","twoPressed","accumDistance","vertical","dy","dx","accumDistanceDisplacement","unconfined","isRTL","pastOne","bottom","markerSize","trueTop","positionTwo","allowOverlap","minMarkerOverlapDistance","minMarkerOverlapStepDistance","stepLength","top","sliderLength","confined","slipDisplacement","touchDimensions","Math","abs","value","optionsArray","snapped","positionOne","valueOne","change","valueTwo","push","onValuesChange","onMarkersPosition","pastTwo","moveX","onToggleOne","smoothSnapped","onValuesChangeFinish","onToggleTwo","console","error","min","max","step","length","initialValues","map","tempStepsAs","stepsAs","forEach","index","undefined","ops","stepLabel","suffix","prefix","pressedOne","subscribePanResponder","componentDidUpdate","prevProps","prevState","prevPositionOne","prevPositionTwo","nextState","getSteps","textStyles","styles","stepLabelStyle","transform","rotate","markerHeight","trackStyle","height","track","markerStyles","stepMarker","width","borderRadius","stepMarkerStyle","number","stepStyle","left","showStepMarkers","showStepLabels","render","selectedStyle","unselectedStyle","markerOffsetX","markerOffsetY","twoMarkers","trackOneLength","trackOneStyle","selectedTrack","trackThreeLength","trackThreeStyle","trackTwoLength","trackTwoStyle","Marker","customMarker","MarkerLeft","customMarkerLeft","MarkerRight","customMarkerRight","isMarkersSeparated","Label","customLabel","touchStyle","markerContainerOne","markerContainerTwo","right","containerStyle","container","body","fullTrack","panHandlers","showSteps","markerContainer","markerContainerStyle","topMarkerContainer","touch","component","_markerOne","markerStyle","pressedMarkerStyle","disabledMarkerStyle","valuePrefix","valueSuffix","_markerTwo","testID","enableLabel","imageBackgroundSource","position","justifyContent","flexDirection","select","ios","backgroundColor","android","web","alignItems","zIndex","marginLeft","color"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { Text } from \"react-native\";\n\nimport {\n    StyleSheet,\n    PanResponder,\n    View,\n    Platform,\n    // Dimensions,\n    I18nManager,\n    ImageBackground,\n} from \"react-native\";\n\nimport DefaultMarker from \"./DefaultMarker\";\nimport DefaultLabel from \"./DefaultLabel\";\nimport { createArray, valueToPosition, positionToValue } from \"./converters\";\n\nconst noop = (values) => {\n    // do something\n};\n\ntype Props = {\n    min?: number,\n    max?: number,\n    step?: number,\n    minMarkerOverlapDistance?: number,\n    minMarkerOverlapStepDistance?: number,\n    stepsAs?: any[],\n    enabledOne?: boolean,\n    enabledTwo?: boolean,\n    sliderLength?: number,\n    markerSize?: number,\n    vertical?: boolean,\n    allowOverlap?: boolean,\n    onValuesChange?: (evt?) => void,\n    onValuesChangeStart?: (evt?) => void,\n    onValuesChangeFinish?: (evt?) => void,\n    onMarkersPosition?: (evt?) => void,\n    onToggleOne?: (evt?) => void,\n    onToggleTwo?: (evt?) => void,\n    snapped?: boolean,\n    smoothSnapped?: boolean,\n    markerStyle?: any,\n    containerStyle?: any,\n    markerContainerStyle?: any,\n    pressedMarkerStyle?: any,\n    disabledMarkerStyle?: any,\n    selectedStyle?: any,\n    unselectedStyle?: any,\n    stepLabelStyle?: any,\n    trackStyle?: any,\n    stepStyle?: any,\n    stepMarkerStyle?: any,\n    imageBackgroundSource?: any,\n    touchDimensions?: any,\n    optionsArray?: any[],\n    customMarker?: React.ReactNode,\n    customMarkerLeft?: React.ReactNode,\n    customMarkerRight?: React.ReactNode,\n    customLabel?: React.ReactNode,\n    isMarkersSeparated?: boolean,\n    showSteps?: boolean,\n    showStepMarkers?: boolean,\n    showStepLabels?: boolean,\n    values?: number[],\n    markerOffsetX?: number,\n    markerOffsetY?: number,\n    valuePrefix?: number,\n    valueSuffix?: number,\n    testID?: string,\n    enableLabel?: boolean,\n}\n\ntype State = {\n    onePressed?: boolean,\n    twoPressed?: boolean,\n    valueOne?: number,\n    valueTwo?: number,\n    positionOne?: number,\n    positionTwo?: number,\n    pastOne?: number,\n    pastTwo?: number,\n    pressedOne?: boolean,\n}\n\nexport default class MultiSlider extends React.Component<Props, State> {\n\n    static defaultProps = {\n        values: [0],\n        onValuesChangeStart: noop,\n        onValuesChange: noop,\n        onValuesChangeFinish: noop,\n        onMarkersPosition: noop,\n        step: 1,\n        min: 0,\n        max: 10,\n        touchDimensions: {\n            height: 50,\n            width: 50,\n            borderRadius: 15,\n            slipDisplacement: 200,\n        },\n        customMarker: DefaultMarker,\n        customMarkerLeft: DefaultMarker,\n        customMarkerRight: DefaultMarker,\n        customLabel: DefaultLabel,\n        markerOffsetX: 0,\n        markerOffsetY: 0,\n        markerSize: 0,\n        sliderLength: 280,\n        onToggleOne: undefined,\n        onToggleTwo: undefined,\n        stepsAs: [],\n        showSteps: false,\n        showStepMarkers: true,\n        showStepLabels: true,\n        enabledOne: true,\n        enabledTwo: true,\n        allowOverlap: false,\n        snapped: false,\n        smoothSnapped: false,\n        vertical: false,\n        minMarkerOverlapDistance: 0,\n        minMarkerOverlapStepDistance: 0,\n        testID: \"\",\n    };\n\n    state: State = {};\n\n    stepsAs;\n    _panResponderBetween;\n    _panResponderOne;\n    _panResponderTwo;\n    optionsArray;\n    stepLength;\n    _markerOne;\n    _markerTwo;\n\n    constructor(props) {\n        super(props);\n\n        if (\n            this.props.minMarkerOverlapDistance > 0 &&\n            this.props.minMarkerOverlapStepDistance > 0\n        ) {\n            console.error(\n                \"You should provide either \\\"minMarkerOverlapDistance\\\" or \\\"minMarkerOverlapStepDistance\\\", not both. Expect unreliable results.\",\n            );\n        }\n\n        this.optionsArray =\n            this.props.optionsArray ||\n            createArray(this.props.min, this.props.max, this.props.step);\n        this.stepLength = this.props.sliderLength / (this.optionsArray.length - 1);\n\n        const initialValues = this.props.values.map(value =>\n            valueToPosition(\n                value,\n                this.optionsArray,\n                this.props.sliderLength,\n                this.props.markerSize,\n            ),\n        );\n\n        const tempStepsAs = {};\n        this.props.stepsAs.forEach(step => {\n            if (step?.index !== undefined) {\n                tempStepsAs[step?.index] = step;\n            }\n        });\n\n        this.stepsAs = {};\n        this.optionsArray.forEach((ops, index) => {\n            if (tempStepsAs[index]) {\n                const step = tempStepsAs[index];\n                this.stepsAs[index] = {\n                    stepLabel: step?.stepLabel ? step.stepLabel : ops,\n                    suffix: step?.suffix ? step.suffix : \"\",\n                    prefix: step?.prefix ? step.prefix : \"\",\n                };\n            } else {\n                this.stepsAs[index] = {\n                    stepLabel: ops,\n                    suffix: \"\",\n                    prefix: \"\",\n                };\n            }\n        });\n\n        this.state = {\n            pressedOne: true,\n            valueOne: this.props.values[0],\n            valueTwo: this.props.values[1],\n            pastOne: initialValues[0],\n            pastTwo: initialValues[1],\n            positionOne: initialValues[0],\n            positionTwo: initialValues[1],\n        };\n\n        this.subscribePanResponder();\n    }\n\n    subscribePanResponder = () => {\n        const customPanResponder = (start, move, end) => {\n            return PanResponder.create({\n                onStartShouldSetPanResponder: (evt, gestureState) => true,\n                onStartShouldSetPanResponderCapture: (evt, gestureState) => true,\n                onMoveShouldSetPanResponder: (evt, gestureState) => true,\n                onMoveShouldSetPanResponderCapture: (evt, gestureState) => true,\n                onPanResponderGrant: (evt, gestureState) => start(),\n                onPanResponderMove: (evt, gestureState) => move(gestureState),\n                onPanResponderTerminationRequest: (evt, gestureState) => false,\n                onPanResponderRelease: (evt, gestureState) => end(gestureState),\n                onPanResponderTerminate: (evt, gestureState) => end(gestureState),\n                onShouldBlockNativeResponder: (evt, gestureState) => true,\n            });\n        };\n\n        this._panResponderBetween = customPanResponder(\n            gestureState => {\n                this.startOne(gestureState);\n                this.startTwo(gestureState);\n            },\n            gestureState => {\n                this.moveOne(gestureState);\n                this.moveTwo(gestureState);\n            },\n            gestureState => {\n                this.endOne(gestureState);\n                this.endTwo(gestureState);\n            },\n        );\n\n        this._panResponderOne = customPanResponder(\n            this.startOne,\n            this.moveOne,\n            this.endOne,\n        );\n        this._panResponderTwo = customPanResponder(\n            this.startTwo,\n            this.moveTwo,\n            this.endTwo,\n        );\n    };\n\n    startOne = (evt?) => {\n        if (this.props.enabledOne) {\n            this.props.onValuesChangeStart();\n            this.setState({\n                onePressed: !this.state.onePressed,\n            });\n        }\n    };\n\n    startTwo = (evt?) => {\n        if (this.props.enabledTwo) {\n            this.props.onValuesChangeStart();\n            this.setState({\n                twoPressed: !this.state.twoPressed,\n            });\n        }\n    };\n\n    moveOne = gestureState => {\n        if (!this.props.enabledOne) {\n            return;\n        }\n\n        const accumDistance = this.props.vertical\n            ? -gestureState.dy\n            : gestureState.dx;\n        const accumDistanceDisplacement = this.props.vertical\n            ? gestureState.dx\n            : gestureState.dy;\n\n        const unconfined = I18nManager.isRTL\n            ? this.state.pastOne - accumDistance\n            : accumDistance + this.state.pastOne;\n        const bottom = this.props.markerSize / 2;\n        const trueTop =\n            this.state.positionTwo -\n            (this.props.allowOverlap\n                ? 0\n                : this.props.minMarkerOverlapDistance > 0\n                    ? this.props.minMarkerOverlapDistance\n                    : (this.props.minMarkerOverlapStepDistance || 1) * this.stepLength);\n        const top =\n            trueTop === 0\n                ? 0\n                : trueTop || this.props.sliderLength - this.props.markerSize / 2;\n        const confined =\n            unconfined < bottom ? bottom : unconfined > top ? top : unconfined;\n        const slipDisplacement = this.props.touchDimensions.slipDisplacement;\n\n        if (\n            Math.abs(accumDistanceDisplacement) < slipDisplacement ||\n            !slipDisplacement\n        ) {\n            const value = positionToValue(\n                confined,\n                this.optionsArray,\n                this.props.sliderLength,\n                this.props.markerSize,\n            );\n            const snapped = valueToPosition(\n                value,\n                this.optionsArray,\n                this.props.sliderLength,\n                this.props.markerSize,\n            );\n            this.setState({\n                positionOne: this.props.snapped ? snapped : confined,\n            });\n\n            if (value !== this.state.valueOne) {\n                this.setState(\n                    {\n                        valueOne: value,\n                    },\n                    () => {\n                        const change = [this.state.valueOne];\n                        if (this.state.valueTwo) {\n                            change.push(this.state.valueTwo);\n                        }\n                        this.props.onValuesChange(change);\n\n                        this.props.onMarkersPosition([\n                            this.state.positionOne,\n                            this.state.positionTwo,\n                        ]);\n                    },\n                );\n            }\n        }\n    };\n\n    moveTwo = gestureState => {\n        if (!this.props.enabledTwo) {\n            return;\n        }\n\n        const accumDistance = this.props.vertical\n            ? -gestureState.dy\n            : gestureState.dx;\n        const accumDistanceDisplacement = this.props.vertical\n            ? gestureState.dx\n            : gestureState.dy;\n\n        const unconfined = I18nManager.isRTL\n            ? this.state.pastTwo - accumDistance\n            : accumDistance + this.state.pastTwo;\n        const bottom =\n            this.state.positionOne +\n            (this.props.allowOverlap\n                ? 0\n                : this.props.minMarkerOverlapDistance > 0\n                    ? this.props.minMarkerOverlapDistance\n                    : (this.props.minMarkerOverlapStepDistance || 1) * this.stepLength);\n        const top = this.props.sliderLength - this.props.markerSize / 2;\n        const confined =\n            unconfined < bottom ? bottom : unconfined > top ? top : unconfined;\n        const slipDisplacement = this.props.touchDimensions.slipDisplacement;\n\n        if (\n            Math.abs(accumDistanceDisplacement) < slipDisplacement ||\n            !slipDisplacement\n        ) {\n            const value = positionToValue(\n                confined,\n                this.optionsArray,\n                this.props.sliderLength,\n                this.props.markerSize,\n            );\n            const snapped = valueToPosition(\n                value,\n                this.optionsArray,\n                this.props.sliderLength,\n                this.props.markerSize,\n            );\n\n            this.setState({\n                positionTwo: this.props.snapped ? snapped : confined,\n            });\n\n            if (value !== this.state.valueTwo) {\n                this.setState(\n                    {\n                        valueTwo: value,\n                    },\n                    () => {\n                        this.props.onValuesChange([\n                            this.state.valueOne,\n                            this.state.valueTwo,\n                        ]);\n\n                        this.props.onMarkersPosition([\n                            this.state.positionOne,\n                            this.state.positionTwo,\n                        ]);\n                    },\n                );\n            }\n        }\n    };\n\n    endOne = gestureState => {\n        if (gestureState.moveX === 0 && this.props.onToggleOne) {\n            this.props.onToggleOne();\n            return;\n        }\n\n        const snapped = valueToPosition(\n            this.state.valueOne,\n            this.optionsArray,\n            this.props.sliderLength,\n        );\n\n        this.setState(\n            {\n                pastOne: this.props.smoothSnapped ? snapped : this.state.positionOne,\n                ...(this.props.smoothSnapped ? { positionOne: snapped } : {}),\n                onePressed: !this.state.onePressed,\n            },\n            () => {\n                const change = [this.state.valueOne];\n                if (this.state.valueTwo) {\n                    change.push(this.state.valueTwo);\n                }\n                this.props.onValuesChangeFinish(change);\n            },\n        );\n    };\n\n    endTwo = gestureState => {\n        if (gestureState.moveX === 0 && this.props.onToggleTwo) {\n            this.props.onToggleTwo();\n            return;\n        }\n\n        const snapped = valueToPosition(\n            this.state.valueTwo,\n            this.optionsArray,\n            this.props.sliderLength,\n        );\n\n        this.setState(\n            {\n                twoPressed: !this.state.twoPressed,\n                pastTwo: this.props.smoothSnapped ? snapped : this.state.positionTwo,\n                ...(this.props.smoothSnapped ? { positionTwo: snapped } : {}),\n            },\n            () => {\n                this.props.onValuesChangeFinish([\n                    this.state.valueOne,\n                    this.state.valueTwo,\n                ]);\n            },\n        );\n    };\n\n    componentDidUpdate(prevProps, prevState) {\n        const {\n            positionOne: prevPositionOne,\n            positionTwo: prevPositionTwo,\n        } = prevState;\n\n        const { positionOne, positionTwo } = this.state;\n\n        if (\n            typeof positionOne === \"undefined\" &&\n            typeof positionTwo !== \"undefined\"\n        ) {\n            return;\n        }\n\n        if (positionOne !== prevPositionOne || positionTwo !== prevPositionTwo) {\n            this.props.onMarkersPosition([positionOne, positionTwo]);\n        }\n\n        if (this.state.onePressed || this.state.twoPressed) {\n            return;\n        }\n\n        const nextState = {} as any;\n        if (\n            prevProps.min !== this.props.min ||\n            prevProps.max !== this.props.max ||\n            prevProps.step !== this.props.step ||\n            prevProps.values[0] !== this.props.values[0] ||\n            prevProps.sliderLength !== this.props.sliderLength ||\n            prevProps.values[1] !== this.props.values[1] ||\n            (prevProps.sliderLength !== this.props.sliderLength &&\n                prevProps.values[1])\n        ) {\n            this.optionsArray =\n                this.props.optionsArray ||\n                createArray(this.props.min, this.props.max, this.props.step);\n\n            this.stepLength = this.props.sliderLength / this.optionsArray.length;\n\n            const positionOne = valueToPosition(\n                this.props.values[0],\n                this.optionsArray,\n                this.props.sliderLength,\n                this.props.markerSize,\n            );\n            nextState.valueOne = this.props.values[0];\n            nextState.pastOne = positionOne;\n            nextState.positionOne = positionOne;\n\n            const positionTwo = valueToPosition(\n                this.props.values[1],\n                this.optionsArray,\n                this.props.sliderLength,\n                this.props.markerSize,\n            );\n            nextState.valueTwo = this.props.values[1];\n            nextState.pastTwo = positionTwo;\n            nextState.positionTwo = positionTwo;\n\n            this.setState(nextState);\n        }\n    }\n\n    getSteps() {\n        const stepLength = this.props.sliderLength / (this.optionsArray.length - 1);\n        const textStyles = [\n            styles.stepLabel,\n            this.props.stepLabelStyle,\n            ...(this.props.vertical ? [{ transform: [{ rotate: \"90deg\" }] }] : []),\n        ];\n        const markerHeight = this.props?.trackStyle?.height || styles.track.height;\n        const markerStyles = [\n            styles.stepMarker,\n            {\n                height: markerHeight,\n                width: markerHeight,\n                borderRadius: markerHeight / 2,\n            },\n            this.props.stepMarkerStyle,\n        ];\n\n        return this.optionsArray.map((number, index) => {\n            const step = this.stepsAs[index];\n            return (\n                <View\n                    key={number}\n                    style={[\n                        styles.step,\n                        this.props.stepStyle,\n                        { left: stepLength * index },\n                    ]}\n                >\n                    {this.props.showStepMarkers &&\n                        index !== 0 &&\n                        index !== this.optionsArray.length - 1 && (\n                        <View style={markerStyles} />\n                    )}\n                    {this.props.showStepLabels && (\n                        <Text\n                            style={textStyles}\n                        >{`${step.prefix}${step.stepLabel}${step.suffix}`}</Text>\n                    )}\n                </View>\n            );\n        });\n    }\n\n    render() {\n        const { positionOne, positionTwo } = this.state;\n        const {\n            selectedStyle,\n            unselectedStyle,\n            sliderLength,\n            markerOffsetX,\n            markerOffsetY,\n        } = this.props;\n        const twoMarkers = this.props.values.length == 2; // when allowOverlap, positionTwo could be 0, identified as string '0' and throwing 'RawText 0 needs to be wrapped in <Text>' error\n\n        const trackOneLength = positionOne;\n        const trackOneStyle = twoMarkers\n            ? unselectedStyle\n            : selectedStyle || styles.selectedTrack;\n        const trackThreeLength = twoMarkers ? sliderLength - positionTwo : 0;\n        const trackThreeStyle = unselectedStyle;\n        const trackTwoLength = sliderLength - trackOneLength - trackThreeLength;\n        const trackTwoStyle = twoMarkers\n            ? selectedStyle || styles.selectedTrack\n            : unselectedStyle;\n        const Marker = this.props.customMarker;\n\n        const MarkerLeft = this.props.customMarkerLeft;\n        const MarkerRight = this.props.customMarkerRight;\n        const isMarkersSeparated = this.props.isMarkersSeparated || false;\n\n        const Label = this.props.customLabel;\n\n        const {\n            // slipDisplacement,\n            height,\n            width,\n            borderRadius,\n        } = this.props.touchDimensions;\n        const touchStyle = {\n            borderRadius: borderRadius || 0,\n            ...(height && { height }),\n            ...(width && { width }),\n        };\n\n        const markerContainerOne = {\n            top: markerOffsetY - 24,\n            left: trackOneLength + markerOffsetX - 24,\n        };\n\n        const markerContainerTwo = {\n            top: markerOffsetY - 24,\n            right: trackThreeLength + markerOffsetX - 24,\n        };\n\n        const containerStyle = [styles.container, this.props.containerStyle];\n\n        if (this.props.vertical) {\n            containerStyle.push({\n                transform: [{ rotate: \"-90deg\" }],\n            });\n        }\n\n        const body = (\n            <React.Fragment>\n                <View style={[styles.fullTrack, { width: sliderLength }]}>\n                    <View\n                        style={[\n                            styles.track,\n                            this.props.trackStyle,\n                            trackOneStyle,\n                            { width: trackOneLength },\n                        ]}\n                    />\n                    <View\n                        style={[\n                            styles.track,\n                            this.props.trackStyle,\n                            trackTwoStyle,\n                            { width: trackTwoLength },\n                        ]}\n                        {...(twoMarkers ? this._panResponderBetween.panHandlers : {})}\n                    />\n                    {twoMarkers && (\n                        <View\n                            style={[\n                                styles.track,\n                                this.props.trackStyle,\n                                trackThreeStyle,\n                                { width: trackThreeLength },\n                            ]}\n                        />\n                    )}\n                    {this.props.showSteps && this.getSteps()}\n                    <View\n                        style={[\n                            styles.markerContainer,\n                            markerContainerOne,\n                            this.props.markerContainerStyle,\n                            positionOne > sliderLength / 2 && styles.topMarkerContainer,\n                        ]}\n                    >\n                        <View\n                            style={[styles.touch, touchStyle]}\n                            ref={component => (this._markerOne = component)}\n                            {...this._panResponderOne.panHandlers}\n                        >\n                            {isMarkersSeparated === false ? (\n                                // @ts-ignore\n                                <Marker\n                                    enabled={this.props.enabledOne}\n                                    pressed={this.state.onePressed}\n                                    markerStyle={this.props.markerStyle}\n                                    pressedMarkerStyle={this.props.pressedMarkerStyle}\n                                    disabledMarkerStyle={this.props.disabledMarkerStyle}\n                                    currentValue={this.state.valueOne}\n                                    valuePrefix={this.props.valuePrefix}\n                                    valueSuffix={this.props.valueSuffix}\n                                />\n                            ) : (\n                                // @ts-ignore\n                                <MarkerLeft\n                                    enabled={this.props.enabledOne}\n                                    pressed={this.state.onePressed}\n                                    markerStyle={this.props.markerStyle}\n                                    pressedMarkerStyle={this.props.pressedMarkerStyle}\n                                    disabledMarkerStyle={this.props.disabledMarkerStyle}\n                                    currentValue={this.state.valueOne}\n                                    valuePrefix={this.props.valuePrefix}\n                                    valueSuffix={this.props.valueSuffix}\n                                />\n                            )}\n                        </View>\n                    </View>\n                    {twoMarkers && positionOne !== this.props.sliderLength && (\n                        <View\n                            style={[\n                                styles.markerContainer,\n                                markerContainerTwo,\n                                this.props.markerContainerStyle,\n                            ]}\n                        >\n                            <View\n                                style={[styles.touch, touchStyle]}\n                                ref={component => (this._markerTwo = component)}\n                                {...this._panResponderTwo.panHandlers}\n                            >\n                                {isMarkersSeparated === false ? (\n                                    // @ts-ignore\n                                    <Marker\n                                        pressed={this.state.twoPressed}\n                                        markerStyle={this.props.markerStyle}\n                                        pressedMarkerStyle={this.props.pressedMarkerStyle}\n                                        disabledMarkerStyle={this.props.disabledMarkerStyle}\n                                        currentValue={this.state.valueTwo}\n                                        enabled={this.props.enabledTwo}\n                                        valuePrefix={this.props.valuePrefix}\n                                        valueSuffix={this.props.valueSuffix}\n                                    />\n                                ) : (\n                                    // @ts-ignore\n                                    <MarkerRight\n                                        pressed={this.state.twoPressed}\n                                        markerStyle={this.props.markerStyle}\n                                        pressedMarkerStyle={this.props.pressedMarkerStyle}\n                                        disabledMarkerStyle={this.props.disabledMarkerStyle}\n                                        currentValue={this.state.valueTwo}\n                                        enabled={this.props.enabledTwo}\n                                        valuePrefix={this.props.valuePrefix}\n                                        valueSuffix={this.props.valueSuffix}\n                                    />\n                                )}\n                            </View>\n                        </View>\n                    )}\n                </View>\n            </React.Fragment>\n        );\n\n        return (\n            <View testID={this.props.testID}>\n                {this.props.enableLabel && (\n                    // @ts-ignore\n                    <Label\n                        oneMarkerValue={this.state.valueOne}\n                        twoMarkerValue={this.state.valueTwo}\n                        minValue={this.props.min}\n                        maxValue={this.props.max}\n                        oneMarkerLeftPosition={positionOne}\n                        twoMarkerLeftPosition={positionTwo}\n                        oneMarkerPressed={this.state.onePressed}\n                        twoMarkerPressed={this.state.twoPressed}\n                    />\n                )}\n                {this.props.imageBackgroundSource && (\n                    <ImageBackground\n                        source={this.props.imageBackgroundSource}\n                        style={[{ width: \"100%\", height: \"100%\" }, containerStyle]}\n                    >\n                        {body}\n                    </ImageBackground>\n                )}\n                {!this.props.imageBackgroundSource && (\n                    <View style={containerStyle}>{body}</View>\n                )}\n            </View>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        position: \"relative\",\n        height: 50,\n        justifyContent: \"center\",\n    },\n    fullTrack: {\n        flexDirection: \"row\",\n    },\n    track: {\n        ...Platform.select({\n            ios: {\n                height: 2,\n                borderRadius: 2,\n                backgroundColor: \"#A7A7A7\",\n            },\n            android: {\n                height: 2,\n                backgroundColor: \"#CECECE\",\n            },\n            web: {\n                height: 2,\n                borderRadius: 2,\n                backgroundColor: \"#A7A7A7\",\n            },\n        }),\n    },\n    selectedTrack: {\n        ...Platform.select({\n            ios: {\n                backgroundColor: \"#095FFF\",\n            },\n            android: {\n                backgroundColor: \"#0D8675\",\n            },\n            web: {\n                backgroundColor: \"#095FFF\",\n            },\n        }),\n    },\n    markerContainer: {\n        position: \"absolute\",\n        width: 48,\n        height: 48,\n        backgroundColor: \"transparent\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    },\n    topMarkerContainer: {\n        zIndex: 1,\n    },\n    touch: {\n        backgroundColor: \"transparent\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    },\n    step: {\n        position: \"absolute\",\n        marginLeft: -5,\n    },\n    stepMarker: {\n        position: \"absolute\",\n        left: 2,\n        width: 6,\n        height: 6,\n        backgroundColor: \"#0000008c\",\n        borderRadius: 3,\n    },\n    stepLabel: {\n        position: \"absolute\",\n        top: 15,\n        color: \"#333\",\n    },\n});"]}