{"version":3,"sources":["Pager.native.tsx"],"names":["React","Animated","Keyboard","StyleSheet","ViewPager","useAnimatedValue","AnimatedViewPager","createAnimatedComponent","Pager","keyboardDismissMode","swipeEnabled","navigationState","onIndexChange","onSwipeStart","onSwipeEnd","children","style","rest","index","listenersRef","useRef","pagerRef","indexRef","navigationStateRef","position","offset","useEffect","current","jumpTo","useCallback","key","routes","findIndex","route","setPage","dismiss","onPageScrollStateChanged","state","pageScrollState","nativeEvent","subscription","addListener","value","next","Math","ceil","floor","forEach","listener","removeListener","addEnterListener","push","indexOf","splice","add","render","styles","container","event","useNativeDriver","e","create","flex"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { Animated, Keyboard, StyleSheet } from \"react-native\";\nimport ViewPager, {\n    PageScrollStateChangedNativeEvent,\n} from \"react-native-pager-view\";\nimport useAnimatedValue from \"./useAnimatedValue\";\nimport {\n    NavigationState,\n    Route,\n    Listener,\n    EventEmitterProps,\n    PagerProps,\n} from \"./types\";\n\nconst AnimatedViewPager = Animated.createAnimatedComponent(ViewPager);\n\ntype Props<T extends Route> = PagerProps & {\n  onIndexChange: (index: number) => void;\n  navigationState: NavigationState<T>;\n  children: (\n    props: EventEmitterProps & {\n      // Animated value which represents the state of current index\n      // It can include fractional digits as it represents the intermediate value\n      position: Animated.AnimatedInterpolation;\n      // Function to actually render the content of the pager\n      // The parent component takes care of rendering\n      render: (children: React.ReactNode) => React.ReactNode;\n      // Callback to call when switching the tab\n      // The tab switch animation is performed even if the index in state is unchanged\n      jumpTo: (key: string) => void;\n    }\n  ) => React.ReactElement;\n};\n\nexport default function Pager<T extends Route>({\n    keyboardDismissMode = \"auto\",\n    swipeEnabled = true,\n    navigationState,\n    onIndexChange,\n    onSwipeStart,\n    onSwipeEnd,\n    children,\n    style,\n    ...rest\n}: Props<T>) {\n    const { index } = navigationState;\n\n    const listenersRef = React.useRef<Listener[]>([]);\n\n    const pagerRef = React.useRef<ViewPager>();\n    const indexRef = React.useRef<number>(index);\n    const navigationStateRef = React.useRef(navigationState);\n\n    const position = useAnimatedValue(index);\n    const offset = useAnimatedValue(0);\n\n    React.useEffect(() => {\n        navigationStateRef.current = navigationState;\n    });\n\n    const jumpTo = React.useCallback((key: string) => {\n        const index = navigationStateRef.current.routes.findIndex(\n            (route: { key: string }) => route.key === key\n        );\n\n        pagerRef.current?.setPage(index);\n    }, []);\n\n    React.useEffect(() => {\n        if (keyboardDismissMode === \"auto\") {\n            Keyboard.dismiss();\n        }\n\n        if (indexRef.current !== index) {\n            pagerRef.current?.setPage(index);\n        }\n    }, [keyboardDismissMode, index]);\n\n    const onPageScrollStateChanged = (\n        state: PageScrollStateChangedNativeEvent\n    ) => {\n        const { pageScrollState } = state.nativeEvent;\n\n        switch (pageScrollState) {\n        case \"idle\":\n            onSwipeEnd?.();\n            return;\n        case \"dragging\": {\n            const subscription = offset.addListener(({ value }) => {\n                const next =\n            index + (value > 0 ? Math.ceil(value) : Math.floor(value));\n\n                if (next !== index) {\n                    listenersRef.current.forEach((listener) => listener(next));\n                }\n\n                offset.removeListener(subscription);\n            });\n\n            onSwipeStart?.();\n            return;\n        }\n        }\n    };\n\n    const addEnterListener = React.useCallback((listener: Listener) => {\n        listenersRef.current.push(listener);\n\n        return () => {\n            const index = listenersRef.current.indexOf(listener);\n\n            if (index > -1) {\n                listenersRef.current.splice(index, 1);\n            }\n        };\n    }, []);\n\n    return children({\n        position: Animated.add(position, offset),\n        addEnterListener,\n        jumpTo,\n        render: (children) => (\n            <AnimatedViewPager\n                {...rest}\n                ref={pagerRef}\n                style={[styles.container, style]}\n                initialPage={index}\n                keyboardDismissMode={\n                    keyboardDismissMode === \"auto\" ? \"on-drag\" : keyboardDismissMode\n                }\n                onPageScroll={Animated.event(\n                    [\n                        {\n                            nativeEvent: {\n                                position: position,\n                                offset: offset,\n                            },\n                        },\n                    ],\n                    { useNativeDriver: true }\n                )}\n                onPageSelected={(e) => {\n                    const index = e.nativeEvent.position;\n                    indexRef.current = index;\n                    onIndexChange(index);\n                }}\n                onPageScrollStateChanged={onPageScrollStateChanged}\n                scrollEnabled={swipeEnabled}\n            >\n                {children}\n            </AnimatedViewPager>\n        ),\n    });\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n});\n"]}