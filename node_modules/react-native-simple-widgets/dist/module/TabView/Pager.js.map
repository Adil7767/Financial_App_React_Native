{"version":3,"sources":["Pager.tsx"],"names":["React","Animated","PanResponder","Keyboard","StyleSheet","I18nManager","View","useAnimatedValue","DEAD_ZONE","DefaultTransitionSpec","timing","spring","stiffness","damping","mass","overshootClamping","Pager","layout","keyboardDismissMode","swipeEnabled","navigationState","onIndexChange","onSwipeStart","onSwipeEnd","children","style","routes","index","panX","listenersRef","useRef","navigationStateRef","layoutRef","onIndexChangeRef","currentIndexRef","pendingIndexRef","swipeVelocityThreshold","swipeDistanceThreshold","width","jumpToIndex","useCallback","offset","current","transitionConfig","parallel","toValue","useNativeDriver","start","finished","undefined","useEffect","setValue","dismiss","isMovingHorizontally","_","gestureState","Math","abs","dx","dy","vx","vy","canMoveScreen","event","length","startGesture","stopAnimation","setOffset","_value","respondToGesture","position","_offset","next","ceil","floor","forEach","listener","finishGesture","flattenOffset","currentIndex","nextIndex","round","min","max","isFinite","addEnterListener","push","indexOf","splice","jumpTo","key","findIndex","route","panResponder","create","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderGrant","onPanResponderMove","onPanResponderTerminate","onPanResponderRelease","onPanResponderTerminationRequest","maxTranslate","translateX","multiply","interpolate","inputRange","outputRange","extrapolate","isRTL","divide","Value","render","styles","sheet","transform","panHandlers","Children","map","child","i","focused","absoluteFill","flex","flexDirection","alignItems"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACIC,QADJ,EAEIC,YAFJ,EAGIC,QAHJ,EAIIC,UAJJ,EAOIC,WAPJ,EAQIC,IARJ,QASO,cATP;AAUA,OAAOC,gBAAP,MAA6B,oBAA7B;AA6BA,MAAMC,SAAS,GAAG,EAAlB;AAEA,MAAMC,qBAAqB,GAAG;AAC1BC,EAAAA,MAAM,EAAET,QAAQ,CAACU,MADS;AAE1BC,EAAAA,SAAS,EAAE,IAFe;AAG1BC,EAAAA,OAAO,EAAE,GAHiB;AAI1BC,EAAAA,IAAI,EAAE,CAJoB;AAK1BC,EAAAA,iBAAiB,EAAE;AALO,CAA9B;AAQA,eAAe,SAASC,KAAT,CAAgC;AAC3CC,EAAAA,MAD2C;AAE3CC,EAAAA,mBAAmB,GAAG,MAFqB;AAG3CC,EAAAA,YAAY,GAAG,IAH4B;AAI3CC,EAAAA,eAJ2C;AAK3CC,EAAAA,aAL2C;AAM3CC,EAAAA,YAN2C;AAO3CC,EAAAA,UAP2C;AAQ3CC,EAAAA,QAR2C;AAS3CC,EAAAA;AAT2C,CAAhC,EAUF;AACT,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAoBP,eAA1B;AAEA,QAAMQ,IAAI,GAAGrB,gBAAgB,CAAC,CAAD,CAA7B;AAEA,QAAMsB,YAAY,GAAG7B,KAAK,CAAC8B,MAAN,CAAyB,EAAzB,CAArB;AAEA,QAAMC,kBAAkB,GAAG/B,KAAK,CAAC8B,MAAN,CAAaV,eAAb,CAA3B;AACA,QAAMY,SAAS,GAAGhC,KAAK,CAAC8B,MAAN,CAAab,MAAb,CAAlB;AACA,QAAMgB,gBAAgB,GAAGjC,KAAK,CAAC8B,MAAN,CAAaT,aAAb,CAAzB;AAEA,QAAMa,eAAe,GAAGlC,KAAK,CAAC8B,MAAN,CAAaH,KAAb,CAAxB;AACA,QAAMQ,eAAe,GAAGnC,KAAK,CAAC8B,MAAN,EAAxB;AAEA,QAAMM,sBAAsB,GAAG,IAA/B;AACA,QAAMC,sBAAsB,GAAGpB,MAAM,CAACqB,KAAP,GAAe,IAA9C;AAEA,QAAMC,WAAW,GAAGvC,KAAK,CAACwC,WAAN,CACfb,KAAD,IAAmB;AACf,UAAMc,MAAM,GAAG,CAACd,KAAD,GAASK,SAAS,CAACU,OAAV,CAAkBJ,KAA1C;AAEA,UAAM;AAAE5B,MAAAA,MAAF;AAAU,SAAGiC;AAAb,QAAkClC,qBAAxC;AAEAR,IAAAA,QAAQ,CAAC2C,QAAT,CAAkB,CACdlC,MAAM,CAACkB,IAAD,EAAO,EACT,GAAGe,gBADM;AAETE,MAAAA,OAAO,EAAEJ,MAFA;AAGTK,MAAAA,eAAe,EAAE;AAHR,KAAP,CADQ,CAAlB,EAMGC,KANH,CAMS,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAkB;AACvB,UAAIA,QAAJ,EAAc;AACVf,QAAAA,gBAAgB,CAACS,OAAjB,CAAyBf,KAAzB;AACAQ,QAAAA,eAAe,CAACO,OAAhB,GAA0BO,SAA1B;AACH;AACJ,KAXD;AAaAd,IAAAA,eAAe,CAACO,OAAhB,GAA0Bf,KAA1B;AACH,GApBe,EAqBhB,CAACC,IAAD,CArBgB,CAApB;AAwBA5B,EAAAA,KAAK,CAACkD,SAAN,CAAgB,MAAM;AAClBnB,IAAAA,kBAAkB,CAACW,OAAnB,GAA6BtB,eAA7B;AACAY,IAAAA,SAAS,CAACU,OAAV,GAAoBzB,MAApB;AACAgB,IAAAA,gBAAgB,CAACS,OAAjB,GAA2BrB,aAA3B;AACH,GAJD;AAMArB,EAAAA,KAAK,CAACkD,SAAN,CAAgB,MAAM;AAClB,UAAMT,MAAM,GAAG,CAACV,kBAAkB,CAACW,OAAnB,CAA2Bf,KAA5B,GAAoCV,MAAM,CAACqB,KAA1D;AAEAV,IAAAA,IAAI,CAACuB,QAAL,CAAcV,MAAd;AACH,GAJD,EAIG,CAACxB,MAAM,CAACqB,KAAR,EAAeV,IAAf,CAJH;AAMA5B,EAAAA,KAAK,CAACkD,SAAN,CAAgB,MAAM;AAClB,QAAIhC,mBAAmB,KAAK,MAA5B,EAAoC;AAChCf,MAAAA,QAAQ,CAACiD,OAAT;AACH;;AAED,QAAInC,MAAM,CAACqB,KAAP,IAAgBJ,eAAe,CAACQ,OAAhB,KAA4Bf,KAAhD,EAAuD;AACnDY,MAAAA,WAAW,CAACZ,KAAD,CAAX;AACH;AACJ,GARD,EAQG,CAACY,WAAD,EAAcrB,mBAAd,EAAmCD,MAAM,CAACqB,KAA1C,EAAiDX,KAAjD,CARH;;AAUA,QAAM0B,oBAAoB,GAAG,CACzBC,CADyB,EAEzBC,YAFyB,KAGxB;AACD,WACIC,IAAI,CAACC,GAAL,CAASF,YAAY,CAACG,EAAtB,IAA4BF,IAAI,CAACC,GAAL,CAASF,YAAY,CAACI,EAAb,GAAkB,CAA3B,CAA5B,IACNH,IAAI,CAACC,GAAL,CAASF,YAAY,CAACK,EAAtB,IAA4BJ,IAAI,CAACC,GAAL,CAASF,YAAY,CAACM,EAAb,GAAkB,CAA3B,CAF1B;AAIH,GARD;;AAUA,QAAMC,aAAa,GAAG,CAClBC,KADkB,EAElBR,YAFkB,KAGjB;AACD,QAAIpC,YAAY,KAAK,KAArB,EAA4B;AACxB,aAAO,KAAP;AACH;;AAED,WACIkC,oBAAoB,CAACU,KAAD,EAAQR,YAAR,CAApB,KACJA,YAAY,CAACG,EAAb,IAAmBlD,SAAnB,IAAgC0B,eAAe,CAACQ,OAAhB,GAA0B,CAA3D,IACEa,YAAY,CAACG,EAAb,IAAmB,CAAClD,SAApB,IACC0B,eAAe,CAACQ,OAAhB,GAA0BhB,MAAM,CAACsC,MAAP,GAAgB,CAHxC,CADJ;AAMH,GAdD;;AAgBA,QAAMC,YAAY,GAAG,MAAM;AACvB3C,IAAAA,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY;;AAEZ,QAAIJ,mBAAmB,KAAK,SAA5B,EAAuC;AACnCf,MAAAA,QAAQ,CAACiD,OAAT;AACH;;AAEDxB,IAAAA,IAAI,CAACsC,aAAL,GAPuB,CAQvB;;AACAtC,IAAAA,IAAI,CAACuC,SAAL,CAAevC,IAAI,CAACwC,MAApB;AACH,GAVD;;AAYA,QAAMC,gBAAgB,GAAG,CACrBf,CADqB,EAErBC,YAFqB,KAGpB;AACD,SACA;AACKA,IAAAA,YAAY,CAACG,EAAb,GAAkB,CAAlB,IAAuB/B,KAAK,IAAI,CAAjC,IACN;AACC4B,IAAAA,YAAY,CAACG,EAAb,GAAkB,CAAlB,IAAuB/B,KAAK,IAAID,MAAM,CAACsC,MAAP,GAAgB,CAJ/C,EAKE;AACE;AACH;;AAED,QAAI/C,MAAM,CAACqB,KAAX,EAAkB;AACd;AACA,YAAMgC,QAAQ,GAAG,CAAC1C,IAAI,CAAC2C,OAAL,GAAehB,YAAY,CAACG,EAA7B,IAAmC,CAACzC,MAAM,CAACqB,KAA5D;AACA,YAAMkC,IAAI,GACdF,QAAQ,GAAG3C,KAAX,GAAmB6B,IAAI,CAACiB,IAAL,CAAUH,QAAV,CAAnB,GAAyCd,IAAI,CAACkB,KAAL,CAAWJ,QAAX,CADrC;;AAGA,UAAIE,IAAI,KAAK7C,KAAb,EAAoB;AAChBE,QAAAA,YAAY,CAACa,OAAb,CAAqBiC,OAArB,CAA8BC,QAAD,IAAcA,QAAQ,CAACJ,IAAD,CAAnD;AACH;AACJ;;AAED5C,IAAAA,IAAI,CAACuB,QAAL,CAAcI,YAAY,CAACG,EAA3B;AACH,GAzBD;;AA2BA,QAAMmB,aAAa,GAAG,CAClBvB,CADkB,EAElBC,YAFkB,KAGjB;AACD3B,IAAAA,IAAI,CAACkD,aAAL;AAEAvD,IAAAA,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU;AAEV,UAAMwD,YAAY,GACpB,OAAO5C,eAAe,CAACO,OAAvB,KAAmC,QAAnC,GACMP,eAAe,CAACO,OADtB,GAEMR,eAAe,CAACQ,OAHpB;AAKA,QAAIsC,SAAS,GAAGD,YAAhB;;AAEA,QACIvB,IAAI,CAACC,GAAL,CAASF,YAAY,CAACG,EAAtB,IAA4BF,IAAI,CAACC,GAAL,CAASF,YAAY,CAACI,EAAtB,CAA5B,IACNH,IAAI,CAACC,GAAL,CAASF,YAAY,CAACK,EAAtB,IAA4BJ,IAAI,CAACC,GAAL,CAASF,YAAY,CAACM,EAAtB,CADtB,KAELL,IAAI,CAACC,GAAL,CAASF,YAAY,CAACG,EAAtB,IAA4BrB,sBAA5B,IACCmB,IAAI,CAACC,GAAL,CAASF,YAAY,CAACK,EAAtB,IAA4BxB,sBAHxB,CADJ,EAKE;AACE4C,MAAAA,SAAS,GAAGxB,IAAI,CAACyB,KAAL,CACRzB,IAAI,CAAC0B,GAAL,CACI1B,IAAI,CAAC2B,GAAL,CACI,CADJ,EAEIJ,YAAY,GAAGxB,YAAY,CAACG,EAAb,GAAkBF,IAAI,CAACC,GAAL,CAASF,YAAY,CAACG,EAAtB,CAFrC,CADJ,EAKIhC,MAAM,CAACsC,MAAP,GAAgB,CALpB,CADQ,CAAZ;AAUA9B,MAAAA,eAAe,CAACQ,OAAhB,GAA0BsC,SAA1B;AACH;;AAED,QAAI,CAACI,QAAQ,CAACJ,SAAD,CAAb,EAA0B;AACtBA,MAAAA,SAAS,GAAGD,YAAZ;AACH;;AAEDxC,IAAAA,WAAW,CAACyC,SAAD,CAAX;AACH,GAvCD,CAhIS,CAyKT;;;AACA,QAAMK,gBAAgB,GAAGrF,KAAK,CAACwC,WAAN,CAAmBoC,QAAD,IAAwB;AAC/D/C,IAAAA,YAAY,CAACa,OAAb,CAAqB4C,IAArB,CAA0BV,QAA1B;AAEA,WAAO,MAAM;AACT,YAAMjD,KAAK,GAAGE,YAAY,CAACa,OAAb,CAAqB6C,OAArB,CAA6BX,QAA7B,CAAd;;AAEA,UAAIjD,KAAK,GAAG,CAAC,CAAb,EAAgB;AACZE,QAAAA,YAAY,CAACa,OAAb,CAAqB8C,MAArB,CAA4B7D,KAA5B,EAAmC,CAAnC;AACH;AACJ,KAND;AAOH,GAVwB,EAUtB,EAVsB,CAAzB;AAYA,QAAM8D,MAAM,GAAGzF,KAAK,CAACwC,WAAN,CACVkD,GAAD,IAAiB;AACb,UAAM/D,KAAK,GAAGI,kBAAkB,CAACW,OAAnB,CAA2BhB,MAA3B,CAAkCiE,SAAlC,CACTC,KAAD,IAA4BA,KAAK,CAACF,GAAN,KAAcA,GADhC,CAAd;AAIAnD,IAAAA,WAAW,CAACZ,KAAD,CAAX;AACH,GAPU,EAQX,CAACY,WAAD,CARW,CAAf;AAWA,QAAMsD,YAAY,GAAG3F,YAAY,CAAC4F,MAAb,CAAoB;AACrCC,IAAAA,2BAA2B,EAAEjC,aADQ;AAErCkC,IAAAA,kCAAkC,EAAElC,aAFC;AAGrCmC,IAAAA,mBAAmB,EAAEhC,YAHgB;AAIrCiC,IAAAA,kBAAkB,EAAE7B,gBAJiB;AAKrC8B,IAAAA,uBAAuB,EAAEtB,aALY;AAMrCuB,IAAAA,qBAAqB,EAAEvB,aANc;AAOrCwB,IAAAA,gCAAgC,EAAE,MAAM;AAPH,GAApB,CAArB;AAUA,QAAMC,YAAY,GAAGrF,MAAM,CAACqB,KAAP,IAAgBZ,MAAM,CAACsC,MAAP,GAAgB,CAAhC,CAArB;AACA,QAAMuC,UAAU,GAAGtG,QAAQ,CAACuG,QAAT,CACf5E,IAAI,CAAC6E,WAAL,CAAiB;AACbC,IAAAA,UAAU,EAAE,CAAC,CAACJ,YAAF,EAAgB,CAAhB,CADC;AAEbK,IAAAA,WAAW,EAAE,CAAC,CAACL,YAAF,EAAgB,CAAhB,CAFA;AAGbM,IAAAA,WAAW,EAAE;AAHA,GAAjB,CADe,EAMfvG,WAAW,CAACwG,KAAZ,GAAoB,CAAC,CAArB,GAAyB,CANV,CAAnB;AASA,SAAOrF,QAAQ,CAAC;AACZ8C,IAAAA,QAAQ,EAAErD,MAAM,CAACqB,KAAP,GACJrC,QAAQ,CAAC6G,MAAT,CAAgBlF,IAAhB,EAAsB,CAACX,MAAM,CAACqB,KAA9B,CADI,GAEJ,IAAIrC,QAAQ,CAAC8G,KAAb,CAAmBpF,KAAnB,CAHM;AAIZ0D,IAAAA,gBAJY;AAKZI,IAAAA,MALY;AAMZuB,IAAAA,MAAM,EAAGxF,QAAD,iBACJ,oBAAC,QAAD,CAAU,IAAV;AACI,MAAA,KAAK,EAAE,CACHyF,MAAM,CAACC,KADJ,EAEHjG,MAAM,CAACqB,KAAP,GACM;AACEA,QAAAA,KAAK,EAAEZ,MAAM,CAACsC,MAAP,GAAgB/C,MAAM,CAACqB,KADhC;AAEE6E,QAAAA,SAAS,EAAE,CAAC;AAAEZ,UAAAA;AAAF,SAAD;AAFb,OADN,GAKM,IAPH,EAQH9E,KARG;AADX,OAWQoE,YAAY,CAACuB,WAXrB,GAaKpH,KAAK,CAACqH,QAAN,CAAeC,GAAf,CAAmB9F,QAAnB,EAA6B,CAAC+F,KAAD,EAAQC,CAAR,KAAc;AACxC,YAAM5B,KAAK,GAAGlE,MAAM,CAAC8F,CAAD,CAApB;AACA,YAAMC,OAAO,GAAGD,CAAC,KAAK7F,KAAtB;AAEA,0BACI,oBAAC,IAAD;AACI,QAAA,GAAG,EAAEiE,KAAK,CAACF,GADf;AAEI,QAAA,KAAK,EACDzE,MAAM,CAACqB,KAAP,GACM;AAAEA,UAAAA,KAAK,EAAErB,MAAM,CAACqB;AAAhB,SADN,GAEMmF,OAAO,GACHrH,UAAU,CAACsH,YADR,GAEH;AAPlB,SAUKD,OAAO,IAAIxG,MAAM,CAACqB,KAAlB,GAA0BiF,KAA1B,GAAkC,IAVvC,CADJ;AAcH,KAlBA,CAbL;AAPQ,GAAD,CAAf;AA0CH;AAED,MAAMN,MAAM,GAAG7G,UAAU,CAAC0F,MAAX,CAAkB;AAC7BoB,EAAAA,KAAK,EAAE;AACHS,IAAAA,IAAI,EAAE,CADH;AAEHC,IAAAA,aAAa,EAAE,KAFZ;AAGHC,IAAAA,UAAU,EAAE;AAHT;AADsB,CAAlB,CAAf","sourcesContent":["import * as React from \"react\";\nimport {\n    Animated,\n    PanResponder,\n    Keyboard,\n    StyleSheet,\n    GestureResponderEvent,\n    PanResponderGestureState,\n    I18nManager,\n    View,\n} from \"react-native\";\nimport useAnimatedValue from \"./useAnimatedValue\";\nimport {\n    NavigationState,\n    Route,\n    Layout,\n    EventEmitterProps,\n    PagerProps,\n    Listener,\n} from \"./types\";\n\ntype Props<T extends Route> = PagerProps & {\n  layout: Layout;\n  onIndexChange: (index: number) => void;\n  navigationState: NavigationState<T>;\n  children: (\n    props: EventEmitterProps & {\n      // Animated value which represents the state of current index\n      // It can include fractional digits as it represents the intermediate value\n      position: Animated.AnimatedInterpolation;\n      // Function to actually render the content of the pager\n      // The parent component takes care of rendering\n      render: (children: React.ReactNode) => React.ReactNode;\n      // Callback to call when switching the tab\n      // The tab switch animation is performed even if the index in state is unchanged\n      jumpTo: (key: string) => void;\n    }\n  ) => React.ReactElement;\n};\n\nconst DEAD_ZONE = 12;\n\nconst DefaultTransitionSpec = {\n    timing: Animated.spring,\n    stiffness: 1000,\n    damping: 500,\n    mass: 3,\n    overshootClamping: true,\n};\n\nexport default function Pager<T extends Route>({\n    layout,\n    keyboardDismissMode = \"auto\",\n    swipeEnabled = true,\n    navigationState,\n    onIndexChange,\n    onSwipeStart,\n    onSwipeEnd,\n    children,\n    style,\n}: Props<T>) {\n    const { routes, index } = navigationState;\n\n    const panX = useAnimatedValue(0);\n\n    const listenersRef = React.useRef<Listener[]>([]);\n\n    const navigationStateRef = React.useRef(navigationState);\n    const layoutRef = React.useRef(layout);\n    const onIndexChangeRef = React.useRef(onIndexChange);\n\n    const currentIndexRef = React.useRef(index);\n    const pendingIndexRef = React.useRef<number>();\n\n    const swipeVelocityThreshold = 0.15;\n    const swipeDistanceThreshold = layout.width / 1.75;\n\n    const jumpToIndex = React.useCallback(\n        (index: number) => {\n            const offset = -index * layoutRef.current.width;\n\n            const { timing, ...transitionConfig } = DefaultTransitionSpec;\n\n            Animated.parallel([\n                timing(panX, {\n                    ...transitionConfig,\n                    toValue: offset,\n                    useNativeDriver: false,\n                }),\n            ]).start(({ finished }) => {\n                if (finished) {\n                    onIndexChangeRef.current(index);\n                    pendingIndexRef.current = undefined;\n                }\n            });\n\n            pendingIndexRef.current = index;\n        },\n        [panX]\n    );\n\n    React.useEffect(() => {\n        navigationStateRef.current = navigationState;\n        layoutRef.current = layout;\n        onIndexChangeRef.current = onIndexChange;\n    });\n\n    React.useEffect(() => {\n        const offset = -navigationStateRef.current.index * layout.width;\n\n        panX.setValue(offset);\n    }, [layout.width, panX]);\n\n    React.useEffect(() => {\n        if (keyboardDismissMode === \"auto\") {\n            Keyboard.dismiss();\n        }\n\n        if (layout.width && currentIndexRef.current !== index) {\n            jumpToIndex(index);\n        }\n    }, [jumpToIndex, keyboardDismissMode, layout.width, index]);\n\n    const isMovingHorizontally = (\n        _: GestureResponderEvent,\n        gestureState: PanResponderGestureState\n    ) => {\n        return (\n            Math.abs(gestureState.dx) > Math.abs(gestureState.dy * 2) &&\n      Math.abs(gestureState.vx) > Math.abs(gestureState.vy * 2)\n        );\n    };\n\n    const canMoveScreen = (\n        event: GestureResponderEvent,\n        gestureState: PanResponderGestureState\n    ) => {\n        if (swipeEnabled === false) {\n            return false;\n        }\n\n        return (\n            isMovingHorizontally(event, gestureState) &&\n      ((gestureState.dx >= DEAD_ZONE && currentIndexRef.current > 0) ||\n        (gestureState.dx <= -DEAD_ZONE &&\n          currentIndexRef.current < routes.length - 1))\n        );\n    };\n\n    const startGesture = () => {\n        onSwipeStart?.();\n\n        if (keyboardDismissMode === \"on-drag\") {\n            Keyboard.dismiss();\n        }\n\n        panX.stopAnimation();\n        // @ts-ignore\n        panX.setOffset(panX._value);\n    };\n\n    const respondToGesture = (\n        _: GestureResponderEvent,\n        gestureState: PanResponderGestureState\n    ) => {\n        if (\n        // swiping left\n            (gestureState.dx > 0 && index <= 0) ||\n      // swiping right\n      (gestureState.dx < 0 && index >= routes.length - 1)\n        ) {\n            return;\n        }\n\n        if (layout.width) {\n            // @ts-ignore\n            const position = (panX._offset + gestureState.dx) / -layout.width;\n            const next =\n        position > index ? Math.ceil(position) : Math.floor(position);\n\n            if (next !== index) {\n                listenersRef.current.forEach((listener) => listener(next));\n            }\n        }\n\n        panX.setValue(gestureState.dx);\n    };\n\n    const finishGesture = (\n        _: GestureResponderEvent,\n        gestureState: PanResponderGestureState\n    ) => {\n        panX.flattenOffset();\n\n        onSwipeEnd?.();\n\n        const currentIndex =\n      typeof pendingIndexRef.current === \"number\"\n          ? pendingIndexRef.current\n          : currentIndexRef.current;\n\n        let nextIndex = currentIndex;\n\n        if (\n            Math.abs(gestureState.dx) > Math.abs(gestureState.dy) &&\n      Math.abs(gestureState.vx) > Math.abs(gestureState.vy) &&\n      (Math.abs(gestureState.dx) > swipeDistanceThreshold ||\n        Math.abs(gestureState.vx) > swipeVelocityThreshold)\n        ) {\n            nextIndex = Math.round(\n                Math.min(\n                    Math.max(\n                        0,\n                        currentIndex - gestureState.dx / Math.abs(gestureState.dx)\n                    ),\n                    routes.length - 1\n                )\n            );\n\n            currentIndexRef.current = nextIndex;\n        }\n\n        if (!isFinite(nextIndex)) {\n            nextIndex = currentIndex;\n        }\n\n        jumpToIndex(nextIndex);\n    };\n\n    // TODO: use the listeners\n    const addEnterListener = React.useCallback((listener: Listener) => {\n        listenersRef.current.push(listener);\n\n        return () => {\n            const index = listenersRef.current.indexOf(listener);\n\n            if (index > -1) {\n                listenersRef.current.splice(index, 1);\n            }\n        };\n    }, []);\n\n    const jumpTo = React.useCallback(\n        (key: string) => {\n            const index = navigationStateRef.current.routes.findIndex(\n                (route: { key: string }) => route.key === key\n            );\n\n            jumpToIndex(index);\n        },\n        [jumpToIndex]\n    );\n\n    const panResponder = PanResponder.create({\n        onMoveShouldSetPanResponder: canMoveScreen,\n        onMoveShouldSetPanResponderCapture: canMoveScreen,\n        onPanResponderGrant: startGesture,\n        onPanResponderMove: respondToGesture,\n        onPanResponderTerminate: finishGesture,\n        onPanResponderRelease: finishGesture,\n        onPanResponderTerminationRequest: () => true,\n    });\n\n    const maxTranslate = layout.width * (routes.length - 1);\n    const translateX = Animated.multiply(\n        panX.interpolate({\n            inputRange: [-maxTranslate, 0],\n            outputRange: [-maxTranslate, 0],\n            extrapolate: \"clamp\",\n        }),\n        I18nManager.isRTL ? -1 : 1\n    );\n\n    return children({\n        position: layout.width\n            ? Animated.divide(panX, -layout.width)\n            : new Animated.Value(index),\n        addEnterListener,\n        jumpTo,\n        render: (children) => (\n            <Animated.View\n                style={[\n                    styles.sheet,\n                    layout.width\n                        ? {\n                            width: routes.length * layout.width,\n                            transform: [{ translateX }],\n                        }\n                        : null,\n                    style,\n                ]}\n                {...panResponder.panHandlers}\n            >\n                {React.Children.map(children, (child, i) => {\n                    const route = routes[i];\n                    const focused = i === index;\n\n                    return (\n                        <View\n                            key={route.key}\n                            style={\n                                layout.width\n                                    ? { width: layout.width }\n                                    : focused\n                                        ? StyleSheet.absoluteFill\n                                        : null\n                            }\n                        >\n                            {focused || layout.width ? child : null}\n                        </View>\n                    );\n                })}\n            </Animated.View>\n        ),\n    });\n}\n\nconst styles = StyleSheet.create({\n    sheet: {\n        flex: 1,\n        flexDirection: \"row\",\n        alignItems: \"stretch\",\n    },\n});\n"]}