{"version":3,"sources":["index.tsx"],"names":["React","ReactNative","View","Animated","Easing","NativeModules","Scroller","createResponder","Rect","Transform","transformedRect","availableTranslateSpace","fitCenterRect","alignedRect","getTransform","ViewTransformer","Component","constructor","props","scale","translateX","translateY","animator","Value","width","height","pageX","pageY","_viewPortRect","onLayout","bind","cancelAnimation","contentRect","transformedContentRect","animate","onResponderGrant","gestureResponder","onStartShouldSetResponder","evt","gestureState","onMoveShouldSetResponderCapture","onResponderMove","onResponderRelease","onResponderTerminate","onResponderTerminationRequest","onResponderSingleTapConfirmed","onSingleTapConfirmed","scroller","dx","dy","isFinished","animateBounce","updateTransform","state","viewPortRect","set","rect","copy","contentAspectRatio","currentTransform","UNSAFE_componentWillMount","componentDidUpdate","prevProps","prevState","onViewTransformed","componentWillUnmount","render","enableTransform","el","innerViewRef","flex","transform","children","e","nativeEvent","layout","setState","measureLayout","handle","findNodeHandle","UIManager","measure","x","y","onTransformStart","responderGranted","moveX","previousMoveX","moveY","previousMoveY","enableResistance","d","applyResistance","enableTranslate","previousPinch","pinch","enableScale","scaleBy","pivotX","pivotY","Math","abs","handled","onTransformGestureReleased","doubleTapUp","x0","y0","performDoubleTapUp","performFling","vx","vy","startX","startY","maxX","minX","maxY","minY","availablePanDistance","left","maxOverScrollDistance","right","top","bottom","fling","curScale","maxScale","centerX","centerY","stopAnimation","targetRect","durationInMillis","duration","fromRect","equals","removeAllListeners","setValue","addListener","progress","value","timing","toValue","useNativeDriver","easing","inOut","ease","start","minScale","forceUpdateTransform","getAvailableTranslateSpace"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport ReactNative, { View, Animated, Easing, NativeModules } from \"react-native\";\nimport Scroller from \"../Scroller\";\nimport { createResponder } from \"../GestureResponder\";\nimport { Rect, Transform, transformedRect, availableTranslateSpace, fitCenterRect, alignedRect, getTransform } from \"./TransformUtils\";\n\ntype Props = {\n    enableTransform?: boolean,\n    enableScale?: boolean,\n    enableTranslate?: boolean,\n    maxOverScrollDistance?: number,\n    maxScale?: number,\n    contentAspectRatio?: number,\n    enableResistance?: boolean,\n    onViewTransformed?: (evt?) => void,\n    onTransformGestureReleased?: (evt?) => void,\n    onSingleTapConfirmed?: (evt?) => void,\n    onLayout?: (evt?) => void,\n    onTransformStart?: (evt?) => void,\n    children?: React.ReactNode,\n};\n\ntype State = {\n    scale?: number,\n    translateX?: number,\n    translateY?: number,\n    // animation state\n    animator?: Animated.Value,\n    // layout\n    width?: number,\n    height?: number,\n    pageX?: number,\n    pageY?: number,\n    responderGranted?: boolean,\n};\n\nexport default class ViewTransformer extends React.Component<Props, State> {\n\n    static Rect = Rect;\n    static getTransform = getTransform;\n\n    static defaultProps = {\n        maxOverScrollDistance: 20,\n        enableScale: true,\n        enableTranslate: true,\n        enableTransform: true,\n        maxScale: 1,\n        enableResistance: false\n    };\n\n    state: State = {\n        // transform state\n        scale: 1,\n        translateX: 0,\n        translateY: 0,\n        // animation state\n        animator: new Animated.Value(0),\n        // layout\n        width: 0,\n        height: 0,\n        pageX: 0,\n        pageY: 0\n    };\n\n    _viewPortRect;\n    scroller;\n\n    gestureResponder;\n\n    innerViewRef;\n\n    constructor (props) {\n        super(props);\n\n        this._viewPortRect = new Rect(); // A holder to avoid new too much\n\n        this.onLayout = this.onLayout.bind(this);\n        this.cancelAnimation = this.cancelAnimation.bind(this);\n        this.contentRect = this.contentRect.bind(this);\n        this.transformedContentRect = this.transformedContentRect.bind(this);\n        this.animate = this.animate.bind(this);\n        this.onResponderGrant = this.onResponderGrant.bind(this);\n\n        this.gestureResponder = createResponder({\n            onStartShouldSetResponder: (evt, gestureState) => true,\n            onMoveShouldSetResponderCapture: (evt, gestureState) => true,\n            // onMoveShouldSetResponder: this.handleMove,\n            onResponderMove: this.onResponderMove,\n            onResponderGrant: this.onResponderGrant,\n            onResponderRelease: this.onResponderRelease,\n            onResponderTerminate: this.onResponderRelease,\n            onResponderTerminationRequest: (evt, gestureState) => false, // Do not allow parent view to intercept gesture\n            onResponderSingleTapConfirmed: (evt, gestureState) => {\n                this.props.onSingleTapConfirmed && this.props.onSingleTapConfirmed();\n            }\n        });\n\n        this.scroller = new Scroller(true, (dx, dy, scroller) => {\n            if (dx === 0 && dy === 0 && scroller.isFinished()) {\n                this.animateBounce();\n                return;\n            }\n\n            this.updateTransform({\n                translateX: this.state.translateX + dx / this.state.scale,\n                translateY: this.state.translateY + dy / this.state.scale\n            });\n        });\n    }\n\n    viewPortRect () {\n        this._viewPortRect.set(0, 0, this.state.width, this.state.height);\n        return this._viewPortRect;\n    }\n\n    contentRect () {\n        let rect = this.viewPortRect().copy();\n        if (this.props.contentAspectRatio && this.props.contentAspectRatio > 0) {\n            rect = fitCenterRect(this.props.contentAspectRatio, rect);\n        }\n        return rect;\n    }\n\n    transformedContentRect () {\n        let rect = transformedRect(this.viewPortRect(), this.currentTransform());\n        if (this.props.contentAspectRatio && this.props.contentAspectRatio > 0) {\n            rect = fitCenterRect(this.props.contentAspectRatio, rect);\n        }\n        return rect;\n    }\n\n    currentTransform () {\n        return new Transform(this.state.scale, this.state.translateX, this.state.translateY);\n    }\n\n    UNSAFE_componentWillMount () {\n        // this.gestureResponder = createResponder({\n        //     onStartShouldSetResponder: (evt, gestureState) => true,\n        //     onMoveShouldSetResponderCapture: (evt, gestureState) => true,\n        //     // onMoveShouldSetResponder: this.handleMove,\n        //     onResponderMove: this.onResponderMove,\n        //     onResponderGrant: this.onResponderGrant,\n        //     onResponderRelease: this.onResponderRelease,\n        //     onResponderTerminate: this.onResponderRelease,\n        //     onResponderTerminationRequest: (evt, gestureState) => false, // Do not allow parent view to intercept gesture\n        //     onResponderSingleTapConfirmed: (evt, gestureState) => {\n        //         this.props.onSingleTapConfirmed && this.props.onSingleTapConfirmed();\n        //     }\n        // });\n    }\n\n    componentDidUpdate (prevProps, prevState) {\n        this.props.onViewTransformed && this.props.onViewTransformed({\n            scale: this.state.scale,\n            translateX: this.state.translateX,\n            translateY: this.state.translateY\n        });\n    }\n\n    componentWillUnmount () {\n        this.cancelAnimation();\n    }\n\n    render () {\n        let gestureResponder = this.gestureResponder;\n        if (!this.props.enableTransform) {\n            gestureResponder = {};\n        }\n\n        return (\n            <View\n                {...this.props}\n                {...gestureResponder}\n                //   ref={'innerViewRef'}\n                ref={(el) => {\n                    this.innerViewRef = el;\n                }}\n                onLayout={this.onLayout}>\n                <View\n                    style={{\n                        flex: 1,\n                        transform: [\n                            { scale: this.state.scale },\n                            { translateX: this.state.translateX },\n                            { translateY: this.state.translateY }\n                        ]\n                    }}>\n                    { this.props.children }\n                </View>\n            </View>\n        );\n    }\n\n    onLayout (e) {\n        const {width, height} = e.nativeEvent.layout;\n        if (width !== this.state.width || height !== this.state.height) {\n            this.setState({width, height});\n        }\n        this.measureLayout();\n\n        this.props.onLayout && this.props.onLayout(e);\n    }\n\n    measureLayout () {\n        // let handle = ReactNative.findNodeHandle(this.refs['innerViewRef']);\n        const handle = ReactNative.findNodeHandle(this.innerViewRef);\n        NativeModules.UIManager.measure(handle, (x, y, width, height, pageX, pageY) => {\n            if (typeof pageX === \"number\" && typeof pageY === \"number\") { // avoid undefined values on Android devices\n                if (this.state.pageX !== pageX || this.state.pageY !== pageY) {\n                    this.setState({ pageX: pageX, pageY: pageY });\n                }\n            }\n        });\n    }\n\n    onResponderGrant (evt, gestureState) {\n        this.props.onTransformStart && this.props.onTransformStart();\n        this.setState({responderGranted: true});\n        this.measureLayout();\n    }\n\n    onResponderMove (evt, gestureState) {\n        this.cancelAnimation();\n\n        let dx = gestureState.moveX - gestureState.previousMoveX;\n        let dy = gestureState.moveY - gestureState.previousMoveY;\n        if (this.props.enableResistance) {\n            const d = this.applyResistance(dx, dy);\n            dx = d.dx;\n            dy = d.dy;\n        }\n\n        if (!this.props.enableTranslate) {\n            dx = dy = 0;\n        }\n\n        let transform: any = {};\n        if (gestureState.previousPinch && gestureState.pinch && this.props.enableScale) {\n            const scaleBy = gestureState.pinch / gestureState.previousPinch;\n            const pivotX = gestureState.moveX - this.state.pageX;\n            const pivotY = gestureState.moveY - this.state.pageY;\n\n            const rect = transformedRect(\n                transformedRect(\n                    this.contentRect(),\n                    this.currentTransform()\n                ),\n                new Transform(scaleBy, dx, dy, { x: pivotX, y: pivotY })\n            );\n            transform = getTransform(this.contentRect(), rect);\n        } else {\n            if (Math.abs(dx) > 2 * Math.abs(dy)) {\n                dy = 0;\n            } else if (Math.abs(dy) > 2 * Math.abs(dx)) {\n                dx = 0;\n            }\n            transform.translateX = this.state.translateX + dx / this.state.scale;\n            transform.translateY = this.state.translateY + dy / this.state.scale;\n        }\n\n        this.updateTransform(transform);\n        return true;\n    }\n\n    onResponderRelease (evt, gestureState) {\n        const handled: any = this.props.onTransformGestureReleased && this.props.onTransformGestureReleased({\n            scale: this.state.scale,\n            translateX: this.state.translateX,\n            translateY: this.state.translateY\n        });\n        if (handled) {\n            return;\n        }\n\n        if (gestureState.doubleTapUp) {\n            if (!this.props.enableScale) {\n                this.animateBounce();\n                return;\n            }\n            let pivotX = 0;\n            let pivotY = 0;\n            if (gestureState.dx || gestureState.dy) {\n                pivotX = gestureState.moveX - this.state.pageX;\n                pivotY = gestureState.moveY - this.state.pageY;\n            } else {\n                pivotX = gestureState.x0 - this.state.pageX;\n                pivotY = gestureState.y0 - this.state.pageY;\n            }\n\n            this.performDoubleTapUp(pivotX, pivotY);\n        } else {\n            if (this.props.enableTranslate) {\n                this.performFling(gestureState.vx, gestureState.vy);\n            } else {\n                this.animateBounce();\n            }\n        }\n    }\n\n    performFling (vx, vy) {\n        const startX = 0;\n        const startY = 0;\n        let maxX, minX, maxY, minY;\n        const availablePanDistance = availableTranslateSpace(this.transformedContentRect(), this.viewPortRect());\n        if (vx > 0) {\n            minX = 0;\n            if (availablePanDistance.left > 0) {\n                maxX = availablePanDistance.left + this.props.maxOverScrollDistance;\n            } else {\n                maxX = 0;\n            }\n        } else {\n            maxX = 0;\n            if (availablePanDistance.right > 0) {\n                minX = -availablePanDistance.right - this.props.maxOverScrollDistance;\n            } else {\n                minX = 0;\n            }\n        }\n        if (vy > 0) {\n            minY = 0;\n            if (availablePanDistance.top > 0) {\n                maxY = availablePanDistance.top + this.props.maxOverScrollDistance;\n            } else {\n                maxY = 0;\n            }\n        } else {\n            maxY = 0;\n            if (availablePanDistance.bottom > 0) {\n                minY = -availablePanDistance.bottom - this.props.maxOverScrollDistance;\n            } else {\n                minY = 0;\n            }\n        }\n\n        vx *= 1000; // per second\n        vy *= 1000;\n        if (Math.abs(vx) > 2 * Math.abs(vy)) {\n            vy = 0;\n        } else if (Math.abs(vy) > 2 * Math.abs(vx)) {\n            vx = 0;\n        }\n\n        this.scroller.fling(startX, startY, vx, vy, minX, maxX, minY, maxY);\n    }\n\n    performDoubleTapUp (pivotX, pivotY) {\n        const curScale = this.state.scale;\n        let scaleBy;\n        if (curScale > (1 + this.props.maxScale) / 2) {\n            scaleBy = 1 / curScale;\n        } else {\n            scaleBy = this.props.maxScale / curScale;\n        }\n\n        let rect = transformedRect(\n            this.transformedContentRect(),\n            new Transform(scaleBy, 0, 0, { x: pivotX, y: pivotY })\n        );\n        rect = transformedRect(\n            rect,\n            new Transform(\n                1,\n                this.viewPortRect().centerX() - pivotX,\n                this.viewPortRect().centerY() - pivotY\n            )\n        );\n        rect = alignedRect(rect, this.viewPortRect());\n        this.animate(rect);\n    }\n\n    applyResistance (dx, dy) {\n        const availablePanDistance = availableTranslateSpace(this.transformedContentRect(), this.viewPortRect());\n\n        if ((dx > 0 && availablePanDistance.left < 0) ||\n        (dx < 0 && availablePanDistance.right < 0)) {\n            dx /= 3;\n        }\n        if ((dy > 0 && availablePanDistance.top < 0) ||\n        (dy < 0 && availablePanDistance.bottom < 0)) {\n            dy /= 3;\n        }\n        return { dx, dy };\n    }\n\n    cancelAnimation () {\n        this.state.animator.stopAnimation();\n    }\n\n    animate (targetRect, durationInMillis?) {\n        let duration = 200;\n        if (durationInMillis) {\n            duration = durationInMillis;\n        }\n\n        const fromRect = this.transformedContentRect();\n        if (fromRect.equals(targetRect, 0.01)) {\n            return;\n        }\n\n        this.state.animator.removeAllListeners();\n        this.state.animator.setValue(0);\n        this.state.animator.addListener((state) => {\n            const progress = state.value;\n\n            const left = fromRect.left + (targetRect.left - fromRect.left) * progress;\n            const right = fromRect.right + (targetRect.right - fromRect.right) * progress;\n            const top = fromRect.top + (targetRect.top - fromRect.top) * progress;\n            const bottom = fromRect.bottom + (targetRect.bottom - fromRect.bottom) * progress;\n\n            const transform = getTransform(this.contentRect(), new Rect(left, top, right, bottom));\n            this.updateTransform(transform);\n        });\n\n        Animated.timing(\n            this.state.animator,\n            {\n                toValue: 1,\n                duration: duration,\n                useNativeDriver: false,\n                easing: Easing.inOut(Easing.ease),\n            }\n        ).start();\n    }\n\n    animateBounce () {\n        const curScale = this.state.scale;\n        const minScale = 1;\n        const maxScale = this.props.maxScale;\n        let scaleBy = 1;\n        if (curScale > maxScale) {\n            scaleBy = maxScale / curScale;\n        } else if (curScale < minScale) {\n            scaleBy = minScale / curScale;\n        }\n\n        let rect = transformedRect(\n            this.transformedContentRect(),\n            new Transform(\n                scaleBy,\n                0,\n                0,\n                {\n                    x: this.viewPortRect().centerX(),\n                    y: this.viewPortRect().centerY()\n                }\n            )\n        );\n        rect = alignedRect(rect, this.viewPortRect());\n        this.animate(rect);\n    }\n\n    updateTransform (transform) {\n        this.setState(transform);\n    }\n\n    forceUpdateTransform (transform) {\n        this.setState(transform);\n    }\n\n    getAvailableTranslateSpace () {\n        return availableTranslateSpace(this.transformedContentRect(), this.viewPortRect());\n    }\n}\n"]}