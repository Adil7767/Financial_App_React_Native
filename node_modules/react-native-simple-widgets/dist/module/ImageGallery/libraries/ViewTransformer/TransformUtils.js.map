{"version":3,"sources":["TransformUtils.tsx"],"names":["Rect","Transform","constructor","scale","translateX","translateY","pivot","isValidNumber","number","isNaN","isValidRect","rect","isValid","isValidTransform","transform","fitCenterRect","contentAspectRatio","containerRect","w","width","h","height","viewAspectRatio","centerX","centerY","transformedRect","Error","undefined","pivotX","x","pivotY","y","resultRect","dx","dy","offset","getTransform","fromRect","toRect","alignedRect","viewPortRect","left","right","top","bottom","copy","availableTranslateSpace"],"mappings":"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","sourcesContent":["import Rect from \"./Rect\";\n\nexport { Rect };\n\nexport class Transform {\n\n    scale;\n    translateX;\n    translateY;\n    pivot;\n\n    constructor (scale, translateX, translateY, pivot?) {\n        this.scale = scale;\n        this.translateX = translateX;\n        this.translateY = translateY;\n        this.pivot = pivot;\n    }\n}\n\nfunction isValidNumber (number) {\n    if (typeof number === \"number\") {\n        if (!isNaN(number)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction isValidRect (rect) {\n    if (rect instanceof Rect && rect.isValid()) {\n        return true;\n    }\n    return false;\n}\n\nfunction isValidTransform (transform) {\n    if (transform && isValidNumber(transform.scale) && isValidNumber(transform.translateX) && isValidNumber(transform.translateY)) {\n        return true;\n    }\n    return false;\n}\n\nexport function fitCenterRect (contentAspectRatio, containerRect) {\n    let w = containerRect.width();\n    let h = containerRect.height();\n    const viewAspectRatio = w / h;\n\n    if (contentAspectRatio > viewAspectRatio) {\n        h = w / contentAspectRatio;\n    } else {\n        w = h * contentAspectRatio;\n    }\n\n    return new Rect(\n        containerRect.centerX() - w / 2,\n        containerRect.centerY() - h / 2,\n        containerRect.centerX() + w / 2,\n        containerRect.centerY() + h / 2\n    );\n}\n\n/**\n * The React Native transform system use the center of the view as the pivot when scaling.\n * The translations are applied before scaling.\n * @param rect\n * @param transform\n * @returns {*}\n */\nexport function transformedRect (rect, transform) {\n    if (!isValidRect(rect)) {\n        throw new Error(\"transformedRect...invalid rect\");\n    }\n    if (!isValidTransform(transform)) {\n        throw new Error(\"transformedRect...invalid transform\");\n    }\n\n    const scale = transform.scale;\n    const translateX = transform.translateX;\n    const translateY = transform.translateY;\n\n    const pivot = transform.pivot;\n    if (pivot === undefined || pivot === null) {\n        const width = rect.width() * scale;\n        const height = rect.height() * scale;\n        const centerX = rect.centerX() + translateX * scale;\n        const centerY = rect.centerY() + translateY * scale;\n\n        return new Rect(\n            centerX - width / 2,\n            centerY - height / 2,\n            centerX + width / 2,\n            centerY + height / 2\n        );\n    } else {\n        const pivotX = pivot.x;\n        const pivotY = pivot.y;\n        if (!isValidNumber(pivotX) || !isValidNumber(pivotY)) {\n            throw new Error(\"transformedRect...invalid pivot x=\" + pivot.x + \", y=\" + pivot.y);\n        }\n\n        // first make the center still\n        const resultRect = transformedRect(rect, {\n            scale, translateX, translateY\n        });\n\n        // the pivot moved during scaling, now move it back\n        const dx = (scale - 1) * (pivotX - resultRect.centerX());\n        const dy = (scale - 1) * (pivotY - resultRect.centerY());\n        return resultRect.offset(-dx, -dy);\n    }\n}\n\n/**\n * Calculate the transform from fromRect to toRect\n * @param fromRect\n * @param toRect\n * @returns {Transform}\n */\nexport function getTransform (fromRect, toRect) {\n    const scale = toRect.width() / fromRect.width();\n    const translateX = (toRect.centerX() - fromRect.centerX()) / scale;\n    const translateY = (toRect.centerY() - fromRect.centerY()) / scale;\n\n    return new Transform(scale, translateX, translateY);\n}\n\n/**\n * Align edges of the rect with the viewport to avoid unnecessary blank space. NO scaling is performed here.\n * @param rect\n * @param viewPortRect\n * @returns {*|{line, column}|{column, line}|{x}}\n */\nexport function alignedRect (rect, viewPortRect) {\n    let dx = 0;\n    let dy = 0;\n\n    if (rect.width() > viewPortRect.width()) {\n        if (rect.left > viewPortRect.left) {\n            dx = viewPortRect.left - rect.left;\n        } else if (rect.right < viewPortRect.right) {\n            dx = viewPortRect.right - rect.right;\n        }\n    } else {\n        dx = viewPortRect.centerX() - rect.centerX();\n    }\n\n    if (rect.height() > viewPortRect.height()) {\n        if (rect.top > viewPortRect.top) {\n            dy = viewPortRect.top - rect.top;\n        } else if (rect.bottom < viewPortRect.bottom) {\n            dy = viewPortRect.bottom - rect.bottom;\n        }\n    } else {\n        dy = viewPortRect.centerY() - rect.centerY();\n    }\n\n    return rect.copy().offset(dx, dy);\n}\n\nexport function availableTranslateSpace (rect, viewPortRect) {\n    return {\n        left: viewPortRect.left - rect.left,\n        right: rect.right - viewPortRect.right,\n        top: viewPortRect.top - rect.top,\n        bottom: rect.bottom - viewPortRect.bottom\n    };\n}\n"]}