{"version":3,"sources":["ImageGallery.tsx"],"names":["React","createResponder","TransformableImage","ViewPager","DEFAULT_FLAT_LIST_PROPS","windowSize","Gallery","PureComponent","constructor","props","Map","undefined","renderPage","bind","onPageSelected","onPageScrollStateChanged","getViewPagerInstance","getCurrentImageTransformer","getImageTransformer","activeImageResponder","UNSAFE_componentWillMount","onResponderReleaseOrTerminate","evt","gestureState","activeResponder","viewPagerResponder","shouldScrollViewPager","Math","abs","vx","onEnd","flingToPage","currentPage","firstMove","onGalleryStateChanged","gestureResponder","onStartShouldSetResponderCapture","onStartShouldSetResponder","onResponderGrant","onResponderMove","activeViewPagerResponder","dx","moveX","previousMoveX","offset","getScrollOffsetFromCurrentPage","scrollByOffset","onMove","onResponderRelease","onResponderTerminate","onResponderTerminationRequest","onResponderSingleTapConfirmed","onSingleTapConfirmed","onStart","disableSettle","imageResponder","currentImageTransformer","onLongPress","_longPressTimeout","setTimeout","clearTimeout","componentDidMount","_isMounted","componentWillUnmount","numberActiveTouches","viewTransformer","space","getAvailableTranslateSpace","left","right","pageCount","page","ref","imageRefs","get","getViewTransformerInstance","galleryViewPager","state","resetHistoryImageTransform","pageData","pageId","onViewTransformed","onTransformGestureReleased","errorComponent","imageComponent","transform","set","transformer","forceUpdateTransform","scale","translateX","translateY","render","images","length","flatListProps","el","scrollViewStyle","onPageScroll","removeClippedSubviews"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { FlatList, StyleProp, View, ViewStyle } from \"react-native\";\nimport { createResponder } from \"./libraries/GestureResponder\";\nimport TransformableImage from \"./libraries/TransformableImage\";\nimport ViewPager from \"react-native-pager-view\";\n\nconst DEFAULT_FLAT_LIST_PROPS = {\n    windowSize: 3\n};\n\ntype ImageObjProps = {\n\n}\n\ntype Props = React.ComponentProps<typeof View> & {\n    images?: ImageObjProps[],\n    initialPage?: number,\n    scrollViewStyle?: StyleProp<ViewStyle>,\n    pageMargin?: number,\n    onPageSelected?: (evt?) => void,\n    onPageScrollStateChanged?: (evt?) => void,\n    onPageScroll?: (evt?) => void,\n    onSingleTapConfirmed?: (evt?) => void,\n    onGalleryStateChanged?: (evt?) => void,\n    onLongPress?: (evt?) => void,\n    onViewTransformed?: (evt?, pageId?) => void,\n    onTransformGestureReleased?: (evt?, pageId?) => void,\n    removeClippedSubviews?: boolean,\n    imageComponent?: (props?) => React.ReactNode,\n    errorComponent?: (props?) => React.ReactNode,\n    flatListProps?: React.ComponentProps<typeof FlatList>,\n};\n\nexport default class Gallery extends React.PureComponent<Props> {\n\n    static defaultProps = {\n        removeClippedSubviews: true,\n        imageComponent: undefined,\n        scrollViewStyle: {},\n        flatListProps: DEFAULT_FLAT_LIST_PROPS\n    };\n\n    imageRefs = new Map();\n    activeResponder = undefined;\n    firstMove = true;\n    currentPage = 0;\n    pageCount = 0;\n    gestureResponder = undefined;\n\n    imageResponder = undefined;\n    viewPagerResponder = undefined;\n\n    _longPressTimeout;\n\n    _isMounted: boolean;\n\n    galleryViewPager;\n\n    constructor(props) {\n        super(props);\n\n        this.renderPage = this.renderPage.bind(this);\n        this.onPageSelected = this.onPageSelected.bind(this);\n        this.onPageScrollStateChanged = this.onPageScrollStateChanged.bind(this);\n        this.getViewPagerInstance = this.getViewPagerInstance.bind(this);\n        this.getCurrentImageTransformer = this.getCurrentImageTransformer.bind(this);\n        this.getImageTransformer = this.getImageTransformer.bind(this);\n        this.getViewPagerInstance = this.getViewPagerInstance.bind(this);\n        this.activeImageResponder = this.activeImageResponder.bind(this);\n    }\n\n    UNSAFE_componentWillMount() {\n        const onResponderReleaseOrTerminate = (evt, gestureState) => {\n            if (this.activeResponder) {\n                if (this.activeResponder === this.viewPagerResponder &&\n                    !this.shouldScrollViewPager(evt, gestureState) &&\n                    Math.abs(gestureState.vx) > 0.5) {\n                    this.activeResponder.onEnd(evt, gestureState, true);\n                    this.getViewPagerInstance().flingToPage(this.currentPage, gestureState.vx);\n                } else {\n                    this.activeResponder.onEnd(evt, gestureState);\n                }\n                this.activeResponder = null;\n            }\n            this.firstMove = true;\n            this.props.onGalleryStateChanged && this.props.onGalleryStateChanged(true);\n        };\n\n        this.gestureResponder = createResponder({\n            onStartShouldSetResponderCapture: (evt, gestureState) => true,\n            onStartShouldSetResponder: (evt, gestureState) => true,\n            onResponderGrant: this.activeImageResponder,\n            onResponderMove: (evt, gestureState) => {\n                if (this.firstMove) {\n                    this.firstMove = false;\n                    if (this.shouldScrollViewPager(evt, gestureState)) {\n                        this.activeViewPagerResponder(evt, gestureState);\n                    }\n                    this.props.onGalleryStateChanged && this.props.onGalleryStateChanged(false);\n                }\n                if (this.activeResponder === this.viewPagerResponder) {\n                    const dx = gestureState.moveX - gestureState.previousMoveX;\n                    const offset = this.getViewPagerInstance().getScrollOffsetFromCurrentPage();\n                    if (dx > 0 && offset > 0 && !this.shouldScrollViewPager(evt, gestureState)) {\n                        if (dx > offset) { // active image responder\n                            this.getViewPagerInstance().scrollByOffset(offset);\n                            gestureState.moveX -= offset;\n                            this.activeImageResponder(evt, gestureState);\n                        }\n                    } else if (dx < 0 && offset < 0 && !this.shouldScrollViewPager(evt, gestureState)) {\n                        if (dx < offset) { // active image responder\n                            this.getViewPagerInstance().scrollByOffset(offset);\n                            gestureState.moveX -= offset;\n                            this.activeImageResponder(evt, gestureState);\n                        }\n                    }\n                }\n                this.activeResponder.onMove(evt, gestureState);\n            },\n            onResponderRelease: onResponderReleaseOrTerminate,\n            onResponderTerminate: onResponderReleaseOrTerminate,\n            onResponderTerminationRequest: (evt, gestureState) => false, // Do not allow parent view to intercept gesture\n            onResponderSingleTapConfirmed: (evt, gestureState) => {\n                this.props.onSingleTapConfirmed && this.props.onSingleTapConfirmed(this.currentPage);\n            }\n        });\n\n        this.viewPagerResponder = {\n            onStart: (evt, gestureState) => {\n                this.getViewPagerInstance().onResponderGrant(evt, gestureState);\n            },\n            onMove: (evt, gestureState) => {\n                this.getViewPagerInstance().onResponderMove(evt, gestureState);\n            },\n            onEnd: (evt, gestureState, disableSettle) => {\n                this.getViewPagerInstance().onResponderRelease(evt, gestureState, disableSettle);\n            }\n        };\n\n        this.imageResponder = {\n            onStart: (evt, gestureState) => {\n                const currentImageTransformer = this.getCurrentImageTransformer();\n                currentImageTransformer && currentImageTransformer.onResponderGrant(evt, gestureState);\n                if (this.props.onLongPress) {\n                    this._longPressTimeout = setTimeout(() => {\n                        this.props.onLongPress(gestureState);\n                    }, 600);\n                }\n            },\n            onMove: (evt, gestureState) => {\n                const currentImageTransformer = this.getCurrentImageTransformer();\n                currentImageTransformer && currentImageTransformer.onResponderMove(evt, gestureState);\n                clearTimeout(this._longPressTimeout);\n            },\n            onEnd: (evt, gestureState) => {\n                const currentImageTransformer = this.getCurrentImageTransformer();\n                currentImageTransformer && currentImageTransformer.onResponderRelease(evt, gestureState);\n                clearTimeout(this._longPressTimeout);\n            }\n        };\n    }\n\n    componentDidMount() {\n        this._isMounted = true;\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    shouldScrollViewPager(evt, gestureState) {\n        if (gestureState.numberActiveTouches > 1) {\n            return false;\n        }\n        const viewTransformer = this.getCurrentImageTransformer();\n        if (!viewTransformer) {\n            return false;\n        }\n\n        const space = viewTransformer.getAvailableTranslateSpace();\n        const dx = gestureState.moveX - gestureState.previousMoveX;\n\n        if (dx > 0 && space.left <= 0 && this.currentPage > 0) {\n            return true;\n        }\n        if (dx < 0 && space.right <= 0 && this.currentPage < this.pageCount - 1) {\n            return true;\n        }\n        return false;\n    }\n\n    activeImageResponder(evt, gestureState) {\n        if (this.activeResponder !== this.imageResponder) {\n            if (this.activeResponder === this.viewPagerResponder) {\n                this.viewPagerResponder.onEnd(evt, gestureState, true); // pass true to disable ViewPager settle\n            }\n            this.activeResponder = this.imageResponder;\n            this.imageResponder.onStart(evt, gestureState);\n        }\n    }\n\n    activeViewPagerResponder(evt, gestureState) {\n        if (this.activeResponder !== this.viewPagerResponder) {\n            if (this.activeResponder === this.imageResponder) {\n                this.imageResponder.onEnd(evt, gestureState);\n            }\n            this.activeResponder = this.viewPagerResponder;\n            this.viewPagerResponder.onStart(evt, gestureState);\n        }\n    }\n\n    getImageTransformer(page) {\n        if (page >= 0 && page < this.pageCount) {\n            const ref = this.imageRefs.get(page);\n            if (ref) {\n                return ref.getViewTransformerInstance();\n            }\n        }\n    }\n\n    getCurrentImageTransformer() {\n        return this.getImageTransformer(this.currentPage);\n    }\n\n    getViewPagerInstance() {\n        // return this.refs[\"galleryViewPager\"];\n        return this.galleryViewPager;\n    }\n\n    onPageSelected(page) {\n        this.currentPage = page;\n        this.props.onPageSelected && this.props.onPageSelected(page);\n    }\n\n    onPageScrollStateChanged(state) {\n        if (state === \"idle\") {\n            this.resetHistoryImageTransform();\n        }\n        this.props.onPageScrollStateChanged && this.props.onPageScrollStateChanged(state);\n    }\n\n    renderPage(pageData, pageId) {\n        const { onViewTransformed, onTransformGestureReleased, errorComponent, imageComponent } = this.props;\n        return (\n            <TransformableImage\n                onViewTransformed={((transform) => {\n                    onViewTransformed && onViewTransformed(transform, pageId);\n                })}\n                onTransformGestureReleased={((transform) => {\n                    // need the 'return' here because the return value is checked in ViewTransformer\n                    return onTransformGestureReleased && onTransformGestureReleased(transform, pageId);\n                })}\n                ref={((ref) => { this.imageRefs.set(pageId, ref); })}\n                key={\"innerImage#\" + pageId}\n                errorComponent={errorComponent}\n                imageComponent={imageComponent}\n                image={pageData}\n            />\n        );\n    }\n\n    resetHistoryImageTransform() {\n        let transformer = this.getImageTransformer(this.currentPage + 1);\n        if (transformer) {\n            transformer.forceUpdateTransform({ scale: 1, translateX: 0, translateY: 0 });\n        }\n\n        transformer = this.getImageTransformer(this.currentPage - 1);\n        if (transformer) {\n            transformer.forceUpdateTransform({ scale: 1, translateX: 0, translateY: 0 });\n        }\n    }\n\n    render() {\n        let gestureResponder = this.gestureResponder;\n\n        let images = this.props.images;\n        if (!images) {\n            images = [];\n        }\n        this.pageCount = images.length;\n\n        if (this.pageCount <= 0) {\n            gestureResponder = {};\n        }\n\n        const flatListProps = { ...DEFAULT_FLAT_LIST_PROPS, ...this.props.flatListProps };\n\n        return (\n            <ViewPager\n                {...this.props}\n                flatListProps={flatListProps}\n                // ref={\"galleryViewPager\"}\n                ref={(el) => {\n                    this.galleryViewPager = el;\n                }}\n                scrollViewStyle={this.props.scrollViewStyle}\n                scrollEnabled={false}\n                renderPage={this.renderPage}\n                pageDataArray={images}\n                {...gestureResponder}\n                onPageSelected={this.onPageSelected}\n                onPageScrollStateChanged={this.onPageScrollStateChanged}\n                onPageScroll={this.props.onPageScroll}\n                removeClippedSubviews={this.props.removeClippedSubviews}\n            />\n        );\n    }\n}\n"]}