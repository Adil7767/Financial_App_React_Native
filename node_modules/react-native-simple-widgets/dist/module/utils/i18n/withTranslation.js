function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import * as React from "react";
import { LocaleProviderCtx } from "./LocaleProvider";

const withTranslation = WrappedComponent => {
  return props => {
    return /*#__PURE__*/React.createElement(LocaleProviderCtx.Consumer, null, polyglot => /*#__PURE__*/React.createElement(WrappedComponent, _extends({}, props, {
      translate: polyglot.t
    })));
  };
};

export default withTranslation;
//# sourceMappingURL=withTranslation.js.map