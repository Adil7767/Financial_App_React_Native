{"version":3,"sources":["Pager.tsx"],"names":["DEAD_ZONE","DefaultTransitionSpec","timing","Animated","spring","stiffness","damping","mass","overshootClamping","Pager","layout","keyboardDismissMode","swipeEnabled","navigationState","onIndexChange","onSwipeStart","onSwipeEnd","children","style","routes","index","panX","listenersRef","React","useRef","navigationStateRef","layoutRef","onIndexChangeRef","currentIndexRef","pendingIndexRef","swipeVelocityThreshold","swipeDistanceThreshold","width","jumpToIndex","useCallback","offset","current","transitionConfig","parallel","toValue","useNativeDriver","start","finished","undefined","useEffect","setValue","Keyboard","dismiss","isMovingHorizontally","_","gestureState","Math","abs","dx","dy","vx","vy","canMoveScreen","event","length","startGesture","stopAnimation","setOffset","_value","respondToGesture","position","_offset","next","ceil","floor","forEach","listener","finishGesture","flattenOffset","currentIndex","nextIndex","round","min","max","isFinite","addEnterListener","push","indexOf","splice","jumpTo","key","findIndex","route","panResponder","PanResponder","create","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderGrant","onPanResponderMove","onPanResponderTerminate","onPanResponderRelease","onPanResponderTerminationRequest","maxTranslate","translateX","multiply","interpolate","inputRange","outputRange","extrapolate","I18nManager","isRTL","divide","Value","render","styles","sheet","transform","panHandlers","Children","map","child","i","focused","StyleSheet","absoluteFill","flex","flexDirection","alignItems"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n    Animated,\n    PanResponder,\n    Keyboard,\n    StyleSheet,\n    GestureResponderEvent,\n    PanResponderGestureState,\n    I18nManager,\n    View,\n} from \"react-native\";\nimport useAnimatedValue from \"./useAnimatedValue\";\nimport {\n    NavigationState,\n    Route,\n    Layout,\n    EventEmitterProps,\n    PagerProps,\n    Listener,\n} from \"./types\";\n\ntype Props<T extends Route> = PagerProps & {\n  layout: Layout;\n  onIndexChange: (index: number) => void;\n  navigationState: NavigationState<T>;\n  children: (\n    props: EventEmitterProps & {\n      // Animated value which represents the state of current index\n      // It can include fractional digits as it represents the intermediate value\n      position: Animated.AnimatedInterpolation;\n      // Function to actually render the content of the pager\n      // The parent component takes care of rendering\n      render: (children: React.ReactNode) => React.ReactNode;\n      // Callback to call when switching the tab\n      // The tab switch animation is performed even if the index in state is unchanged\n      jumpTo: (key: string) => void;\n    }\n  ) => React.ReactElement;\n};\n\nconst DEAD_ZONE = 12;\n\nconst DefaultTransitionSpec = {\n    timing: Animated.spring,\n    stiffness: 1000,\n    damping: 500,\n    mass: 3,\n    overshootClamping: true,\n};\n\nexport default function Pager<T extends Route>({\n    layout,\n    keyboardDismissMode = \"auto\",\n    swipeEnabled = true,\n    navigationState,\n    onIndexChange,\n    onSwipeStart,\n    onSwipeEnd,\n    children,\n    style,\n}: Props<T>) {\n    const { routes, index } = navigationState;\n\n    const panX = useAnimatedValue(0);\n\n    const listenersRef = React.useRef<Listener[]>([]);\n\n    const navigationStateRef = React.useRef(navigationState);\n    const layoutRef = React.useRef(layout);\n    const onIndexChangeRef = React.useRef(onIndexChange);\n\n    const currentIndexRef = React.useRef(index);\n    const pendingIndexRef = React.useRef<number>();\n\n    const swipeVelocityThreshold = 0.15;\n    const swipeDistanceThreshold = layout.width / 1.75;\n\n    const jumpToIndex = React.useCallback(\n        (index: number) => {\n            const offset = -index * layoutRef.current.width;\n\n            const { timing, ...transitionConfig } = DefaultTransitionSpec;\n\n            Animated.parallel([\n                timing(panX, {\n                    ...transitionConfig,\n                    toValue: offset,\n                    useNativeDriver: false,\n                }),\n            ]).start(({ finished }) => {\n                if (finished) {\n                    onIndexChangeRef.current(index);\n                    pendingIndexRef.current = undefined;\n                }\n            });\n\n            pendingIndexRef.current = index;\n        },\n        [panX]\n    );\n\n    React.useEffect(() => {\n        navigationStateRef.current = navigationState;\n        layoutRef.current = layout;\n        onIndexChangeRef.current = onIndexChange;\n    });\n\n    React.useEffect(() => {\n        const offset = -navigationStateRef.current.index * layout.width;\n\n        panX.setValue(offset);\n    }, [layout.width, panX]);\n\n    React.useEffect(() => {\n        if (keyboardDismissMode === \"auto\") {\n            Keyboard.dismiss();\n        }\n\n        if (layout.width && currentIndexRef.current !== index) {\n            jumpToIndex(index);\n        }\n    }, [jumpToIndex, keyboardDismissMode, layout.width, index]);\n\n    const isMovingHorizontally = (\n        _: GestureResponderEvent,\n        gestureState: PanResponderGestureState\n    ) => {\n        return (\n            Math.abs(gestureState.dx) > Math.abs(gestureState.dy * 2) &&\n      Math.abs(gestureState.vx) > Math.abs(gestureState.vy * 2)\n        );\n    };\n\n    const canMoveScreen = (\n        event: GestureResponderEvent,\n        gestureState: PanResponderGestureState\n    ) => {\n        if (swipeEnabled === false) {\n            return false;\n        }\n\n        return (\n            isMovingHorizontally(event, gestureState) &&\n      ((gestureState.dx >= DEAD_ZONE && currentIndexRef.current > 0) ||\n        (gestureState.dx <= -DEAD_ZONE &&\n          currentIndexRef.current < routes.length - 1))\n        );\n    };\n\n    const startGesture = () => {\n        onSwipeStart?.();\n\n        if (keyboardDismissMode === \"on-drag\") {\n            Keyboard.dismiss();\n        }\n\n        panX.stopAnimation();\n        // @ts-ignore\n        panX.setOffset(panX._value);\n    };\n\n    const respondToGesture = (\n        _: GestureResponderEvent,\n        gestureState: PanResponderGestureState\n    ) => {\n        if (\n        // swiping left\n            (gestureState.dx > 0 && index <= 0) ||\n      // swiping right\n      (gestureState.dx < 0 && index >= routes.length - 1)\n        ) {\n            return;\n        }\n\n        if (layout.width) {\n            // @ts-ignore\n            const position = (panX._offset + gestureState.dx) / -layout.width;\n            const next =\n        position > index ? Math.ceil(position) : Math.floor(position);\n\n            if (next !== index) {\n                listenersRef.current.forEach((listener) => listener(next));\n            }\n        }\n\n        panX.setValue(gestureState.dx);\n    };\n\n    const finishGesture = (\n        _: GestureResponderEvent,\n        gestureState: PanResponderGestureState\n    ) => {\n        panX.flattenOffset();\n\n        onSwipeEnd?.();\n\n        const currentIndex =\n      typeof pendingIndexRef.current === \"number\"\n          ? pendingIndexRef.current\n          : currentIndexRef.current;\n\n        let nextIndex = currentIndex;\n\n        if (\n            Math.abs(gestureState.dx) > Math.abs(gestureState.dy) &&\n      Math.abs(gestureState.vx) > Math.abs(gestureState.vy) &&\n      (Math.abs(gestureState.dx) > swipeDistanceThreshold ||\n        Math.abs(gestureState.vx) > swipeVelocityThreshold)\n        ) {\n            nextIndex = Math.round(\n                Math.min(\n                    Math.max(\n                        0,\n                        currentIndex - gestureState.dx / Math.abs(gestureState.dx)\n                    ),\n                    routes.length - 1\n                )\n            );\n\n            currentIndexRef.current = nextIndex;\n        }\n\n        if (!isFinite(nextIndex)) {\n            nextIndex = currentIndex;\n        }\n\n        jumpToIndex(nextIndex);\n    };\n\n    // TODO: use the listeners\n    const addEnterListener = React.useCallback((listener: Listener) => {\n        listenersRef.current.push(listener);\n\n        return () => {\n            const index = listenersRef.current.indexOf(listener);\n\n            if (index > -1) {\n                listenersRef.current.splice(index, 1);\n            }\n        };\n    }, []);\n\n    const jumpTo = React.useCallback(\n        (key: string) => {\n            const index = navigationStateRef.current.routes.findIndex(\n                (route: { key: string }) => route.key === key\n            );\n\n            jumpToIndex(index);\n        },\n        [jumpToIndex]\n    );\n\n    const panResponder = PanResponder.create({\n        onMoveShouldSetPanResponder: canMoveScreen,\n        onMoveShouldSetPanResponderCapture: canMoveScreen,\n        onPanResponderGrant: startGesture,\n        onPanResponderMove: respondToGesture,\n        onPanResponderTerminate: finishGesture,\n        onPanResponderRelease: finishGesture,\n        onPanResponderTerminationRequest: () => true,\n    });\n\n    const maxTranslate = layout.width * (routes.length - 1);\n    const translateX = Animated.multiply(\n        panX.interpolate({\n            inputRange: [-maxTranslate, 0],\n            outputRange: [-maxTranslate, 0],\n            extrapolate: \"clamp\",\n        }),\n        I18nManager.isRTL ? -1 : 1\n    );\n\n    return children({\n        position: layout.width\n            ? Animated.divide(panX, -layout.width)\n            : new Animated.Value(index),\n        addEnterListener,\n        jumpTo,\n        render: (children) => (\n            <Animated.View\n                style={[\n                    styles.sheet,\n                    layout.width\n                        ? {\n                            width: routes.length * layout.width,\n                            transform: [{ translateX }],\n                        }\n                        : null,\n                    style,\n                ]}\n                {...panResponder.panHandlers}\n            >\n                {React.Children.map(children, (child, i) => {\n                    const route = routes[i];\n                    const focused = i === index;\n\n                    return (\n                        <View\n                            key={route.key}\n                            style={\n                                layout.width\n                                    ? { width: layout.width }\n                                    : focused\n                                        ? StyleSheet.absoluteFill\n                                        : null\n                            }\n                        >\n                            {focused || layout.width ? child : null}\n                        </View>\n                    );\n                })}\n            </Animated.View>\n        ),\n    });\n}\n\nconst styles = StyleSheet.create({\n    sheet: {\n        flex: 1,\n        flexDirection: \"row\",\n        alignItems: \"stretch\",\n    },\n});\n"]}