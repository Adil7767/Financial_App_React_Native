{"version":3,"sources":["SimpleDrawer.tsx"],"names":["defaultProps","drawerPaddingTop","showMask","animated","SimpleDrawer","props","items","onItemPress","children","_handleItemPress","item","Array","isArray","length","map","index","label","icon"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;AAkBA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,gBAAgB,EAAE,CADD;AAEjBC,EAAAA,QAAQ,EAAE,IAFO;AAGjBC,EAAAA,QAAQ,EAAE;AAHO,CAArB;;AAMA,MAAMC,YAAY,GAAIC,KAAD,IAAkB;AAEnC,QAAM;AACFC,IAAAA,KADE;AAEFC,IAAAA,WAFE;AAGFN,IAAAA,gBAHE;AAIFC,IAAAA,QAJE;AAKFC,IAAAA,QALE;AAMFK,IAAAA;AANE,MAOFH,KAPJ;;AASA,QAAMI,gBAAgB,GAAIC,IAAD,IAAU;AAC/B,QAAI,OAAOH,WAAP,KAAuB,UAA3B,EAAuC;AACnCA,MAAAA,WAAW,CAACG,IAAD,CAAX;AACH;AACJ,GAJD;;AAMA,sBACI,oBAAC,eAAD;AACI,IAAA,gBAAgB,EAAET,gBADtB;AAEI,IAAA,QAAQ,EAAEC,QAFd;AAGI,IAAA,QAAQ,EAAEC;AAHd,KAKMQ,KAAK,CAACC,OAAN,CAAcN,KAAd,KAAwBA,KAAK,CAACO,MAAN,GAAe,CAAxC,IACGP,KAAK,CAACQ,GAAN,CAAU,CAACJ,IAAD,EAAOK,KAAP,KAAiB;AACvB,wBACI,oBAAC,eAAD,CAAQ,IAAR;AACI,MAAA,GAAG,EAAEA,KADT;AAEI,MAAA,KAAK,EAAEL,IAAI,CAACM,KAFhB;AAGI,MAAA,IAAI,EAAEN,IAAI,CAACO,IAHf;AAII,MAAA,OAAO,EAAE,MAAMR,gBAAgB,CAACC,IAAD;AAJnC,MADJ;AAQH,GATD,CANR,EAiBKF,QAjBL,CADJ;AAqBH,CAtCD;;AAwCAJ,YAAY,CAACJ,YAAb,GAA4BA,YAA5B;eAEeI,Y","sourcesContent":["import * as React from \"react\";\nimport Drawer from \"react-native-simple-elements/components/Drawer\";\n\ntype DrawerItemProps = {\n    label: string,\n    icon?: React.ReactElement,\n    url?: string,\n    [key: string]: any,\n}\n\ntype Props = {\n    items: DrawerItemProps[],\n    onItemPress?: (item) => void,\n    drawerPaddingTop?: number | string,\n    showMask?: boolean,\n    animated?: boolean,\n    children?: React.ReactNode,\n};\n\nconst defaultProps = {\n    drawerPaddingTop: 0,\n    showMask: true,\n    animated: true,\n};\n\nconst SimpleDrawer = (props: Props) => {\n\n    const {\n        items,\n        onItemPress,\n        drawerPaddingTop,\n        showMask,\n        animated,\n        children,\n    } = props;\n\n    const _handleItemPress = (item) => {\n        if (typeof onItemPress === \"function\") {\n            onItemPress(item);\n        }\n    };\n\n    return (\n        <Drawer\n            drawerPaddingTop={drawerPaddingTop}\n            showMask={showMask}\n            animated={animated}\n        >\n            {(Array.isArray(items) && items.length > 0) &&\n                items.map((item, index) => {\n                    return (\n                        <Drawer.Item\n                            key={index}\n                            label={item.label}\n                            icon={item.icon}\n                            onPress={() => _handleItemPress(item)}\n                        />\n                    );\n                })\n            }\n            {children}\n        </Drawer>\n    );\n};\n\nSimpleDrawer.defaultProps = defaultProps;\n\nexport default SimpleDrawer;\n"]}