"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// const sliderRadius = 3;
const width = 50;

class DefaultLabel extends React.Component {
  render() {
    const {
      oneMarkerValue,
      twoMarkerValue,
      oneMarkerLeftPosition,
      twoMarkerLeftPosition,
      oneMarkerPressed,
      twoMarkerPressed
    } = this.props;
    return /*#__PURE__*/React.createElement(_reactNative.View, {
      style: {
        position: "relative"
      }
    }, Number.isFinite(oneMarkerLeftPosition) && Number.isFinite(oneMarkerValue) && /*#__PURE__*/React.createElement(_reactNative.View, {
      style: [styles.sliderLabel, {
        left: oneMarkerLeftPosition - width / 2
      }, oneMarkerPressed && styles.markerPressed]
    }, /*#__PURE__*/React.createElement(_reactNative.Text, {
      style: styles.sliderLabelText
    }, oneMarkerValue)), Number.isFinite(twoMarkerLeftPosition) && Number.isFinite(twoMarkerValue) && /*#__PURE__*/React.createElement(_reactNative.View, {
      style: [styles.sliderLabel, {
        left: twoMarkerLeftPosition - width / 2
      }, twoMarkerPressed && styles.markerPressed]
    }, /*#__PURE__*/React.createElement(_reactNative.Text, {
      style: styles.sliderLabelText
    }, twoMarkerValue)));
  }

}

exports.default = DefaultLabel;

const styles = _reactNative.StyleSheet.create({
  sliderLabel: {
    position: "absolute",
    bottom: 0,
    minWidth: width,
    padding: 8,
    backgroundColor: "#f1f1f1"
  },
  sliderLabelText: {
    alignItems: "center",
    textAlign: "center",
    fontStyle: "normal",
    fontSize: 11
  },
  markerPressed: {
    borderWidth: 2,
    borderColor: "#999"
  }
});
//# sourceMappingURL=DefaultLabel.js.map