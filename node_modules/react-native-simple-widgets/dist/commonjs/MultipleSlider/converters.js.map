{"version":3,"sources":["converters.ts"],"names":["closest","array","n","minI","maxI","length","closestIndex","midI","Math","round","midVal","minValue","maxValue","deltaMin","abs","deltaMax","valueToPosition","value","valuesArray","sliderLength","markerSize","undefined","index","arrLength","validIndex","output","positionToValue","position","offset","createArray","start","end","step","direction","result","i","push"],"mappings":"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","sourcesContent":["// Find closest index for a given value\nconst closest = (array, n) => {\n    let minI = 0;\n    let maxI = array.length - 1;\n\n    if (array[minI] > n) {\n        return minI;\n    } else if (array[maxI] < n) {\n        return maxI;\n    } else if (array[minI] <= n && n <= array[maxI]) {\n        let closestIndex = null;\n\n        while (closestIndex === null) {\n            const midI = Math.round((minI + maxI) / 2);\n            const midVal = array[midI];\n\n            if (midVal === n) {\n                closestIndex = midI;\n            } else if (maxI === minI + 1) {\n                const minValue = array[minI];\n                const maxValue = array[maxI];\n                const deltaMin = Math.abs(minValue - n);\n                const deltaMax = Math.abs(maxValue - n);\n\n                closestIndex = deltaMax <= deltaMin ? maxI : minI;\n            } else if (midVal < n) {\n                minI = midI;\n            } else if (midVal > n) {\n                maxI = midI;\n            } else {\n                closestIndex = -1;\n            }\n        }\n\n        return closestIndex;\n    }\n\n    return -1;\n};\n\nexport function valueToPosition(\n    value,\n    valuesArray,\n    sliderLength,\n    markerSize = 0,\n) {\n    if (value === undefined) return undefined;\n    const index = closest(valuesArray, value);\n    const arrLength = valuesArray.length - 1;\n    const validIndex = index === -1 ? arrLength : index;\n    const output =\n        ((sliderLength - markerSize) * validIndex) / arrLength + markerSize / 2;\n\n    return output;\n}\n\nexport function positionToValue(\n    position,\n    valuesArray,\n    sliderLength,\n    markerSize = 0,\n) {\n    if (position < 0 || sliderLength < position) {\n        return null;\n    } else {\n        const arrLength = valuesArray.length - 1;\n        const offset = (position - markerSize / 2) / (sliderLength - markerSize);\n        const index =\n            (arrLength * (position - markerSize / 2 + offset * markerSize)) /\n            sliderLength;\n        const output = valuesArray[Math.round(index)];\n\n        return output;\n    }\n}\n\nexport function createArray(start, end, step) {\n    const direction = start - end > 0 ? -1 : 1;\n    const result = [];\n    if (!step) {\n        return result;\n    } else {\n        const length = Math.abs((start - end) / step) + 1;\n        for (let i = 0; i < length; i++) {\n            result.push(start + i * Math.abs(step) * direction);\n        }\n        return result;\n    }\n}"]}