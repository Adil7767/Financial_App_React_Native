{"version":3,"sources":["CalendarHeaderForMonthView.tsx"],"names":["_CalendarHeaderForMonthView","locale","weekStartsOn","style","dates","Date","todayWeekNum","day","theme","u","borderColor","palette","gray","isRTL","map","date","flex","paddingTop","toISOString","height","color","primary","main","format","CalendarHeaderForMonthView"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AAEA;;AACA;;;;;;;;AAQA,SAASA,2BAAT,CAAqC;AACjCC,EAAAA,MADiC;AAEjCC,EAAAA,YAFiC;AAGjCC,EAAAA;AAHiC,CAArC,EAIoC;AAChC,QAAMC,KAAK,GAAG,2BAAe,IAAIC,IAAJ,EAAf,EAA2BH,YAA3B,EAAyCD,MAAzC,CAAd;AACA,QAAMK,YAAY,GAAG,sBAAQC,GAAR,EAArB;AAEA,QAAMC,KAAK,GAAG,6BAAd;AAEA,sBACI,oBAAC,iBAAD;AACI,IAAA,KAAK,EAAE,CACHC,gBAAE,UAAF,CADG,EAEH;AAAEC,MAAAA,WAAW,EAAEF,KAAK,CAACG,OAAN,CAAcC,IAAd,CAAmB,KAAnB;AAAf,KAFG,EAGHJ,KAAK,CAACK,KAAN,GAAcJ,gBAAE,kBAAF,CAAd,GAAsCA,gBAAE,UAAF,CAHnC,EAIHN,KAJG;AADX,KAQKC,KAAK,CAACU,GAAN,CAAWC,IAAD,iBACP,oBAAC,iBAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,UAAU,EAAE;AAAvB,KAAb;AAAyC,IAAA,GAAG,EAAEF,IAAI,CAACG,WAAL;AAA9C,kBACI,oBAAC,iBAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV;AAAb,kBACI,oBAAC,iBAAD;AACI,IAAA,KAAK,EAAE,CACHV,gBAAE,aAAF,CADG,EAEH;AACIW,MAAAA,KAAK,EACDd,YAAY,KAAKS,IAAI,CAACR,GAAL,EAAjB,GACMC,KAAK,CAACG,OAAN,CAAcU,OAAd,CAAsBC,IAD5B,GAEMd,KAAK,CAACG,OAAN,CAAcC,IAAd,CAAmB,KAAnB;AAJd,KAFG;AADX,KAWKG,IAAI,CAACQ,MAAL,CAAY,KAAZ,CAXL,CADJ,CADJ,CADH,CARL,CADJ;AA8BH;;AAEM,MAAMC,0BAA0B,GAAG,sBAAUxB,2BAAV,CAAnC","sourcesContent":["import dayjs from \"dayjs\";\nimport * as React from \"react\";\nimport { Text, View, ViewStyle } from \"react-native\";\n\nimport { u } from \"./styles/commonStyles\";\nimport { WeekNum } from \"./interfaces\";\nimport { useTheme } from \"./theme/ThemeContext\";\nimport { getDatesInWeek, typedMemo } from \"./utils\";\n\nexport interface CalendarHeaderForMonthViewProps {\n    weekStartsOn: WeekNum\n    locale: string\n    style: ViewStyle\n}\n\nfunction _CalendarHeaderForMonthView({\n    locale,\n    weekStartsOn,\n    style,\n}: CalendarHeaderForMonthViewProps) {\n    const dates = getDatesInWeek(new Date(), weekStartsOn, locale);\n    const todayWeekNum = dayjs().day();\n\n    const theme = useTheme();\n\n    return (\n        <View\n            style={[\n                u[\"border-b\"],\n                { borderColor: theme.palette.gray[\"100\"] },\n                theme.isRTL ? u[\"flex-row-reverse\"] : u[\"flex-row\"],\n                style,\n            ]}\n        >\n            {dates.map((date) => (\n                <View style={{ flex: 1, paddingTop: 2 }} key={date.toISOString()}>\n                    <View style={{ height: 30 }}>\n                        <Text\n                            style={[\n                                u[\"text-center\"],\n                                {\n                                    color:\n                                        todayWeekNum === date.day()\n                                            ? theme.palette.primary.main\n                                            : theme.palette.gray[\"800\"],\n                                },\n                            ]}\n                        >\n                            {date.format(\"ddd\")}\n                        </Text>\n                    </View>\n                </View>\n            ))}\n        </View>\n    );\n}\n\nexport const CalendarHeaderForMonthView = typedMemo(_CalendarHeaderForMonthView);\n"]}