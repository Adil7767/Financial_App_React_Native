"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.HourGuideColumn = void 0;

var React = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _commonStyles = require("./styles/commonStyles");

var _ThemeContext = require("./theme/ThemeContext");

var _utils = require("./utils");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const _HourGuideColumn = ({
  cellHeight,
  hour,
  ampm
}) => {
  const theme = (0, _ThemeContext.useTheme)();
  const textStyle = React.useMemo(() => ({
    color: theme.palette.gray[500],
    fontSize: theme.typography.xs.fontSize
  }), [theme]);
  return /*#__PURE__*/React.createElement(_reactNative.View, {
    style: {
      height: cellHeight
    }
  }, /*#__PURE__*/React.createElement(_reactNative.Text, {
    style: [textStyle, _commonStyles.u["text-center"]]
  }, (0, _utils.formatHour)(hour, ampm)));
};

const HourGuideColumn = /*#__PURE__*/React.memo(_HourGuideColumn, () => true);
exports.HourGuideColumn = HourGuideColumn;
//# sourceMappingURL=HourGuideColumn.js.map