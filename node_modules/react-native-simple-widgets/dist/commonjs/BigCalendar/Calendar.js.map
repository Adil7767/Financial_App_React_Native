{"version":3,"sources":["Calendar.tsx"],"names":["dayjs","extend","isBetween","_Calendar","theme","defaultTheme","isRTL","props","_theme","Object","assign","Calendar"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AAGA;;AACA;;;;;;;;AAOAA,eAAMC,MAAN,CAAaC,kBAAb;;AAEA,SAASC,SAAT,CAAsB;AAAEC,EAAAA,KAAK,GAAGC,0BAAV;AAAwBC,EAAAA,KAAxB;AAA+B,KAAGC;AAAlC,CAAtB,EAAmF;AAC/E,QAAMC,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAcL,0BAAd,EAA4BD,KAA5B,EAAmC;AAAEE,IAAAA;AAAF,GAAnC,CAAf;;AACA,sBACI,oBAAC,0BAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEE;AAA9B,kBACI,oBAAC,oCAAD,EAAuBD,KAAvB,CADJ,CADJ;AAKH;;AAEM,MAAMI,QAAQ,GAAG,sBAAUR,SAAV,CAAjB","sourcesContent":["import * as React from \"react\";\nimport dayjs from \"dayjs\";\nimport isBetween from \"dayjs/plugin/isBetween\";\n\nimport { defaultTheme } from \"./theme/defaultTheme\";\nimport { ThemeContext } from \"./theme/ThemeContext\";\nimport { ThemeInterface } from \"./theme/ThemeInterface\";\nimport { DeepPartial } from \"./utility-types\";\nimport { typedMemo } from \"./utils\";\nimport { CalendarContainer, CalendarContainerProps } from \"./CalendarContainer\";\n\nexport interface CalendarProps<T> extends CalendarContainerProps<T> {\n    theme?: DeepPartial<ThemeInterface>\n    isRTL?: boolean\n}\n\ndayjs.extend(isBetween);\n\nfunction _Calendar<T>({ theme = defaultTheme, isRTL, ...props }: CalendarProps<T>) {\n    const _theme = Object.assign(defaultTheme, theme, { isRTL }) as ThemeInterface;\n    return (\n        <ThemeContext.Provider value={_theme}>\n            <CalendarContainer {...props} />\n        </ThemeContext.Provider>\n    );\n}\n\nexport const Calendar = typedMemo(_Calendar);\n"]}