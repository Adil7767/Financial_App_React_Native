{"version":3,"sources":["Collapsible.tsx"],"names":["ANIMATED_EASING_PREFIXES","Collapsible","React","Component","constructor","props","ref","contentHandle","event","contentHeight","nativeEvent","layout","height","state","animating","collapsed","measuring","setValue","setState","measured","Animated","Value","collapsedHeight","componentDidUpdate","prevProps","_componentDidUpdate","componentWillUnmount","unmounted","_toggleCollapsed","_measureContent","callback","requestAnimationFrame","measure","getNode","x","y","width","_transitionToHeight","duration","easing","formattedEasing","prefix","found","i","length","substr","temp","toLowerCase","Easing","Error","timing","useNativeDriver","toValue","start","onAnimationEnd","render","enablePointerEvents","renderChildrenCollapsed","hasKnownHeight","style","overflow","contentStyle","position","opacity","align","transform","translateY","interpolate","inputRange","outputRange","shouldRenderChildren","_handleRef","undefined","_handleLayoutChange","children","Accordion"],"mappings":"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","sourcesContent":["\r\nimport * as React from \"react\";\r\nimport { Animated, Easing } from \"react-native\";\r\nimport Accordion from \"./Accordion\";\r\n\r\nconst ANIMATED_EASING_PREFIXES = [\"easeInOut\", \"easeOut\", \"easeIn\"];\r\n\r\ntype Props = {\r\n    collapsed?: boolean,\r\n    collapsedHeight?: number,\r\n    duration?: number,\r\n    height?: number,\r\n    onAnimationEnd?: (evt?) => void,\r\n    enablePointerEvents?: boolean,\r\n    renderChildrenCollapsed?: boolean,\r\n    align?: string, // \"bottom\" | \"top\"\r\n    style?: any,\r\n    easing?: string, // \"easeOutCubic\"\r\n};\r\n\r\ntype State = {\r\n    measuring?: boolean,\r\n    measured?: boolean,\r\n    height?: Animated.Value,\r\n    contentHeight?: number,\r\n    animating?: boolean,\r\n}\r\n\r\nclass Collapsible extends React.Component<Props, State> {\r\n\r\n    static defaultProps = {\r\n        align: \"top\",\r\n        collapsed: true,\r\n        collapsedHeight: 0,\r\n        enablePointerEvents: false,\r\n        duration: 300,\r\n        easing: \"easeOutCubic\",\r\n        onAnimationEnd: () => null,\r\n        renderChildrenCollapsed: true,\r\n    };\r\n\r\n    static Accordion = Accordion;\r\n\r\n    unmounted: boolean;\r\n    // easing\r\n    _animation: Animated.CompositeAnimation;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            measuring: false,\r\n            measured: false,\r\n            height: new Animated.Value(props.collapsedHeight),\r\n            contentHeight: 0,\r\n            animating: false,\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.collapsed !== this.props.collapsed) {\r\n            this.setState({ measured: false }, () =>\r\n                this._componentDidUpdate(prevProps)\r\n            );\r\n        } else {\r\n            this._componentDidUpdate(prevProps);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.unmounted = true;\r\n    }\r\n\r\n    _componentDidUpdate(prevProps) {\r\n        if (prevProps.collapsed !== this.props.collapsed) {\r\n            this._toggleCollapsed(this.props.collapsed);\r\n        } else if (\r\n            this.props.collapsed &&\r\n            prevProps.collapsedHeight !== this.props.collapsedHeight\r\n        ) {\r\n            this.state.height.setValue(this.props.collapsedHeight);\r\n        }\r\n    }\r\n\r\n    contentHandle = null;\r\n\r\n    _handleRef = (ref) => {\r\n        this.contentHandle = ref;\r\n    };\r\n\r\n    _measureContent(callback) {\r\n        this.setState(\r\n            {\r\n                measuring: true,\r\n            },\r\n            () => {\r\n                requestAnimationFrame(() => {\r\n                    if (!this.contentHandle) {\r\n                        this.setState(\r\n                            {\r\n                                measuring: false,\r\n                            },\r\n                            () => callback(this.props.collapsedHeight)\r\n                        );\r\n                    } else {\r\n                        let ref;\r\n                        if (typeof this.contentHandle.measure === \"function\") {\r\n                            ref = this.contentHandle;\r\n                        } else {\r\n                            ref = this.contentHandle.getNode();\r\n                        }\r\n                        ref.measure((x, y, width, height) => {\r\n                            this.setState(\r\n                                {\r\n                                    measuring: false,\r\n                                    measured: true,\r\n                                    contentHeight: height,\r\n                                },\r\n                                () => callback(height)\r\n                            );\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    _toggleCollapsed(collapsed) {\r\n        if (collapsed) {\r\n            this._transitionToHeight(this.props.collapsedHeight);\r\n        } else if (!this.contentHandle) {\r\n            if (this.state.measured) {\r\n                this._transitionToHeight(this.state.contentHeight);\r\n            }\r\n            return;\r\n        } else {\r\n            this._measureContent((contentHeight) => {\r\n                this._transitionToHeight(contentHeight);\r\n            });\r\n        }\r\n    }\r\n\r\n    _transitionToHeight(height) {\r\n        const { duration } = this.props;\r\n        const easing = this.props.easing;\r\n        let formattedEasing: any;\r\n        if (typeof easing === \"string\") {\r\n            let prefix;\r\n            let found = false;\r\n            for (let i = 0; i < ANIMATED_EASING_PREFIXES.length; i++) {\r\n                prefix = ANIMATED_EASING_PREFIXES[i];\r\n                if (easing.substr(0, prefix.length) === prefix) {\r\n                    const temp =\r\n                        easing.substr(prefix.length, 1).toLowerCase() +\r\n                        easing.substr(prefix.length + 1);\r\n                    prefix = prefix.substr(4, 1).toLowerCase() + prefix.substr(5);\r\n                    formattedEasing = Easing[prefix](Easing[temp || \"ease\"]);\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!found) {\r\n                formattedEasing = Easing[easing];\r\n            }\r\n            if (!easing) {\r\n                throw new Error(\"Invalid easing type \\\"\" + this.props.easing + \"\\\"\");\r\n            }\r\n        }\r\n\r\n        // if (this._animation) {\r\n        //     this._animation.stop();\r\n        // }\r\n        this.setState({ animating: true });\r\n        // TODO: Animated.timing don't return anything, please check\r\n        // this._animation = Animated.timing(this.state.height, {\r\n        Animated.timing(this.state.height, {\r\n            useNativeDriver: false,\r\n            toValue: height ? height : 0,\r\n            duration,\r\n            easing: formattedEasing,\r\n        }).start(() => {\r\n            if (this.unmounted) {\r\n                return;\r\n            }\r\n            this.setState({ animating: false }, () => {\r\n                if (this.unmounted) {\r\n                    return;\r\n                }\r\n                this.props.onAnimationEnd();\r\n            });\r\n        });\r\n    }\r\n\r\n    _handleLayoutChange = (event) => {\r\n        const contentHeight = event.nativeEvent.layout.height;\r\n        if (\r\n            this.state.animating ||\r\n            this.props.collapsed ||\r\n            this.state.measuring ||\r\n            this.state.contentHeight === contentHeight\r\n        ) {\r\n            return;\r\n        }\r\n\r\n        this.state.height.setValue(contentHeight);\r\n        this.setState({ contentHeight });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            collapsed,\r\n            enablePointerEvents,\r\n            renderChildrenCollapsed,\r\n        } = this.props;\r\n        const {\r\n            height,\r\n            contentHeight,\r\n            measuring,\r\n            measured,\r\n            animating,\r\n        } = this.state;\r\n        const hasKnownHeight = !measuring && (measured || collapsed);\r\n        const style: any = hasKnownHeight && {\r\n            overflow: \"hidden\",\r\n            height: height,\r\n        };\r\n        const contentStyle = {} as any;\r\n        if (measuring) {\r\n            contentStyle.position = \"absolute\";\r\n            contentStyle.opacity = 0;\r\n        } else if (this.props.align === \"center\") {\r\n            contentStyle.transform = [\r\n                {\r\n                    translateY: height.interpolate({\r\n                        inputRange: [0, contentHeight],\r\n                        outputRange: [contentHeight / -2, 0],\r\n                    }),\r\n                },\r\n            ];\r\n        } else if (this.props.align === \"bottom\") {\r\n            contentStyle.transform = [\r\n                {\r\n                    translateY: height.interpolate({\r\n                        inputRange: [0, contentHeight],\r\n                        outputRange: [-contentHeight, 0],\r\n                    }),\r\n                },\r\n            ];\r\n        }\r\n        if (animating) {\r\n            contentStyle.height = contentHeight;\r\n        }\r\n        const shouldRenderChildren =\r\n            renderChildrenCollapsed ||\r\n            ((!collapsed || (collapsed && animating)) &&\r\n                (animating || measuring || measured));\r\n\r\n        return (\r\n            <Animated.View\r\n                style={style}\r\n                pointerEvents={!enablePointerEvents && collapsed ? \"none\" : \"auto\"}\r\n            >\r\n                <Animated.View\r\n                    ref={this._handleRef}\r\n                    style={[this.props.style, contentStyle]}\r\n                    onLayout={this.state.animating ? undefined : this._handleLayoutChange}\r\n                >\r\n                    {shouldRenderChildren && this.props.children}\r\n                </Animated.View>\r\n            </Animated.View>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Collapsible;\r\n"]}