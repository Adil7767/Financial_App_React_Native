{"version":3,"sources":["TouchDistanceMath.tsx"],"names":["distance","touchTrackA","touchTrackB","ofCurrent","xa","ya","xb","yb","currentPageX","currentPageY","previousPageX","previousPageY","Math","sqrt","pow","maxDistance","touchBank","max","i","length","j","d","pinchDistance","touchHistory","touchesChangedAfter","numberActiveTouches","filteredTouchBank","filter","touchTrack","currentTimeStamp"],"mappings":";;;;;;;;;AAAO,SAASA,QAAT,CAAmBC,WAAnB,EAAgCC,WAAhC,EAA6CC,SAA7C,EAAwD;AAC3D,MAAIC,EAAJ,EAAQC,EAAR,EAAYC,EAAZ,EAAgBC,EAAhB;;AACA,MAAIJ,SAAJ,EAAe;AACXC,IAAAA,EAAE,GAAGH,WAAW,CAACO,YAAjB;AACAH,IAAAA,EAAE,GAAGJ,WAAW,CAACQ,YAAjB;AACAH,IAAAA,EAAE,GAAGJ,WAAW,CAACM,YAAjB;AACAD,IAAAA,EAAE,GAAGL,WAAW,CAACO,YAAjB;AACH,GALD,MAKO;AACHL,IAAAA,EAAE,GAAGH,WAAW,CAACS,aAAjB;AACAL,IAAAA,EAAE,GAAGJ,WAAW,CAACU,aAAjB;AACAL,IAAAA,EAAE,GAAGJ,WAAW,CAACQ,aAAjB;AACAH,IAAAA,EAAE,GAAGL,WAAW,CAACS,aAAjB;AACH;;AACD,SAAOC,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,GAAL,CAASV,EAAE,GAAGE,EAAd,EAAkB,CAAlB,IAAuBM,IAAI,CAACE,GAAL,CAAST,EAAE,GAAGE,EAAd,EAAkB,CAAlB,CAAjC,CAAP;AACH;;AAEM,SAASQ,WAAT,CAAsBC,SAAtB,EAAiCb,SAAjC,EAA4C;AAC/C,MAAIc,GAAG,GAAG,CAAV;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,SAAS,CAACG,MAAV,GAAmB,CAAvC,EAA0CD,CAAC,EAA3C,EAA+C;AAC3C,SAAK,IAAIE,CAAC,GAAGF,CAAC,GAAG,CAAjB,EAAoBE,CAAC,GAAGJ,SAAS,CAACG,MAAlC,EAA0CC,CAAC,EAA3C,EAA+C;AAC3C,YAAMC,CAAC,GAAGrB,QAAQ,CAACgB,SAAS,CAACE,CAAD,CAAV,EAAeF,SAAS,CAACI,CAAD,CAAxB,EAA6BjB,SAA7B,CAAlB;;AACA,UAAIkB,CAAC,GAAGJ,GAAR,EAAa;AACTA,QAAAA,GAAG,GAAGI,CAAN;AACH;AACJ;AACJ;;AACD,SAAOJ,GAAP;AACH;;AAEM,SAASK,aAAT,CAAwBC,YAAxB,EAAsCC,mBAAtC,EAA2DrB,SAA3D,EAAsE;AACzE,QAAMa,SAAS,GAAGO,YAAY,CAACP,SAA/B;;AACA,MAAIO,YAAY,CAACE,mBAAb,GAAmC,CAAvC,EAA0C;AACtC,UAAMC,iBAAiB,GAAGV,SAAS,CAACW,MAAV,CAAkBC,UAAD,IAAgB;AACvD,aAAOA,UAAU,IAAIA,UAAU,CAACC,gBAAX,IAA+BL,mBAApD;AACH,KAFyB,CAA1B;AAGA,WAAOT,WAAW,CAACW,iBAAD,EAAoBvB,SAApB,CAAlB;AACH;AACJ","sourcesContent":["export function distance (touchTrackA, touchTrackB, ofCurrent) {\n    let xa, ya, xb, yb;\n    if (ofCurrent) {\n        xa = touchTrackA.currentPageX;\n        ya = touchTrackA.currentPageY;\n        xb = touchTrackB.currentPageX;\n        yb = touchTrackB.currentPageY;\n    } else {\n        xa = touchTrackA.previousPageX;\n        ya = touchTrackA.previousPageY;\n        xb = touchTrackB.previousPageX;\n        yb = touchTrackB.previousPageY;\n    }\n    return Math.sqrt(Math.pow(xa - xb, 2) + Math.pow(ya - yb, 2));\n}\n\nexport function maxDistance (touchBank, ofCurrent) {\n    let max = 0;\n    for (let i = 0; i < touchBank.length - 1; i++) {\n        for (let j = i + 1; j < touchBank.length; j++) {\n            const d = distance(touchBank[i], touchBank[j], ofCurrent);\n            if (d > max) {\n                max = d;\n            }\n        }\n    }\n    return max;\n}\n\nexport function pinchDistance (touchHistory, touchesChangedAfter, ofCurrent) {\n    const touchBank = touchHistory.touchBank;\n    if (touchHistory.numberActiveTouches > 1) {\n        const filteredTouchBank = touchBank.filter((touchTrack) => {\n            return touchTrack && touchTrack.currentTimeStamp >= touchesChangedAfter;\n        });\n        return maxDistance(filteredTouchBank, ofCurrent);\n    }\n}\n"]}