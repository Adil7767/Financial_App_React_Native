{"version":3,"sources":["ErrorDialog.tsx"],"names":["defaultProps","translations","confirmText","ErrorDialog","innerRef","children","title","message","dialogContentStyle","messageStyle","rest","visible","setVisible","React","useState","optionsRef","useRef","colors","useContext","ThemeContext","useImperativeHandle","open","opts","current","onConfirm","close","_handleConfirm","_handleDismiss","styles","color","error","StyleSheet","create","paddingHorizontal"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;AAoBA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAE;AACVC,IAAAA,WAAW,EAAE;AADH;AADG,CAArB;;AAMA,MAAMC,WAAW,GAAG,CAAC;AACjBC,EAAAA,QADiB;AAEjBC,EAAAA,QAFiB;AAGjBC,EAAAA,KAHiB;AAIjBC,EAAAA,OAJiB;AAKjBN,EAAAA,YALiB;AAMjBO,EAAAA,kBANiB;AAOjBC,EAAAA,YAPiB;AAQjB,KAAGC;AARc,CAAD,KASP;AACT,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0BC,KAAK,CAACC,QAAN,CAAe,KAAf,CAAhC;AACA,QAAMC,UAAU,GAAGF,KAAK,CAACG,MAAN,CAAkB,EAAlB,CAAnB;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAaJ,KAAK,CAACK,UAAN,CAAiBC,8BAAjB,CAAnB;AAEAN,EAAAA,KAAK,CAACO,mBAAN,CAA0BhB,QAA1B,EAAoC,OAAO;AACvCiB,IAAAA,IAAI,EAAGC,IAAD,IAAU;AACZP,MAAAA,UAAU,CAACQ,OAAX,GAAqB;AACjBC,QAAAA,SAAS,EAAEF,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEE;AADA,OAArB;AAGAZ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KANsC;AAOvCa,IAAAA,KAAK,EAAE,MAAM;AACTb,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AATsC,GAAP,CAApC;;AAYA,QAAMc,cAAc,GAAG,MAAM;AACzB,QAAIX,UAAU,IAAIA,UAAU,CAACQ,OAAzB,IAAoCR,UAAU,CAACQ,OAAX,CAAmBC,SAA3D,EAAsE;AAClET,MAAAA,UAAU,CAACQ,OAAX,CAAmBC,SAAnB;AACH;;AACDpB,IAAAA,QAAQ,CAACmB,OAAT,CAAiBE,KAAjB;AACH,GALD;;AAOA,QAAME,cAAc,GAAG,MAAM;AACzBvB,IAAAA,QAAQ,CAACmB,OAAT,CAAiBE,KAAjB;AACH,GAFD;;AAIA,sBACI,oBAAC,oBAAD;AACI,IAAA,OAAO,EAAEd,OADb;AAEI,IAAA,SAAS,EAAEgB,cAFf;AAGI,IAAA,YAAY,EAAE;AAHlB,KAMQjB,IANR,GAQKJ,KAAK,gBACF,oBAAC,mBAAD,QAAcA,KAAd,CADE,GAGF,IAXR,eAaI,oBAAC,qBAAD;AACI,IAAA,KAAK,EAAE,CACHsB,MAAM,CAACpB,kBADJ,EAEHA,kBAFG;AADX,KAMKD,OAAO,gBACJ,oBAAC,aAAD;AACI,IAAA,KAAK,EAAE,CACHE,YADG,EAEH;AACIoB,MAAAA,KAAK,EAAEZ,MAAM,CAACa;AADlB,KAFG;AADX,KAQKvB,OARL,CADI,GAYJF,QAlBR,CAbJ,eAkCI,oBAAC,qBAAD,qBACI,oBAAC,eAAD;AACI,IAAA,IAAI,EAAC,WADT;AAEI,IAAA,OAAO,EAAEqB;AAFb,KAIKzB,YAJL,aAIKA,YAJL,uBAIKA,YAAY,CAAEC,WAJnB,CADJ,CAlCJ,CADJ;AA6CH,CAnFD;;AAqFAC,WAAW,CAACH,YAAZ,GAA2BA,YAA3B;eAEeG,W;;;AAEf,MAAMyB,MAAM,GAAGG,wBAAWC,MAAX,CAAkB;AAC7BxB,EAAAA,kBAAkB,EAAE;AAChByB,IAAAA,iBAAiB,EAAE;AADH;AADS,CAAlB,CAAf","sourcesContent":["import * as React from \"react\";\nimport { StyleProp, StyleSheet, TextStyle, ViewStyle } from \"react-native\";\nimport AlertDialog from \"react-native-simple-elements/components/AlertDialog\";\nimport Button from \"react-native-simple-elements/components/Button\";\nimport { DialogActions, DialogContent, DialogTitle } from \"react-native-simple-elements/components/Dialog\";\nimport Text from \"react-native-simple-elements/components/Text\";\nimport { ThemeContext } from \"styled-components\";\n\ntype RefProps = {\n    open: (opts) => void,\n    close: () => void,\n};\n\ntype TranslationProps = {\n    confirmText: string,\n}\n\ntype Props = Omit<React.ComponentProps<typeof AlertDialog>, \"visible\" | \"onDismiss\"> & {\n    innerRef: React.RefObject<RefProps>,\n    title?: string,\n    message?: string,\n    translations?: TranslationProps,\n    dialogContentStyle?: StyleProp<ViewStyle>,\n    messageStyle?: StyleProp<TextStyle>,\n}\n\nconst defaultProps = {\n    translations: {\n        confirmText: \"Ok\",\n    },\n};\n\nconst ErrorDialog = ({\n    innerRef,\n    children,\n    title,\n    message,\n    translations,\n    dialogContentStyle,\n    messageStyle,\n    ...rest\n}: Props) => {\n    const [ visible, setVisible ] = React.useState(false);\n    const optionsRef = React.useRef<any>({});\n\n    const { colors } = React.useContext(ThemeContext);\n\n    React.useImperativeHandle(innerRef, () => ({\n        open: (opts) => {\n            optionsRef.current = {\n                onConfirm: opts?.onConfirm,\n            };\n            setVisible(true);\n        },\n        close: () => {\n            setVisible(false);\n        },\n    }));\n\n    const _handleConfirm = () => {\n        if (optionsRef && optionsRef.current && optionsRef.current.onConfirm) {\n            optionsRef.current.onConfirm();\n        }\n        innerRef.current.close();\n    };\n\n    const _handleDismiss = () => {\n        innerRef.current.close();\n    };\n\n    return (\n        <AlertDialog\n            visible={visible}\n            onDismiss={_handleDismiss}\n            contentStyle={{\n\n            }}\n            {...rest}\n        >\n            {title ?\n                <DialogTitle>{title}</DialogTitle>\n                :\n                null\n            }\n            <DialogContent\n                style={[\n                    styles.dialogContentStyle,\n                    dialogContentStyle,\n                ]}\n            >\n                {message ?\n                    <Text\n                        style={[\n                            messageStyle,\n                            {\n                                color: colors.error,\n                            },\n                        ]}\n                    >\n                        {message}\n                    </Text>\n                    :\n                    children\n                }\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    mode=\"contained\"\n                    onPress={_handleConfirm}\n                >\n                    {translations?.confirmText}\n                </Button>\n            </DialogActions>\n        </AlertDialog>\n    );\n};\n\nErrorDialog.defaultProps = defaultProps;\n\nexport default ErrorDialog;\n\nconst styles = StyleSheet.create({\n    dialogContentStyle: {\n        paddingHorizontal: 16,\n    },\n});\n"]}