{"version":3,"sources":["MessageDialog.tsx"],"names":["defaultProps","translations","confirmText","MessageDialog","innerRef","children","title","message","dialogContentStyle","messageStyle","rest","visible","setVisible","React","useState","optionsRef","useRef","useImperativeHandle","open","opts","current","onConfirm","close","_handleConfirm","_handleDismiss","styles","StyleSheet","create","paddingHorizontal"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;AAoBA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAE;AACVC,IAAAA,WAAW,EAAE;AADH;AADG,CAArB;;AAMA,MAAMC,aAAa,GAAG,CAAC;AACnBC,EAAAA,QADmB;AAEnBC,EAAAA,QAFmB;AAGnBC,EAAAA,KAHmB;AAInBC,EAAAA,OAJmB;AAKnBN,EAAAA,YALmB;AAMnBO,EAAAA,kBANmB;AAOnBC,EAAAA,YAPmB;AAQnB,KAAGC;AARgB,CAAD,KAST;AACT,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0BC,KAAK,CAACC,QAAN,CAAe,KAAf,CAAhC;AACA,QAAMC,UAAU,GAAGF,KAAK,CAACG,MAAN,CAAkB,EAAlB,CAAnB;AAEAH,EAAAA,KAAK,CAACI,mBAAN,CAA0Bb,QAA1B,EAAoC,OAAO;AACvCc,IAAAA,IAAI,EAAGC,IAAD,IAAU;AACZJ,MAAAA,UAAU,CAACK,OAAX,GAAqB;AACjBC,QAAAA,SAAS,EAAEF,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEE;AADA,OAArB;AAGAT,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KANsC;AAOvCU,IAAAA,KAAK,EAAE,MAAM;AACTV,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AATsC,GAAP,CAApC;;AAYA,QAAMW,cAAc,GAAG,MAAM;AACzB,QAAIR,UAAU,IAAIA,UAAU,CAACK,OAAzB,IAAoCL,UAAU,CAACK,OAAX,CAAmBC,SAA3D,EAAsE;AAClEN,MAAAA,UAAU,CAACK,OAAX,CAAmBC,SAAnB;AACH;;AACDjB,IAAAA,QAAQ,CAACgB,OAAT,CAAiBE,KAAjB;AACH,GALD;;AAOA,QAAME,cAAc,GAAG,MAAM;AACzBpB,IAAAA,QAAQ,CAACgB,OAAT,CAAiBE,KAAjB;AACH,GAFD;;AAIA,sBACI,oBAAC,oBAAD;AACI,IAAA,OAAO,EAAEX,OADb;AAEI,IAAA,SAAS,EAAEa,cAFf;AAGI,IAAA,YAAY,EAAE;AAHlB,KAMQd,IANR,GAQKJ,KAAK,gBACF,oBAAC,mBAAD,QAAcA,KAAd,CADE,GAGF,IAXR,eAaI,oBAAC,qBAAD;AACI,IAAA,KAAK,EAAE,CACHmB,MAAM,CAACjB,kBADJ,EAEHA,kBAFG;AADX,KAMKD,OAAO,gBACJ,oBAAC,aAAD;AACI,IAAA,KAAK,EAAE,CACHE,YADG;AADX,KAKKF,OALL,CADI,GASJF,QAfR,CAbJ,eA+BI,oBAAC,qBAAD,qBACI,oBAAC,eAAD;AACI,IAAA,IAAI,EAAC,WADT;AAEI,IAAA,OAAO,EAAEkB;AAFb,KAIKtB,YAJL,aAIKA,YAJL,uBAIKA,YAAY,CAAEC,WAJnB,CADJ,CA/BJ,CADJ;AA0CH,CA9ED;;AAgFAC,aAAa,CAACH,YAAd,GAA6BA,YAA7B;eAEeG,a;;;AAEf,MAAMsB,MAAM,GAAGC,wBAAWC,MAAX,CAAkB;AAC7BnB,EAAAA,kBAAkB,EAAE;AAChBoB,IAAAA,iBAAiB,EAAE;AADH;AADS,CAAlB,CAAf","sourcesContent":["import * as React from \"react\";\nimport { StyleProp, StyleSheet, TextStyle, ViewStyle } from \"react-native\";\nimport AlertDialog from \"react-native-simple-elements/components/AlertDialog\";\nimport Button from \"react-native-simple-elements/components/Button\";\nimport { DialogActions, DialogContent, DialogTitle } from \"react-native-simple-elements/components/Dialog\";\nimport Text from \"react-native-simple-elements/components/Text\";\n\ntype RefProps = {\n    open: (opts) => void,\n    close: () => void,\n};\n\ntype TranslationProps = {\n    confirmText: string,\n}\n\ntype Props = Omit<React.ComponentProps<typeof AlertDialog>, \"visible\" | \"onDismiss\"> & {\n    innerRef: React.RefObject<RefProps>,\n    title?: string,\n    message?: string,\n    translations?: TranslationProps,\n    dialogContentStyle?: StyleProp<ViewStyle>,\n    messageStyle?: StyleProp<TextStyle>,\n}\n\nconst defaultProps = {\n    translations: {\n        confirmText: \"Ok\",\n    },\n};\n\nconst MessageDialog = ({\n    innerRef,\n    children,\n    title,\n    message,\n    translations,\n    dialogContentStyle,\n    messageStyle,\n    ...rest\n}: Props) => {\n    const [ visible, setVisible ] = React.useState(false);\n    const optionsRef = React.useRef<any>({});\n\n    React.useImperativeHandle(innerRef, () => ({\n        open: (opts) => {\n            optionsRef.current = {\n                onConfirm: opts?.onConfirm,\n            };\n            setVisible(true);\n        },\n        close: () => {\n            setVisible(false);\n        },\n    }));\n\n    const _handleConfirm = () => {\n        if (optionsRef && optionsRef.current && optionsRef.current.onConfirm) {\n            optionsRef.current.onConfirm();\n        }\n        innerRef.current.close();\n    };\n\n    const _handleDismiss = () => {\n        innerRef.current.close();\n    };\n\n    return (\n        <AlertDialog\n            visible={visible}\n            onDismiss={_handleDismiss}\n            contentStyle={{\n\n            }}\n            {...rest}\n        >\n            {title ?\n                <DialogTitle>{title}</DialogTitle>\n                :\n                null\n            }\n            <DialogContent\n                style={[\n                    styles.dialogContentStyle,\n                    dialogContentStyle,\n                ]}\n            >\n                {message ?\n                    <Text\n                        style={[\n                            messageStyle,\n                        ]}\n                    >\n                        {message}\n                    </Text>\n                    :\n                    children\n                }\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    mode=\"contained\"\n                    onPress={_handleConfirm}\n                >\n                    {translations?.confirmText}\n                </Button>\n            </DialogActions>\n        </AlertDialog>\n    );\n};\n\nMessageDialog.defaultProps = defaultProps;\n\nexport default MessageDialog;\n\nconst styles = StyleSheet.create({\n    dialogContentStyle: {\n        paddingHorizontal: 16,\n    },\n});\n"]}