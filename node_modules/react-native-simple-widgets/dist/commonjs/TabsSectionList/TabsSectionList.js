"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _TabBar = _interopRequireDefault(require("./TabBar"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class SectionList extends React.PureComponent {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "state", {
      currentIndex: 0
    });

    _defineProperty(this, "blockUpdateIndex", false);

    _defineProperty(this, "sectionList", /*#__PURE__*/React.createRef());
  }

  render() {
    const {
      sections,
      renderTab,
      tabBarStyle,
      scrollToLocationOffset
    } = this.props;
    const prepareSections = sections.map((item, index) => ({ ...item,
      index
    }));
    return /*#__PURE__*/React.createElement(_reactNative.View, {
      style: {
        flex: 1
      }
    }, /*#__PURE__*/React.createElement(_TabBar.default, {
      sections: prepareSections,
      renderTab: renderTab,
      tabBarStyle: tabBarStyle,
      currentIndex: this.state.currentIndex,
      onPress: index => {
        this.setState({
          currentIndex: index
        });
        this.blockUpdateIndex = true;
        const sectionList = this.sectionList.current;

        if (sectionList && sectionList.scrollToLocation) {
          sectionList.scrollToLocation({
            animated: true,
            itemIndex: 0,
            viewOffset: scrollToLocationOffset || 0,
            sectionIndex: index
          });
        }
      }
    }), /*#__PURE__*/React.createElement(_reactNative.SectionList, _extends({}, this.props, {
      sections: prepareSections,
      onViewableItemsChanged: ({
        viewableItems
      }) => {
        if (!this.blockUpdateIndex && viewableItems[0]) {
          const currentIndex = viewableItems[0].section.index;

          if (this.state.currentIndex !== currentIndex) {
            this.setState({
              currentIndex
            });
          }
        }
      },
      viewabilityConfig: {
        minimumViewTime: 10,
        itemVisiblePercentThreshold: 10
      },
      ref: this.sectionList,
      onMomentumScrollEnd: () => this.blockUpdateIndex = false
    })));
  }

}

exports.default = SectionList;
//# sourceMappingURL=TabsSectionList.js.map