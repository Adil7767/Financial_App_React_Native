{"version":3,"sources":["Pagination.tsx"],"names":["styles","StyleSheet","create","container","position","flexDirection","marginVertical","vertical","xxSmall","justifyContent","alignSelf","bottom","height","horizontal","small","pagination","width","borderRadius","marginHorizontal","xSmall","Pagination","size","paginationIndex","scrollToIndex","paginationDefaultColor","colors","gray","paginationActiveColor","white","paginationStyle","paginationStyleItem","paginationStyleItemActive","paginationStyleItemInactive","onPaginationSelectedIndex","e2eID","Array","from","length","map","_","index","backgroundColor"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;;;AAGA,MAAMA,MAAM,GAAGC,wBAAWC,MAAX,CAAkB;AAC7BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,QAAQ,EAAE,UADH;AAEPC,IAAAA,aAAa,EAAE,KAFR;AAGPC,IAAAA,cAAc,EAAEC,iBAASC,OAHlB;AAIPC,IAAAA,cAAc,EAAE,QAJT;AAKPC,IAAAA,SAAS,EAAE,QALJ;AAMPC,IAAAA,MAAM,EAAE,CAND;AAOPC,IAAAA,MAAM,EAAEC,mBAAWC;AAPZ,GADkB;AAU7BC,EAAAA,UAAU,EAAE;AACRC,IAAAA,KAAK,EAAEH,mBAAWC,KADV;AAERF,IAAAA,MAAM,EAAEC,mBAAWC,KAFX;AAGRG,IAAAA,YAAY,EAAE,EAHN;AAIRC,IAAAA,gBAAgB,EAAEL,mBAAWM;AAJrB;AAViB,CAAlB,CAAf;;AAkBO,MAAMC,UAAqC,GAAG,CAAC;AAClDC,EAAAA,IADkD;AAElDC,EAAAA,eAAe,GAAG,CAFgC;AAGlDC,EAAAA,aAHkD;AAIlDC,EAAAA,sBAAsB,GAAGC,eAAOC,IAJkB;AAKlDC,EAAAA,qBAAqB,GAAGF,eAAOG,KALmB;AAMlDC,EAAAA,eAAe,GAAG,EANgC;AAOlDC,EAAAA,mBAAmB,GAAG,EAP4B;AAQlDC,EAAAA,yBAAyB,GAAG,EARsB;AASlDC,EAAAA,2BAA2B,GAAG,EAToB;AAUlDC,EAAAA,yBAVkD;AAWlDC,EAAAA,KAAK,GAAG;AAX0C,CAAD,KAY/C;AACF,sBACI,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAE,CAAClC,MAAM,CAACG,SAAR,EAAmB0B,eAAnB;AAAb,KACKM,KAAK,CAACC,IAAN,CAAW;AAAEC,IAAAA,MAAM,EAAEhB;AAAV,GAAX,EAA6BiB,GAA7B,CAAiC,CAACC,CAAD,EAAIC,KAAJ,kBAC9B,6BAAC,6BAAD;AACI,IAAA,MAAM,YAAKN,KAAL,yBAAyBM,KAAzB,CADV;AAEI,IAAA,KAAK,EAAE,CACHxC,MAAM,CAACe,UADJ,EAEHe,mBAFG,EAGHR,eAAe,KAAKkB,KAApB,GACM;AAAEC,MAAAA,eAAe,EAAEd;AAAnB,KADN,GAEM;AAAEc,MAAAA,eAAe,EAAEjB;AAAnB,KALH,EAMHF,eAAe,KAAKkB,KAApB,GAA4BT,yBAA5B,GAAwDC,2BANrD,CAFX;AAUI,IAAA,GAAG,EAAEQ,KAVT;AAWI,IAAA,OAAO,EAAE,MAAM;AACXjB,MAAAA,aAAa,CAAC;AAAEiB,QAAAA;AAAF,OAAD,CAAb;AACAP,MAAAA,yBAAyB,SAAzB,IAAAA,yBAAyB,WAAzB,YAAAA,yBAAyB;AAC5B;AAdL,IADH,CADL,CADJ;AAsBH,CAnCM","sourcesContent":["import React from \"react\";\r\nimport { StyleSheet, TouchableOpacity, View } from \"react-native\";\r\n\r\nimport { colors, vertical, horizontal } from \"../themes\";\r\nimport { PaginationProps } from \"./PaginationProps\";\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        position: \"absolute\",\r\n        flexDirection: \"row\",\r\n        marginVertical: vertical.xxSmall,\r\n        justifyContent: \"center\",\r\n        alignSelf: \"center\",\r\n        bottom: 0,\r\n        height: horizontal.small,\r\n    },\r\n    pagination: {\r\n        width: horizontal.small,\r\n        height: horizontal.small,\r\n        borderRadius: 25,\r\n        marginHorizontal: horizontal.xSmall,\r\n    },\r\n});\r\n\r\nexport const Pagination: React.FC<PaginationProps> = ({\r\n    size,\r\n    paginationIndex = 0,\r\n    scrollToIndex,\r\n    paginationDefaultColor = colors.gray,\r\n    paginationActiveColor = colors.white,\r\n    paginationStyle = {},\r\n    paginationStyleItem = {},\r\n    paginationStyleItemActive = {},\r\n    paginationStyleItemInactive = {},\r\n    onPaginationSelectedIndex,\r\n    e2eID = \"\",\r\n}) => {\r\n    return (\r\n        <View style={[styles.container, paginationStyle]}>\r\n            {Array.from({ length: size }).map((_, index) => (\r\n                <TouchableOpacity\r\n                    testID={`${e2eID}_pagination_${index}`}\r\n                    style={[\r\n                        styles.pagination,\r\n                        paginationStyleItem,\r\n                        paginationIndex === index\r\n                            ? { backgroundColor: paginationActiveColor }\r\n                            : { backgroundColor: paginationDefaultColor },\r\n                        paginationIndex === index ? paginationStyleItemActive : paginationStyleItemInactive,\r\n                    ]}\r\n                    key={index}\r\n                    onPress={() => {\r\n                        scrollToIndex({ index });\r\n                        onPaginationSelectedIndex?.();\r\n                    }}\r\n                />\r\n            ))}\r\n        </View>\r\n    );\r\n};\r\n"]}