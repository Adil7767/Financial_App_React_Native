"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Pagination = void 0;

var _react = _interopRequireDefault(require("react"));

var _reactNative = require("react-native");

var _themes = require("../themes");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const styles = _reactNative.StyleSheet.create({
  container: {
    position: "absolute",
    flexDirection: "row",
    marginVertical: _themes.vertical.xxSmall,
    justifyContent: "center",
    alignSelf: "center",
    bottom: 0,
    height: _themes.horizontal.small
  },
  pagination: {
    width: _themes.horizontal.small,
    height: _themes.horizontal.small,
    borderRadius: 25,
    marginHorizontal: _themes.horizontal.xSmall
  }
});

const Pagination = ({
  size,
  paginationIndex = 0,
  scrollToIndex,
  paginationDefaultColor = _themes.colors.gray,
  paginationActiveColor = _themes.colors.white,
  paginationStyle = {},
  paginationStyleItem = {},
  paginationStyleItemActive = {},
  paginationStyleItemInactive = {},
  onPaginationSelectedIndex,
  e2eID = ""
}) => {
  return /*#__PURE__*/_react.default.createElement(_reactNative.View, {
    style: [styles.container, paginationStyle]
  }, Array.from({
    length: size
  }).map((_, index) => /*#__PURE__*/_react.default.createElement(_reactNative.TouchableOpacity, {
    testID: "".concat(e2eID, "_pagination_").concat(index),
    style: [styles.pagination, paginationStyleItem, paginationIndex === index ? {
      backgroundColor: paginationActiveColor
    } : {
      backgroundColor: paginationDefaultColor
    }, paginationIndex === index ? paginationStyleItemActive : paginationStyleItemInactive],
    key: index,
    onPress: () => {
      scrollToIndex({
        index
      });
      onPaginationSelectedIndex === null || onPaginationSelectedIndex === void 0 ? void 0 : onPaginationSelectedIndex();
    }
  })));
};

exports.Pagination = Pagination;
//# sourceMappingURL=Pagination.js.map