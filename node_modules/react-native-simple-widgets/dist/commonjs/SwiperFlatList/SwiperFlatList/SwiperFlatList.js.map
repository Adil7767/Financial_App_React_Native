{"version":3,"sources":["SwiperFlatList.tsx"],"names":["MILLISECONDS","FIRST_INDEX","ITEM_VISIBLE_PERCENT_THRESHOLD","width","WIDTH","height","HEIGHT","Dimensions","get","SwiperFlatList","React","forwardRef","vertical","children","data","renderItem","renderAll","index","showPagination","PaginationComponent","Pagination","paginationActiveColor","paginationDefaultColor","paginationStyle","paginationStyleItem","paginationStyleItemActive","paginationStyleItemInactive","onPaginationSelectedIndex","autoplayDelay","autoplay","autoplayLoop","autoplayLoopKeepAnimation","autoplayInvertDirection","onChangeIndex","onMomentumScrollEnd","onViewableItemsChanged","viewabilityConfig","disableGesture","e2eID","props","ref","_data","_renderItem","Array","isArray","item","console","error","size","length","_initialNumToRender","currentIndexes","setCurrentIndexes","useState","prevIndex","ignoreOnMomentumScrollEnd","setIgnoreOnMomentumScrollEnd","flatListElement","useRef","scrollEnabled","setScrollEnabled","_onChangeIndex","useCallback","_index","_prevIndex","_scrollToIndex","params","extra","indexToScroll","animated","newParams","next","prevState","useOnChangeIndex","current","scrollToIndex","useEffect","useImperativeHandle","getCurrentIndex","getPrevIndex","goToLastIndex","goToFirstIndex","isLastIndexEnd","shouldContinuoWithAutoplay","autoplayTimer","setTimeout","nextIncrement","nextIndex","animate","clearTimeout","_onMomentumScrollEnd","event","_onViewableItemsChanged","useMemo","changed","newItem","undefined","isViewable","keyExtractor","_item","toString","onScrollToIndexFailed","info","flatListProps","horizontal","showsHorizontalScrollIndicator","showsVerticalScrollIndicator","pagingEnabled","initialNumToRender","initialScrollIndex","minimumViewTime","itemVisiblePercentThreshold","testID","Platform","OS","getItemLayout","ITEM_DIMENSION","__data","ItemIndex","offset","dataSet","scrollToIndexForPagination","paginationProps","paginationIndex"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { FlatList, FlatListProps, Platform, Dimensions } from \"react-native\";\r\n\r\nimport { Pagination } from \"../Pagination/Pagination\";\r\nimport { SwiperFlatListProps, SwiperFlatListRefProps } from \"./SwiperFlatListProps\";\r\n\r\nconst MILLISECONDS = 1000;\r\nconst FIRST_INDEX = 0;\r\nconst ITEM_VISIBLE_PERCENT_THRESHOLD = 60;\r\n\r\n// TODO: figure out how to use forwardRef with generics\r\ntype T1 = any;\r\ntype ScrollToIndex = { index: number; animated?: boolean };\r\ntype ScrollToIndexInternal = { useOnChangeIndex: boolean };\r\n\r\nconst { width: WIDTH, height: HEIGHT } = Dimensions.get(\"window\");\r\n\r\n// const SwiperFlatList = React.forwardRef<RefProps, SwiperFlatListProps<SwiperType>>(\r\nexport const SwiperFlatList = React.forwardRef(\r\n    // <T1 extends any>(\r\n    (\r\n        {\r\n            vertical = false,\r\n            children,\r\n            data = [],\r\n            renderItem,\r\n            renderAll = false,\r\n            index = FIRST_INDEX,\r\n            // Pagination\r\n            showPagination = false,\r\n            PaginationComponent = Pagination,\r\n            paginationActiveColor,\r\n            paginationDefaultColor,\r\n            paginationStyle,\r\n            paginationStyleItem,\r\n            paginationStyleItemActive,\r\n            paginationStyleItemInactive,\r\n            onPaginationSelectedIndex,\r\n            // Autoplay\r\n            autoplayDelay = 3,\r\n            autoplay = false,\r\n            autoplayLoop = false,\r\n            autoplayLoopKeepAnimation = false,\r\n            autoplayInvertDirection = false,\r\n            // Functions\r\n            onChangeIndex,\r\n            onMomentumScrollEnd,\r\n            onViewableItemsChanged,\r\n            viewabilityConfig = {},\r\n            disableGesture = false,\r\n            e2eID,\r\n            ...props\r\n        }: SwiperFlatListProps<T1>,\r\n        ref: React.Ref<SwiperFlatListRefProps>,\r\n    ) => {\r\n        let _data: unknown[] = [];\r\n        let _renderItem: FlatListProps<any>[\"renderItem\"];\r\n\r\n        if (children) {\r\n            // github.com/gusgard/react-native-swiper-flatlist/issues/40\r\n            _data = Array.isArray(children) ? children : [children];\r\n            _renderItem = ({ item }) => item;\r\n        } else if (data) {\r\n            _data = data;\r\n            _renderItem = renderItem;\r\n        } else {\r\n            console.error(\"Invalid props, `data` or `children` is required\");\r\n        }\r\n        const size = _data.length;\r\n        // Items to render in the initial batch.\r\n        const _initialNumToRender = renderAll ? size : 1;\r\n        const [currentIndexes, setCurrentIndexes] = React.useState({ index, prevIndex: index });\r\n        const [ignoreOnMomentumScrollEnd, setIgnoreOnMomentumScrollEnd] = React.useState(false);\r\n        const flatListElement = React.useRef<FlatList<unknown>>(null);\r\n        const [scrollEnabled, setScrollEnabled] = React.useState(!disableGesture);\r\n\r\n        const _onChangeIndex = React.useCallback(\r\n            ({ index: _index, prevIndex: _prevIndex }) => {\r\n                if (_index !== _prevIndex) {\r\n                    onChangeIndex?.({ index: _index, prevIndex: _prevIndex });\r\n                }\r\n            },\r\n            [onChangeIndex],\r\n        );\r\n\r\n        const _scrollToIndex = (params: ScrollToIndex, extra: ScrollToIndexInternal) => {\r\n            const { index: indexToScroll, animated = true } = params;\r\n            const newParams = { animated, index: indexToScroll };\r\n\r\n            setIgnoreOnMomentumScrollEnd(true);\r\n\r\n            const next = {\r\n                index: indexToScroll,\r\n                prevIndex: currentIndexes.index,\r\n            };\r\n            if (currentIndexes.index !== next.index && currentIndexes.prevIndex !== next.prevIndex) {\r\n                setCurrentIndexes({ index: next.index, prevIndex: next.prevIndex });\r\n            } else if (currentIndexes.index !== next.index) {\r\n                setCurrentIndexes((prevState) => ({ ...prevState, index: next.index }));\r\n            } else if (currentIndexes.prevIndex !== next.prevIndex) {\r\n                setCurrentIndexes((prevState) => ({ ...prevState, prevIndex: next.prevIndex }));\r\n            }\r\n\r\n            if (extra.useOnChangeIndex) {\r\n                _onChangeIndex({ index: next.index, prevIndex: next.prevIndex });\r\n            }\r\n\r\n            // When execute \"scrollToIndex\", we ignore the method \"onMomentumScrollEnd\"\r\n            // because it not working on Android\r\n            // https://github.com/facebook/react-native/issues/21718\r\n            flatListElement?.current?.scrollToIndex(newParams);\r\n        };\r\n\r\n        // change the index when the user swipe the items\r\n        React.useEffect(() => {\r\n            _onChangeIndex({ index: currentIndexes.index, prevIndex: currentIndexes.prevIndex });\r\n        }, [currentIndexes.index]);\r\n\r\n        React.useImperativeHandle(ref, () => ({\r\n            scrollToIndex: (item: ScrollToIndex) => {\r\n                setScrollEnabled(true);\r\n                _scrollToIndex(item, { useOnChangeIndex: true });\r\n                setScrollEnabled(!disableGesture);\r\n            },\r\n            getCurrentIndex: () => currentIndexes.index,\r\n            getPrevIndex: () => currentIndexes.prevIndex,\r\n            goToLastIndex: () => {\r\n                setScrollEnabled(true);\r\n                _scrollToIndex({ index: size - 1 }, { useOnChangeIndex: false });\r\n                setScrollEnabled(!disableGesture);\r\n            },\r\n            goToFirstIndex: () => {\r\n                setScrollEnabled(true);\r\n                _scrollToIndex({ index: FIRST_INDEX }, { useOnChangeIndex: false });\r\n                setScrollEnabled(!disableGesture);\r\n            },\r\n        }));\r\n\r\n        React.useEffect(() => {\r\n            const isLastIndexEnd = autoplayInvertDirection\r\n                ? currentIndexes.index === FIRST_INDEX\r\n                : currentIndexes.index === _data.length - 1;\r\n            const shouldContinuoWithAutoplay = autoplay && !isLastIndexEnd;\r\n            let autoplayTimer: ReturnType<typeof setTimeout>;\r\n            if (shouldContinuoWithAutoplay || autoplayLoop) {\r\n                autoplayTimer = setTimeout(() => {\r\n                    if (_data.length < 1) {\r\n                        // avoid nextIndex being set to NaN\r\n                        return;\r\n                    }\r\n\r\n                    const nextIncrement = autoplayInvertDirection ? -1 : +1;\r\n\r\n                    let nextIndex = (currentIndexes.index + nextIncrement) % _data.length;\r\n                    if (autoplayInvertDirection && nextIndex < FIRST_INDEX) {\r\n                        nextIndex = _data.length - 1;\r\n                    }\r\n\r\n                    // Disable end loop animation unless `autoplayLoopKeepAnimation` prop configured\r\n                    const animate = !isLastIndexEnd || autoplayLoopKeepAnimation;\r\n\r\n                    _scrollToIndex({ index: nextIndex, animated: animate }, { useOnChangeIndex: true });\r\n                }, autoplayDelay * MILLISECONDS);\r\n            }\r\n            // https://upmostly.com/tutorials/settimeout-in-react-components-using-hooks\r\n            return () => clearTimeout(autoplayTimer);\r\n        }, [currentIndexes.index]);\r\n\r\n        const _onMomentumScrollEnd: FlatListProps<unknown>[\"onMomentumScrollEnd\"] = (event) => {\r\n            // NOTE: Method not executed when call \"flatListElement?.current?.scrollToIndex\"\r\n            if (ignoreOnMomentumScrollEnd) {\r\n                setIgnoreOnMomentumScrollEnd(false);\r\n                return;\r\n            }\r\n\r\n            onMomentumScrollEnd?.({ index: currentIndexes.index }, event);\r\n        };\r\n\r\n        const _onViewableItemsChanged = React.useMemo<FlatListProps<unknown>[\"onViewableItemsChanged\"]>(\r\n            () => (params) => {\r\n                const { changed } = params;\r\n                const newItem = changed?.[FIRST_INDEX];\r\n                if (newItem !== undefined) {\r\n                    const nextIndex = newItem.index as number;\r\n                    if (newItem.isViewable) {\r\n                        setCurrentIndexes((prevState) => ({ ...prevState, index: nextIndex }));\r\n                    } else {\r\n                        setCurrentIndexes((prevState) => ({ ...prevState, prevIndex: nextIndex }));\r\n                    }\r\n                }\r\n                onViewableItemsChanged?.(params);\r\n            },\r\n            [],\r\n        );\r\n\r\n        const keyExtractor: FlatListProps<unknown>[\"keyExtractor\"] = (_item, _index) =>\r\n            _index.toString();\r\n        const onScrollToIndexFailed: FlatListProps<unknown>[\"onScrollToIndexFailed\"] = (info) =>\r\n            setTimeout(() =>\r\n                _scrollToIndex({ index: info.index, animated: false }, { useOnChangeIndex: true }),\r\n            );\r\n\r\n        const flatListProps = {\r\n            scrollEnabled,\r\n            ref: flatListElement,\r\n            keyExtractor,\r\n            horizontal: !vertical,\r\n            showsHorizontalScrollIndicator: false,\r\n            showsVerticalScrollIndicator: false,\r\n            pagingEnabled: true,\r\n            ...props,\r\n            onMomentumScrollEnd: _onMomentumScrollEnd,\r\n            onScrollToIndexFailed: onScrollToIndexFailed,\r\n            data: _data,\r\n            renderItem: _renderItem,\r\n            initialNumToRender: _initialNumToRender,\r\n            initialScrollIndex: index, // used with onScrollToIndexFailed\r\n            viewabilityConfig: {\r\n                // https://facebook.github.io/react-native/docs/flatlist#minimumviewtime\r\n                minimumViewTime: 200,\r\n                itemVisiblePercentThreshold: ITEM_VISIBLE_PERCENT_THRESHOLD,\r\n                ...viewabilityConfig,\r\n            },\r\n            onViewableItemsChanged: _onViewableItemsChanged,\r\n            // debug: true, // for debug\r\n            testID: e2eID,\r\n        };\r\n\r\n        if (Platform.OS === \"web\") {\r\n            if (props.getItemLayout === undefined) {\r\n                // NOTE: should we pass height/width for getItemLayout?\r\n                const ITEM_DIMENSION = vertical ? HEIGHT : WIDTH;\r\n                flatListProps.getItemLayout = (__data, ItemIndex: number) => {\r\n                    return {\r\n                        length: ITEM_DIMENSION,\r\n                        offset: ITEM_DIMENSION * ItemIndex,\r\n                        index: ItemIndex,\r\n                    };\r\n                };\r\n            }\r\n\r\n            (flatListProps as any).dataSet = { \"paging-enabled-fix\": true };\r\n        }\r\n\r\n        const scrollToIndexForPagination = (params: ScrollToIndex) => {\r\n            _scrollToIndex(params, { useOnChangeIndex: false });\r\n        };\r\n\r\n        const paginationProps = {\r\n            size,\r\n            paginationIndex: currentIndexes.index,\r\n            scrollToIndex: scrollToIndexForPagination,\r\n            paginationActiveColor,\r\n            paginationDefaultColor,\r\n            paginationStyle,\r\n            paginationStyleItem,\r\n            paginationStyleItemActive,\r\n            paginationStyleItemInactive,\r\n            onPaginationSelectedIndex,\r\n            e2eID,\r\n        };\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <FlatList {...flatListProps} />\r\n                {showPagination && <PaginationComponent {...paginationProps} />}\r\n            </React.Fragment>\r\n        );\r\n    },\r\n);\r\n\r\n// https://gist.github.com/Venryx/7cff24b17867da305fff12c6f8ef6f96\r\ntype Handle<T> = T extends React.ForwardRefExoticComponent<React.RefAttributes<infer T2>>\r\n    ? T2\r\n    : never;\r\nexport type SwiperFlatList = Handle<typeof SwiperFlatList>;\r\n"]}