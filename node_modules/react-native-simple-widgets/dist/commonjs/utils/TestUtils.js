"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.testHook = exports.render = exports.renderWithProvider = exports.shallow = exports.shallowWithProvider = void 0;

var _styledComponents = require("styled-components");

var _reactNativeTestingLibrary = require("react-native-testing-library");

var _enzyme = require("enzyme");

var _propTypes = require("prop-types");

const ProviderWrapper = ({
  children
}) => /*#__PURE__*/React.createElement(_styledComponents.ThemeProvider, {
  theme: {}
}, children);

ProviderWrapper.propTypes = {
  children: (0, _propTypes.oneOfType)([_propTypes.element, (0, _propTypes.arrayOf)(_propTypes.element)])
};

const shallowWithProvider = (component, options) => {
  return (0, _enzyme.shallow)(component, {
    wrappingComponent: ProviderWrapper,
    ...options
  });
};

exports.shallow = exports.shallowWithProvider = shallowWithProvider;

const renderWithProvider = (component, options) => {
  return (0, _reactNativeTestingLibrary.render)(component, {
    wrapper: ProviderWrapper,
    ...options
  });
}; // Hooks can only be called from a functional component or from other hooks


exports.render = exports.renderWithProvider = renderWithProvider;

const TestHook = ({
  hook
}) => {
  hook();
  return null;
};

const testHook = targetHook => {
  (0, _enzyme.shallow)( /*#__PURE__*/React.createElement(TestHook, {
    hook: targetHook
  }));
};

exports.testHook = testHook;
//# sourceMappingURL=TestUtils.js.map