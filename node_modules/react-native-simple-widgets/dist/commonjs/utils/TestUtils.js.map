{"version":3,"sources":["TestUtils.tsx"],"names":["ProviderWrapper","children","propTypes","element","shallowWithProvider","component","options","wrappingComponent","renderWithProvider","wrapper","TestHook","hook","testHook","targetHook"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA,MAAMA,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,kBACpB,oBAAC,+BAAD;AAAe,EAAA,KAAK,EAAE;AAAtB,GAAkCA,QAAlC,CADJ;;AAIAD,eAAe,CAACE,SAAhB,GAA4B;AACxBD,EAAAA,QAAQ,EAAE,0BAAU,CAACE,kBAAD,EAAU,wBAAQA,kBAAR,CAAV,CAAV;AADc,CAA5B;;AAIO,MAAMC,mBAAmB,GAAG,CAACC,SAAD,EAAYC,OAAZ,KAAwB;AACvD,SAAO,qBAAQD,SAAR,EAAmB;AACtBE,IAAAA,iBAAiB,EAAEP,eADG;AAEtB,OAAGM;AAFmB,GAAnB,CAAP;AAIH,CALM;;;;AAOA,MAAME,kBAAkB,GAAG,CAACH,SAAD,EAAYC,OAAZ,KAAyB;AACvD,SAAO,uCAAOD,SAAP,EAAkB;AACrBI,IAAAA,OAAO,EAAET,eADY;AAErB,OAAGM;AAFkB,GAAlB,CAAP;AAIH,CALM,C,CAOP;;;;;AACA,MAAMI,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC3BA,EAAAA,IAAI;AACJ,SAAO,IAAP;AACH,CAHD;;AAKO,MAAMC,QAAQ,GAAGC,UAAU,IAAI;AAClC,qCAAQ,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEA;AAAhB,IAAR;AACH,CAFM","sourcesContent":["import { ThemeProvider } from \"styled-components\";\nimport { render } from \"react-native-testing-library\";\nimport { shallow } from \"enzyme\";\nimport { oneOfType, element, arrayOf } from \"prop-types\";\n\nconst ProviderWrapper = ({ children }) => (\n    <ThemeProvider theme={{} as any}>{children}</ThemeProvider>\n);\n\nProviderWrapper.propTypes = {\n    children: oneOfType([element, arrayOf(element)]),\n};\n\nexport const shallowWithProvider = (component, options) => {\n    return shallow(component, {\n        wrappingComponent: ProviderWrapper,\n        ...options,\n    });\n};\n\nexport const renderWithProvider = (component, options?) => {\n    return render(component, {\n        wrapper: ProviderWrapper,\n        ...options,\n    });\n};\n\n// Hooks can only be called from a functional component or from other hooks\nconst TestHook = ({ hook }) => {\n    hook();\n    return null;\n};\n\nexport const testHook = targetHook => {\n    shallow(<TestHook hook={targetHook} />);\n};\n\nexport { shallowWithProvider as shallow, renderWithProvider as render };\n"]}