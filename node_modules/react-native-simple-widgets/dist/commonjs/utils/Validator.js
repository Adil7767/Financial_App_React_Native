"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ImageURLRegex = exports.AlphanumericExtended = exports.Alphanumeric = exports.EnglishAlphabetsAndWhiteSpace = exports.NumberRegex = exports.MultipleEmailRegex = exports.EmailRegex = exports.default = void 0;

var _DatetimeUtils = require("./DatetimeUtils");

const EmailMaxLength = 64;
const validators = {
  required: value => !!value,
  maxLength: (value, rule) => value ? value.length <= rule.value : true,
  minLength: (value, rule) => value ? value.length >= rule.value : false,
  pattern: (value, rule) => rule.value.test(value),
  patternOptional: (value, rule) => value === "" ? true : rule.value.test(value),
  maximumDate: (value, rule) => value && rule.value ? (0, _DatetimeUtils.compareTime)(rule.value, (0, _DatetimeUtils.parseFormDay)(value, rule.format)) > -1 : true,
  minimumDate: (value, rule) => value && rule.value ? (0, _DatetimeUtils.compareTime)(rule.value, (0, _DatetimeUtils.parseFormDay)(value, rule.format)) < 1 : true,
  dateValid: (value, rule) => value ? (0, _DatetimeUtils.isValidTime)(value, rule.format) : true,
  emailLength: value => {
    if (!value) return true;
    const values = value.split("@");
    return !(values[0].length > EmailMaxLength || values.length > 1 && values[1].length > EmailMaxLength);
  },
  maxNumberOfEmail: (value, rule) => {
    if (!value) return true;
    const values = value.split(",");
    return values.length <= rule.value;
  }
};
var _default = validators; // @ts-ignore

exports.default = _default;
const EmailRegex = /^(?=.{1,64}@)(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@(?!.{65})(((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,})))$/; // @ts-ignore

exports.EmailRegex = EmailRegex;
const MultipleEmailRegex = /^(([a-zA-Z0-9_\-.]+)@([a-zA-Z0-9_\-.]+)\.([a-zA-Z]{2,5}){1,25})+([,.](([a-zA-Z0-9_\-.]+)@([a-zA-Z0-9_\-.]+)\.([a-zA-Z]{2,5}){1,25})+)*$/; // @ts-ignore

exports.MultipleEmailRegex = MultipleEmailRegex;
const NumberRegex = /^[0-9]+$/; // @ts-ignore

exports.NumberRegex = NumberRegex;
const EnglishAlphabetsAndWhiteSpace = /^[A-Za-z ]+$/; // @ts-ignore

exports.EnglishAlphabetsAndWhiteSpace = EnglishAlphabetsAndWhiteSpace;
const Alphanumeric = /^[A-Za-z0-9]+$/; // @ts-ignore

exports.Alphanumeric = Alphanumeric;
const AlphanumericExtended = /^[A-Za-z .,@]+$/; // @ts-ignore

exports.AlphanumericExtended = AlphanumericExtended;
const ImageURLRegex = /^(http(s?):).*\.(?:jp(e?)g|jpg|gif|png)/gi;
exports.ImageURLRegex = ImageURLRegex;
//# sourceMappingURL=Validator.js.map