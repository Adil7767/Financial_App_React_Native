"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _Popup = _interopRequireDefault(require("../../SelectPicker/mweb/Popup"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class PopupDatePicker extends React.Component {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "onOk", v => {
      const {
        onChange,
        onOk
      } = this.props;

      if (onChange) {
        onChange(v);
      }

      if (onOk) {
        onOk(v);
      }
    });
  }

  render() {
    return /*#__PURE__*/React.createElement(_Popup.default, _extends({
      picker: this.props.datePicker,
      value: this.props.date
    }, this.props, {
      onOk: this.onOk
    }));
  }

}

_defineProperty(PopupDatePicker, "defaultProps", {
  pickerValueProp: "date",
  pickerValueChangeProp: "onDateChange"
});

var _default = PopupDatePicker;
exports.default = _default;
//# sourceMappingURL=Popup.js.map