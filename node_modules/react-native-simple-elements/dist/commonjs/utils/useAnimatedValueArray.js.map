{"version":3,"sources":["useAnimatedValueArray.tsx"],"names":["useAnimatedValueArray","initialValues","refs","React","useRef","current","length","forEach","initialValue","i","Animated","Value"],"mappings":";;;;;;;AAAA;;AACA;;;;;;AAEe,SAASA,qBAAT,CAA+BC,aAA/B,EAAwD;AACnE,QAAMC,IAAI,GAAGC,KAAK,CAACC,MAAN,CAA+B,EAA/B,CAAb;AAEAF,EAAAA,IAAI,CAACG,OAAL,CAAaC,MAAb,GAAsBL,aAAa,CAACK,MAApC;AACAL,EAAAA,aAAa,CAACM,OAAd,CAAsB,CAACC,YAAD,EAAeC,CAAf,KAAqB;AAAA;;AACvCP,IAAAA,IAAI,CAACG,OAAL,CAAaI,CAAb,uBAAkBP,IAAI,CAACG,OAAL,CAAaI,CAAb,CAAlB,6DAAqC,IAAIC,sBAASC,KAAb,CAAmBH,YAAnB,CAArC;AACH,GAFD;AAIA,SAAON,IAAI,CAACG,OAAZ;AACH","sourcesContent":["import * as React from \"react\";\r\nimport { Animated } from \"react-native\";\r\n\r\nexport default function useAnimatedValueArray(initialValues: number[]) {\r\n    const refs = React.useRef<Animated.Value[]>([]);\r\n\r\n    refs.current.length = initialValues.length;\r\n    initialValues.forEach((initialValue, i) => {\r\n        refs.current[i] = refs.current[i] ?? new Animated.Value(initialValue);\r\n    });\r\n\r\n    return refs.current;\r\n}\r\n"]}