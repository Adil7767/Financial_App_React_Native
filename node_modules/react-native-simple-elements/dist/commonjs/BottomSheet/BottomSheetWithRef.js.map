{"version":3,"sources":["BottomSheetWithRef.tsx"],"names":["defaultProps","translations","confirmText","BottomSheetWithRef","innerRef","children","title","rest","visible","setVisible","React","useState","optionsRef","useRef","useImperativeHandle","open","options","current","onConfirm","onCancel","close","_handleConfirm","_handleDismiss","CloseIcon","alignItems"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;AAkBA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAE;AACVC,IAAAA,WAAW,EAAE;AADH;AADG,CAArB;;AAMA,MAAMC,kBAAkB,GAAG,CAAC;AACxBC,EAAAA,QADwB;AAExBC,EAAAA,QAFwB;AAGxBC,EAAAA,KAHwB;AAIxBL,EAAAA,YAJwB;AAKxB,KAAGM;AALqB,CAAD,KAMd;AAET,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0BC,KAAK,CAACC,QAAN,CAAe,KAAf,CAAhC;AACA,QAAMC,UAAU,GAAGF,KAAK,CAACG,MAAN,CAAa,EAAb,CAAnB;AAEAH,EAAAA,KAAK,CAACI,mBAAN,CAA0BV,QAA1B,EAAoC,OAAO;AACvCW,IAAAA,IAAI,EAAGC,OAAD,IAAa;AACfJ,MAAAA,UAAU,CAACK,OAAX,GAAqB;AACjBC,QAAAA,SAAS,EAAEF,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEE,SADH;AAEjBC,QAAAA,QAAQ,EAAEH,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEG;AAFF,OAArB;AAIAV,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KAPsC;AAQvCW,IAAAA,KAAK,EAAE,MAAM;AACTX,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AAVsC,GAAP,CAApC;;AAaA,QAAMY,cAAc,GAAG,MAAM;AACzB,QAAIT,UAAU,IAAIA,UAAU,CAACK,OAAzB,IAAoCL,UAAU,CAACK,OAAX,CAAmBC,SAA3D,EAAsE;AAClEN,MAAAA,UAAU,CAACK,OAAX,CAAmBC,SAAnB;AACH;;AACDd,IAAAA,QAAQ,CAACa,OAAT,CAAiBG,KAAjB;AACH,GALD;;AAOA,QAAME,cAAc,GAAG,MAAM;AACzBlB,IAAAA,QAAQ,CAACa,OAAT,CAAiBG,KAAjB;AACH,GAFD;;AAIA,sBACI,oBAAC,oBAAD;AACI,IAAA,OAAO,EAAEZ,OADb;AAEI,IAAA,SAAS,EAAEc;AAFf,KAGQf,IAHR,gBAKI,oBAAC,gBAAD,qBACI,oBAAC,mBAAD;AACI,IAAA,KAAK,EAAED,KADX;AAEI,IAAA,IAAI,EAAE,mBACF,oBAAC,mBAAD;AACI,MAAA,IAAI,EAAEiB,cADV;AAEI,MAAA,OAAO,EAAED;AAFb,MAHR;AAQI,IAAA,KAAK,EAAE,mBACH,oBAAC,eAAD;AACI,MAAA,OAAO,EAAED;AADb,OAGKpB,YAAY,CAACC,WAHlB,CATR;AAeI,IAAA,QAAQ,EAAE;AACNsB,MAAAA,UAAU,EAAE;AADN;AAfd,IADJ,EAoBKnB,QApBL,CALJ,CADJ;AA8BH,CAjED;;AAmEAF,kBAAkB,CAACH,YAAnB,GAAkCA,YAAlC;eAEeG,kB","sourcesContent":["import * as React from \"react\";\r\nimport BottomSheet, { Props as BottomSheetProps} from \"./BottomSheet\";\r\nimport Surface from \"../Surface\";\r\nimport { FlexItem } from \"../Container\";\r\nimport CloseIcon from \"@mdi/svg/svg/close.svg\";\r\nimport IconButton from \"../IconButton\";\r\nimport Button from \"../Button\";\r\n\r\ntype RefProps = {\r\n    open: ({ onConfirm, onCancel }) => void,\r\n    close: () => void,\r\n}\r\n\r\ntype TranslationProps = {\r\n    cancelText: string,\r\n    confirmText: string,\r\n}\r\n\r\ntype Props = Omit<BottomSheetProps, \"visible\" | \"onDismiss\"> & {\r\n    innerRef: React.RefObject<RefProps>,\r\n    title?: string,\r\n    translations?: TranslationProps,\r\n};\r\n\r\nconst defaultProps = {\r\n    translations: {\r\n        confirmText: \"Done\",\r\n    },\r\n};\r\n\r\nconst BottomSheetWithRef = ({\r\n    innerRef,\r\n    children,\r\n    title,\r\n    translations,\r\n    ...rest\r\n}: Props) => {\r\n\r\n    const [ visible, setVisible ] = React.useState(false);\r\n    const optionsRef = React.useRef({} as any);\r\n\r\n    React.useImperativeHandle(innerRef, () => ({\r\n        open: (options) => {\r\n            optionsRef.current = {\r\n                onConfirm: options?.onConfirm,\r\n                onCancel: options?.onCancel,\r\n            };\r\n            setVisible(true);\r\n        },\r\n        close: () => {\r\n            setVisible(false);\r\n        },\r\n    }));\r\n\r\n    const _handleConfirm = () => {\r\n        if (optionsRef && optionsRef.current && optionsRef.current.onConfirm) {\r\n            optionsRef.current.onConfirm();\r\n        }\r\n        innerRef.current.close();\r\n    };\r\n\r\n    const _handleDismiss = () => {\r\n        innerRef.current.close();\r\n    };\r\n\r\n    return (\r\n        <BottomSheet\r\n            visible={visible}\r\n            onDismiss={_handleDismiss}\r\n            {...rest}\r\n        >\r\n            <Surface>\r\n                <FlexItem\r\n                    title={title}\r\n                    left={() => (\r\n                        <IconButton\r\n                            icon={CloseIcon}\r\n                            onPress={_handleDismiss}\r\n                        />\r\n                    )}\r\n                    right={() => (\r\n                        <Button\r\n                            onPress={_handleConfirm}\r\n                        >\r\n                            {translations.confirmText}\r\n                        </Button>\r\n                    )}\r\n                    rowStyle={{\r\n                        alignItems: \"center\",\r\n                    }}\r\n                />\r\n                {children}\r\n            </Surface>\r\n        </BottomSheet>\r\n    );\r\n};\r\n\r\nBottomSheetWithRef.defaultProps = defaultProps;\r\n\r\nexport default BottomSheetWithRef;\r\n"]}