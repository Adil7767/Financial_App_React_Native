"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const styles = _reactNative.StyleSheet.create({
  IconBadge: {
    position: "absolute",
    top: 1,
    right: 1,
    minWidth: 20,
    height: 20,
    borderRadius: 15,
    alignItems: "center",
    justifyContent: "center",
    backgroundColor: "#FF0000"
  }
});

class IconBadge extends React.PureComponent {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "state", {});
  }

  render() {
    const {
      MainViewStyle,
      MainElement,
      Hidden,
      IconBadgeStyle,
      BadgeElement
    } = this.props;
    return /*#__PURE__*/React.createElement(_reactNative.View, {
      style: [MainViewStyle || {}]
    }, MainElement, !Hidden && /*#__PURE__*/React.createElement(_reactNative.View, {
      style: [styles.IconBadge, IconBadgeStyle || {}]
    }, BadgeElement));
  }

}

exports.default = IconBadge;

_defineProperty(IconBadge, "defaultProps", {
  MainViewStyle: {},
  IconBadgeStyle: {},
  Hidden: true
});
//# sourceMappingURL=IconBadge.js.map