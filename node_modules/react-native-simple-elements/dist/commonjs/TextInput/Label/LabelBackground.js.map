{"version":3,"sources":["LabelBackground.tsx"],"names":["LabelBackground","parentState","labelProps","placeholderStyle","baseLabelTranslateX","topPosition","hasActiveOutline","label","backgroundColor","labelStyle","hasFocus","value","opacity","labeled","interpolate","inputRange","outputRange","labelTranslationX","transform","translateX","StyleSheet","absoluteFill","styles","view","outlinedLabel","top","scaleY","create","position","left","width","height","paddingHorizontal","color"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;;;;;;;AAIA,MAAMA,eAAe,GAAG,CAAC;AACrBC,EAAAA,WADqB;AAErBC,EAAAA,UAAU,EAAE;AACRC,IAAAA,gBADQ;AAERC,IAAAA,mBAFQ;AAGRC,IAAAA,WAHQ;AAIRC,IAAAA,gBAJQ;AAKRC,IAAAA,KALQ;AAMRC,IAAAA;AANQ,GAFS;AAUrBC,EAAAA;AAVqB,CAAD,KAWI;AACxB,QAAMC,QAAQ,GAAGJ,gBAAgB,IAAIL,WAAW,CAACU,KAAjD;AACA,QAAMC,OAAO,GAAGX,WAAW,CAACY,OAAZ,CAAoBC,WAApB,CAAgC;AAC5CC,IAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADgC;AAE5CC,IAAAA,WAAW,EAAE,CAACN,QAAQ,GAAG,CAAH,GAAO,CAAhB,EAAmB,CAAnB;AAF+B,GAAhC,CAAhB;AAKA,QAAMO,iBAAiB,GAAG;AACtBC,IAAAA,SAAS,EAAE,CACP;AACIC,MAAAA,UAAU,EAAElB,WAAW,CAACY,OAAZ,CAAoBC,WAApB,CAAgC;AACxCC,QAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CAD4B;AAExCC,QAAAA,WAAW,EAAE,CAAC,CAACZ,mBAAF,EAAuB,CAAvB;AAF2B,OAAhC;AADhB,KADO;AADW,GAA1B;AAWA,SAAOG,KAAK,GACN,cACE,oBAAC,qBAAD,CAAU,IAAV;AACI,IAAA,GAAG,EAAC,sBADR;AAEI,IAAA,aAAa,EAAC,MAFlB;AAGI,IAAA,KAAK,EAAE,CACHa,wBAAWC,YADR,EAEHC,MAAM,CAACC,IAFJ,EAGH;AACIf,MAAAA,eADJ;AAEII,MAAAA;AAFJ,KAHG,EAOHK,iBAPG;AAHX,IADF,eAcE,oBAAC,qBAAD;AACI,IAAA,GAAG,EAAC,sBADR;AAEI,IAAA,KAAK,EAAE,CACHd,gBADG,EAEHM,UAFG,EAGHa,MAAM,CAACE,aAHJ,EAIH;AACIC,MAAAA,GAAG,EAAEpB,WAAW,GAAG,CADvB;AAEIG,MAAAA,eAFJ;AAGII,MAAAA,OAHJ;AAIIM,MAAAA,SAAS,EAAE,CACP,GAAGT,UAAU,CAACS,SADP,EAEP;AACIQ,QAAAA,MAAM,EAAEzB,WAAW,CAACY,OAAZ,CAAoBC,WAApB,CAAgC;AACpCC,UAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CADwB;AAEpCC,UAAAA,WAAW,EAAE,CAAC,GAAD,EAAM,CAAN;AAFuB,SAAhC;AADZ,OAFO;AAJf,KAJG,CAFX;AAqBI,IAAA,aAAa,EAAE;AArBnB,KAuBKT,KAvBL,CAdF,CADM,GAyCN,IAzCN;AA0CH,CAvED;;eAyEeP,e;;;AAEf,MAAMsB,MAAM,GAAGF,wBAAWO,MAAX,CAAkB;AAC7BJ,EAAAA,IAAI,EAAE;AACFK,IAAAA,QAAQ,EAAE,UADR;AAEFH,IAAAA,GAAG,EAAE,CAFH;AAGFI,IAAAA,IAAI,EAAE,EAHJ;AAIFC,IAAAA,KAAK,EAAE,CAJL;AAKFC,IAAAA,MAAM,EAAE;AALN,GADuB;AAQ7BP,EAAAA,aAAa,EAAE;AACXI,IAAAA,QAAQ,EAAE,UADC;AAEXC,IAAAA,IAAI,EAAE,EAFK;AAGXG,IAAAA,iBAAiB,EAAE,CAHR;AAIXC,IAAAA,KAAK,EAAE;AAJI;AARc,CAAlB,CAAf","sourcesContent":["import * as React from \"react\";\r\nimport { Animated, StyleSheet } from \"react-native\";\r\n\r\nimport AnimatedText from \"../../Text/AnimatedText\";\r\n\r\nimport type { LabelBackgroundProps } from \"../types\";\r\n\r\nconst LabelBackground = ({\r\n    parentState,\r\n    labelProps: {\r\n        placeholderStyle,\r\n        baseLabelTranslateX,\r\n        topPosition,\r\n        hasActiveOutline,\r\n        label,\r\n        backgroundColor,\r\n    },\r\n    labelStyle,\r\n}: LabelBackgroundProps) => {\r\n    const hasFocus = hasActiveOutline || parentState.value;\r\n    const opacity = parentState.labeled.interpolate({\r\n        inputRange: [0, 1],\r\n        outputRange: [hasFocus ? 1 : 0, 0],\r\n    });\r\n\r\n    const labelTranslationX = {\r\n        transform: [\r\n            {\r\n                translateX: parentState.labeled.interpolate({\r\n                    inputRange: [0, 1],\r\n                    outputRange: [-baseLabelTranslateX, 0],\r\n                }),\r\n            },\r\n        ],\r\n    };\r\n\r\n    return label\r\n        ? [\r\n            <Animated.View\r\n                key=\"labelBackground-view\"\r\n                pointerEvents=\"none\"\r\n                style={[\r\n                    StyleSheet.absoluteFill,\r\n                    styles.view,\r\n                    {\r\n                        backgroundColor,\r\n                        opacity,\r\n                    },\r\n                    labelTranslationX,\r\n                ]}\r\n            />,\r\n            <AnimatedText\r\n                key=\"labelBackground-text\"\r\n                style={[\r\n                    placeholderStyle,\r\n                    labelStyle,\r\n                    styles.outlinedLabel,\r\n                    {\r\n                        top: topPosition + 1,\r\n                        backgroundColor,\r\n                        opacity,\r\n                        transform: [\r\n                            ...labelStyle.transform,\r\n                            {\r\n                                scaleY: parentState.labeled.interpolate({\r\n                                    inputRange: [0, 1],\r\n                                    outputRange: [0.2, 1],\r\n                                }),\r\n                            },\r\n                        ],\r\n                    },\r\n                ]}\r\n                numberOfLines={1}\r\n            >\r\n                {label}\r\n            </AnimatedText>,\r\n        ]\r\n        : null;\r\n};\r\n\r\nexport default LabelBackground;\r\n\r\nconst styles = StyleSheet.create({\r\n    view: {\r\n        position: \"absolute\",\r\n        top: 6,\r\n        left: 10,\r\n        width: 8,\r\n        height: 2,\r\n    },\r\n    outlinedLabel: {\r\n        position: \"absolute\",\r\n        left: 18,\r\n        paddingHorizontal: 0,\r\n        color: \"transparent\",\r\n    },\r\n});\r\n"]}