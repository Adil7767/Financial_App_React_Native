{"version":3,"sources":["AlertDialogWithRef.tsx"],"names":["defaultProps","mode","translations","confirmText","cancelText","AlertDialogWithRef","innerRef","children","title","message","dialogContentStyle","messageStyle","rest","visible","setVisible","React","useState","optionsRef","useRef","colors","useContext","ThemeContext","useImperativeHandle","open","options","current","onConfirm","onCancel","close","_handleConfirm","_handleDismiss","styles","errorMessage","color","error","StyleSheet","create","paddingHorizontal"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport {\r\n    StyleProp,\r\n    StyleSheet, TextStyle, ViewStyle,\r\n} from \"react-native\";\r\nimport AlertDialog, { Props as BottomSheetProps} from \"./AlertDialog\";\r\nimport Surface from \"../Surface\";\r\nimport { DialogTitle, DialogContent, DialogActions } from \"../Dialog\";\r\nimport Button from \"../Button\";\r\nimport { ThemeContext } from \"styled-components\";\r\nimport Text from \"../Text\";\r\n\r\ntype RefProps = {\r\n    close: () => void,\r\n}\r\n\r\ntype TranslationProps = {\r\n    cancelText: string,\r\n    confirmText: string,\r\n}\r\n\r\ntype Props = Omit<BottomSheetProps, \"visible\" | \"onDismiss\"> & {\r\n    innerRef: React.RefObject<RefProps>,\r\n    mode?: \"message\" | \"confirm\" | \"error\",\r\n    title?: string,\r\n    message?: string,\r\n    translations?: TranslationProps,\r\n    dialogContentStyle?: StyleProp<ViewStyle>,\r\n    messageStyle?: StyleProp<TextStyle>,\r\n};\r\n\r\nconst defaultProps = {\r\n    mode: \"message\",\r\n    translations: {\r\n        confirmText: \"Ok\",\r\n        cancelText: \"Cancel\",\r\n    },\r\n};\r\n\r\nconst AlertDialogWithRef = ({\r\n    innerRef,\r\n    children,\r\n    mode,\r\n    title,\r\n    message,\r\n    translations,\r\n    dialogContentStyle,\r\n    messageStyle,\r\n    ...rest\r\n}: Props) => {\r\n\r\n    const [ visible, setVisible ] = React.useState(false);\r\n    const optionsRef = React.useRef({} as any);\r\n\r\n    const { colors } = React.useContext(ThemeContext);\r\n\r\n    React.useImperativeHandle(innerRef, () => ({\r\n        open: (options) => {\r\n            optionsRef.current = {\r\n                onConfirm: options?.onConfirm,\r\n                onCancel: options?.onCancel,\r\n            };\r\n            setVisible(true);\r\n        },\r\n        close: () => {\r\n            setVisible(false);\r\n        },\r\n    }));\r\n\r\n    const _handleConfirm = () => {\r\n        if (optionsRef && optionsRef.current && optionsRef.current.onConfirm) {\r\n            optionsRef.current.onConfirm();\r\n        }\r\n        innerRef.current.close();\r\n    };\r\n\r\n    const _handleDismiss = () => {\r\n        innerRef.current.close();\r\n    };\r\n\r\n    return (\r\n        <AlertDialog\r\n            animationType={\"fade\"}\r\n            visible={visible}\r\n            onDismiss={_handleDismiss}\r\n            {...rest}\r\n        >\r\n            <Surface>\r\n                {title ?\r\n                    <DialogTitle>{title}</DialogTitle>\r\n                    :\r\n                    null\r\n                }\r\n                <DialogContent\r\n                    style={[\r\n                        styles.dialogContentStyle,\r\n                        dialogContentStyle,\r\n                    ]}\r\n                >\r\n                    {message ?\r\n                        <Text\r\n                            style={[\r\n                                mode === \"error\" && styles.errorMessage,\r\n                                mode === \"error\" && {\r\n                                    color: colors.error,\r\n                                },\r\n                                messageStyle,\r\n                            ]}\r\n                        >\r\n                            {message}\r\n                        </Text>\r\n                        :\r\n                        children\r\n                    }\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    {mode === \"confirm\" ?\r\n                        <Button\r\n                            onPress={_handleDismiss}\r\n                        >\r\n                            {translations?.cancelText}\r\n                        </Button>\r\n                        :\r\n                        null\r\n                    }\r\n                    <Button\r\n                        onPress={_handleConfirm}\r\n                    >\r\n                        {translations?.confirmText}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Surface>\r\n        </AlertDialog>\r\n    );\r\n};\r\n\r\nAlertDialogWithRef.defaultProps = defaultProps;\r\n\r\nexport default AlertDialogWithRef;\r\n\r\nconst styles = StyleSheet.create({\r\n    dialogContentStyle: {\r\n        paddingHorizontal: 16,\r\n    },\r\n    errorMessage: {\r\n    },\r\n});\r\n"]}