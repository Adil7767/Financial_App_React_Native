{"version":3,"sources":["Menu2.tsx"],"names":["SCREEN_INDENT","ANIMATION_DURATION","EASING","Easing","bezier","Menu","React","Component","rendered","props","visible","top","left","menuLayout","width","height","anchorLayout","opacityAnimation","Animated","Value","scaleAnimation","ValueXY","x","y","isValidElement","anchor","Promise","resolve","menu","measureInWindow","isAnchorCoord","show","hide","Platform","OS","global","el","isBrowser","node","focusableNode","querySelector","focus","onDismiss","e","key","BackHandler","addEventListener","handleDismiss","Dimensions","document","handleKeypress","removeEventListener","theme","context","windowLayout","get","all","measureMenuLayout","measureAnchorLayout","requestAnimationFrame","setState","attachListeners","animation","parallel","timing","state","toValue","duration","scale","easing","useNativeDriver","start","finished","focusFirstDOMNode","removeListeners","setValue","getDerivedStateFromProps","nextProps","prevState","componentDidUpdate","prevProps","updateVisibility","componentWillUnmount","render","contentStyle","style","children","statusBarHeight","overlayAccessibilityLabel","additionalVerticalValue","select","android","default","scaleTransforms","scaleX","interpolate","inputRange","outputRange","scaleY","positionTransforms","push","translateX","right","scrollableMenuHeight","translateY","bottom","shadowMenuContainerStyle","opacity","transform","borderRadius","roundness","positionStyle","I18nManager","isRTL","ref","StyleSheet","absoluteFill","styles","wrapper","shadowMenuContainer","MenuItem","APPROX_STATUSBAR_HEIGHT","ThemeContext","create","position","paddingVertical","elevation"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport {\r\n    Platform,\r\n    StyleProp,\r\n    StyleSheet,\r\n    Animated,\r\n    BackHandler,\r\n    Dimensions,\r\n    Easing,\r\n    I18nManager,\r\n    LayoutRectangle,\r\n    TouchableWithoutFeedback,\r\n    View,\r\n    ViewStyle,\r\n    ScrollView,\r\n    findNodeHandle,\r\n} from \"react-native\";\r\n\r\nimport { $Omit } from \"../types\";\r\nimport Modal from \"../Modal\";\r\nimport Surface from \"../Surface\";\r\nimport MenuItem from \"./MenuItem\";\r\nimport { APPROX_STATUSBAR_HEIGHT } from \"../theme/constants\";\r\nimport { DefaultTheme, ThemeContext } from \"styled-components\";\r\n\r\ntype Props = {\r\n    /**\r\n     * Whether the Menu is currently visible.\r\n     */\r\n    visible: boolean;\r\n    /**\r\n     * The anchor to open the menu from. In most cases, it will be a button that opens the menu.\r\n     */\r\n    anchor: React.ReactNode | { x: number; y: number };\r\n    /**\r\n     * Extra margin to add at the top of the menu to account for translucent status bar on Android.\r\n     * If you are using Expo, we assume translucent status bar and set a height for status bar automatically.\r\n     * Pass `0` or a custom value to and customize it.\r\n     * This is automatically handled on iOS.\r\n     */\r\n    statusBarHeight?: number;\r\n    /**\r\n     * Callback called when Menu is dismissed. The `visible` prop needs to be updated when this is called.\r\n     */\r\n    onDismiss: () => void;\r\n    /**\r\n     * Accessibility label for the overlay. This is read by the screen reader when the user taps outside the menu.\r\n     */\r\n    overlayAccessibilityLabel?: string;\r\n    /**\r\n     * Content of the `Menu`.\r\n     */\r\n    children: React.ReactNode;\r\n    /**\r\n     * Style of menu's inner content.\r\n     */\r\n    contentStyle?: StyleProp<ViewStyle>;\r\n    style?: StyleProp<ViewStyle>;\r\n    /**\r\n     * @optional\r\n     */\r\n    theme?: DefaultTheme;\r\n};\r\n\r\ntype Layout = $Omit<$Omit<LayoutRectangle, \"x\">, \"y\">;\r\n\r\ntype State = {\r\n    rendered: boolean;\r\n    top: number;\r\n    left: number;\r\n    menuLayout: Layout;\r\n    anchorLayout: Layout;\r\n    opacityAnimation: Animated.Value;\r\n    scaleAnimation: Animated.ValueXY;\r\n};\r\n\r\n// Minimum padding between the edge of the screen and the menu\r\nconst SCREEN_INDENT = 8;\r\n// From https://material.io/design/motion/speed.html#duration\r\nconst ANIMATION_DURATION = 250;\r\n// From the 'Standard easing' section of https://material.io/design/motion/speed.html#easing\r\nconst EASING = Easing.bezier(0.4, 0, 0.2, 1);\r\n\r\n/**\r\n * Menus display a list of choices on temporary elevated surfaces. Their placement varies based on the element that opens them.\r\n *\r\n *  <div class=\"screenshots\">\r\n *   <img class=\"medium\" src=\"screenshots/menu-1.png\" />\r\n *   <img class=\"medium\" src=\"screenshots/menu-2.png\" />\r\n * </div>\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { View } from 'react-native';\r\n * import Button from 'react-native-simple-elements/components/Button';\r\n * import Menu from 'react-native-simple-elements/components/Menu';\r\n * import Divider from 'react-native-simple-elements/components/Divider';\r\n * import Provider from 'react-native-simple-elements/components/theme/Provider';\r\n *\r\n * const MyComponent = () => {\r\n *   const [visible, setVisible] = React.useState(false);\r\n *\r\n *   const openMenu = () => setVisible(true);\r\n *\r\n *   const closeMenu = () => setVisible(false);\r\n *\r\n *   return (\r\n *     <Provider>\r\n *       <View\r\n *         style={{\r\n *           paddingTop: 50,\r\n *           flexDirection: 'row',\r\n *           justifyContent: 'center',\r\n *         }}>\r\n *         <Menu\r\n *           visible={visible}\r\n *           onDismiss={closeMenu}\r\n *           anchor={<Button onPress={openMenu}>Show menu</Button>}>\r\n *           <Menu.Item onPress={() => {}} title=\"Item 1\" />\r\n *           <Menu.Item onPress={() => {}} title=\"Item 2\" />\r\n *           <Divider />\r\n *           <Menu.Item onPress={() => {}} title=\"Item 3\" />\r\n *         </Menu>\r\n *       </View>\r\n *     </Provider>\r\n *   );\r\n * };\r\n *\r\n * export default MyComponent;\r\n * ```\r\n */\r\nclass Menu extends React.Component<Props, State> {\r\n    // @component ./MenuItem.tsx\r\n    static Item = MenuItem;\r\n\r\n    static defaultProps = {\r\n        statusBarHeight: APPROX_STATUSBAR_HEIGHT,\r\n        overlayAccessibilityLabel: \"Close menu\",\r\n    };\r\n\r\n    static contextType: any = ThemeContext;\r\n\r\n    static getDerivedStateFromProps(nextProps: Props, prevState: State) {\r\n        if (nextProps.visible && !prevState.rendered) {\r\n            return { rendered: true };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    state = {\r\n        rendered: this.props.visible,\r\n        top: 0,\r\n        left: 0,\r\n        menuLayout: { width: 0, height: 0 },\r\n        anchorLayout: { width: 0, height: 0 },\r\n        opacityAnimation: new Animated.Value(0),\r\n        scaleAnimation: new Animated.ValueXY({ x: 0, y: 0 }),\r\n    };\r\n\r\n    componentDidUpdate(prevProps: Props) {\r\n        if (prevProps.visible !== this.props.visible) {\r\n            this.updateVisibility();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.removeListeners();\r\n    }\r\n\r\n    private anchor?: View | null = null;\r\n    private menu?: View | null = null;\r\n\r\n    private isAnchorCoord = () => !React.isValidElement(this.props.anchor);\r\n\r\n    private measureMenuLayout = () =>\r\n        new Promise<LayoutRectangle>((resolve) => {\r\n            if (this.menu) {\r\n                this.menu.measureInWindow((x, y, width, height) => {\r\n                    resolve({ x, y, width, height });\r\n                });\r\n            }\r\n        });\r\n\r\n    private measureAnchorLayout = () =>\r\n        new Promise<LayoutRectangle>((resolve) => {\r\n            const { anchor } = this.props;\r\n            if (this.isAnchorCoord()) {\r\n                // @ts-ignore\r\n                resolve({ x: anchor.x, y: anchor.y, width: 0, height: 0 });\r\n                return;\r\n            }\r\n\r\n            if (this.anchor) {\r\n                this.anchor.measureInWindow((x, y, width, height) => {\r\n                    resolve({ x, y, width, height });\r\n                });\r\n            }\r\n        });\r\n\r\n    private updateVisibility = async () => {\r\n        // Menu is rendered in Portal, which updates items asynchronously\r\n        // We need to do the same here so that the ref is up-to-date\r\n        await Promise.resolve();\r\n\r\n        if (this.props.visible) {\r\n            this.show();\r\n        } else {\r\n            this.hide();\r\n        }\r\n    };\r\n\r\n    private isBrowser = () => Platform.OS === \"web\" && \"document\" in global;\r\n\r\n    private focusFirstDOMNode = (el: View | null | undefined) => {\r\n        if (el && this.isBrowser()) {\r\n            // When in the browser, we want to focus the first focusable item on toggle\r\n            // For example, when menu is shown, focus the first item in the menu\r\n            // And when menu is dismissed, send focus back to the button to resume tabbing\r\n            const node: any = findNodeHandle(el);\r\n            const focusableNode = node.querySelector(\r\n                // This is a rough list of selectors that can be focused\r\n                \"button, [href], input, select, textarea, [tabindex]:not([tabindex=\\\"-1\\\"])\"\r\n            );\r\n\r\n            focusableNode?.focus();\r\n        }\r\n    };\r\n\r\n    private handleDismiss = () => {\r\n        if (this.props.visible) {\r\n            this.props.onDismiss();\r\n        }\r\n        return true;\r\n    };\r\n\r\n    private handleKeypress = (e: KeyboardEvent) => {\r\n        if (e.key === \"Escape\") {\r\n            this.props.onDismiss();\r\n        }\r\n    };\r\n\r\n    private attachListeners = () => {\r\n        BackHandler.addEventListener(\"hardwareBackPress\", this.handleDismiss);\r\n        Dimensions.addEventListener(\"change\", this.handleDismiss);\r\n\r\n        this.isBrowser() && document.addEventListener(\"keyup\", this.handleKeypress);\r\n    };\r\n\r\n    private removeListeners = () => {\r\n        BackHandler.removeEventListener(\"hardwareBackPress\", this.handleDismiss);\r\n        Dimensions.removeEventListener(\"change\", this.handleDismiss);\r\n\r\n        this.isBrowser() &&\r\n            document.removeEventListener(\"keyup\", this.handleKeypress);\r\n    };\r\n\r\n    private show = async () => {\r\n        const theme = this.context;\r\n        const windowLayout = Dimensions.get(\"window\");\r\n        const [menuLayout, anchorLayout] = await Promise.all([\r\n            this.measureMenuLayout(),\r\n            this.measureAnchorLayout(),\r\n        ]);\r\n\r\n        // When visible is true for first render\r\n        // native views can be still not rendered and\r\n        // measureMenuLayout/measureAnchorLayout functions\r\n        // return wrong values e.g { x:0, y: 0, width: 0, height: 0 }\r\n        // so we have to wait until views are ready\r\n        // and rerun this function to show menu\r\n        if (\r\n            !windowLayout.width ||\r\n            !windowLayout.height ||\r\n            !menuLayout.width ||\r\n            !menuLayout.height ||\r\n            (!anchorLayout.width && !this.isAnchorCoord()) ||\r\n            (!anchorLayout.height && !this.isAnchorCoord())\r\n        ) {\r\n            requestAnimationFrame(this.show);\r\n            return;\r\n        }\r\n\r\n        this.setState(\r\n            () => ({\r\n                left: anchorLayout.x,\r\n                top: anchorLayout.y,\r\n                // top: anchorLayout.y + anchorLayout.height,\r\n                anchorLayout: {\r\n                    height: anchorLayout.height,\r\n                    width: anchorLayout.width,\r\n                },\r\n                menuLayout: {\r\n                    width: menuLayout.width,\r\n                    height: menuLayout.height,\r\n                },\r\n            }),\r\n            () => {\r\n                this.attachListeners();\r\n\r\n                const { animation } = theme;\r\n                Animated.parallel([\r\n                    Animated.timing(this.state.scaleAnimation, {\r\n                        toValue: { x: menuLayout.width, y: menuLayout.height },\r\n                        duration: ANIMATION_DURATION * animation.scale,\r\n                        easing: EASING,\r\n                        useNativeDriver: true,\r\n                    }),\r\n                    Animated.timing(this.state.opacityAnimation, {\r\n                        toValue: 1,\r\n                        duration: ANIMATION_DURATION * animation.scale,\r\n                        easing: EASING,\r\n                        useNativeDriver: true,\r\n                    }),\r\n                ]).start(({ finished }) => {\r\n                    if (finished) {\r\n                        this.focusFirstDOMNode(this.menu);\r\n                    }\r\n                });\r\n            }\r\n        );\r\n    };\r\n\r\n    private hide = () => {\r\n        const theme = this.context;\r\n        this.removeListeners();\r\n\r\n        const { animation } = theme;\r\n        Animated.timing(this.state.opacityAnimation, {\r\n            toValue: 0,\r\n            duration: ANIMATION_DURATION * animation.scale,\r\n            easing: EASING,\r\n            useNativeDriver: true,\r\n        }).start(({ finished }) => {\r\n            if (finished) {\r\n                this.setState({ menuLayout: { width: 0, height: 0 }, rendered: false });\r\n                this.state.scaleAnimation.setValue({ x: 0, y: 0 });\r\n                this.focusFirstDOMNode(this.anchor);\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            visible,\r\n            anchor,\r\n            contentStyle,\r\n            style,\r\n            children,\r\n            statusBarHeight,\r\n            onDismiss,\r\n            overlayAccessibilityLabel,\r\n        } = this.props;\r\n        const theme = this.context;\r\n\r\n        const {\r\n            rendered,\r\n            menuLayout,\r\n            anchorLayout,\r\n            opacityAnimation,\r\n            scaleAnimation,\r\n        } = this.state;\r\n\r\n        let { left, top } = this.state;\r\n\r\n        // I don't know why but on Android measure function is wrong by 24\r\n        const additionalVerticalValue = Platform.select({\r\n            android: statusBarHeight,\r\n            default: 0,\r\n        });\r\n\r\n        const scaleTransforms = [\r\n            {\r\n                scaleX: scaleAnimation.x.interpolate({\r\n                    inputRange: [0, menuLayout.width],\r\n                    outputRange: [0, 1],\r\n                }),\r\n            },\r\n            {\r\n                scaleY: scaleAnimation.y.interpolate({\r\n                    inputRange: [0, menuLayout.height],\r\n                    outputRange: [0, 1],\r\n                }),\r\n            },\r\n        ];\r\n\r\n        const windowLayout = Dimensions.get(\"window\");\r\n\r\n        // We need to translate menu while animating scale to imitate transform origin for scale animation\r\n        const positionTransforms = [];\r\n\r\n        // Check if menu fits horizontally and if not align it to right.\r\n        if (left <= windowLayout.width - menuLayout.width - SCREEN_INDENT) {\r\n            positionTransforms.push({\r\n                translateX: scaleAnimation.x.interpolate({\r\n                    inputRange: [0, menuLayout.width],\r\n                    outputRange: [-(menuLayout.width / 2), 0],\r\n                }),\r\n            });\r\n\r\n            // Check if menu position has enough space from left side\r\n            if (left < SCREEN_INDENT) {\r\n                left = SCREEN_INDENT;\r\n            }\r\n        } else {\r\n            positionTransforms.push({\r\n                translateX: scaleAnimation.x.interpolate({\r\n                    inputRange: [0, menuLayout.width],\r\n                    outputRange: [menuLayout.width / 2, 0],\r\n                }),\r\n            });\r\n\r\n            left += anchorLayout.width - menuLayout.width;\r\n\r\n            const right = left + menuLayout.width;\r\n            // Check if menu position has enough space from right side\r\n            if (right > windowLayout.width - SCREEN_INDENT) {\r\n                left = windowLayout.width - SCREEN_INDENT - menuLayout.width;\r\n            }\r\n        }\r\n\r\n        // If the menu is larger than available vertical space,\r\n        // calculate the height of scrollable view\r\n        let scrollableMenuHeight = 0;\r\n\r\n        // Check if the menu should be scrollable\r\n        if (\r\n            // Check if the menu overflows from bottom side\r\n            top >=\r\n            windowLayout.height -\r\n            menuLayout.height -\r\n            SCREEN_INDENT -\r\n            additionalVerticalValue &&\r\n            // And bottom side of the screen has more space than top side\r\n            top <= windowLayout.height - top\r\n        ) {\r\n            // Scrollable menu should be below the anchor (expands downwards)\r\n            scrollableMenuHeight =\r\n                windowLayout.height - top - SCREEN_INDENT - additionalVerticalValue;\r\n        } else if (\r\n            // Check if the menu overflows from bottom side\r\n            top >=\r\n            windowLayout.height -\r\n            menuLayout.height -\r\n            SCREEN_INDENT -\r\n            additionalVerticalValue &&\r\n            // And top side of the screen has more space than bottom side\r\n            top >= windowLayout.height - top &&\r\n            // And menu overflows from top side\r\n            top <=\r\n            menuLayout.height -\r\n            anchorLayout.height +\r\n            SCREEN_INDENT -\r\n            additionalVerticalValue\r\n        ) {\r\n            // Scrollable menu should be above the anchor (expands upwards)\r\n            scrollableMenuHeight =\r\n                top + anchorLayout.height - SCREEN_INDENT + additionalVerticalValue;\r\n        }\r\n\r\n        // Scrollable menu max height\r\n        scrollableMenuHeight =\r\n            scrollableMenuHeight > windowLayout.height - 2 * SCREEN_INDENT\r\n                ? windowLayout.height - 2 * SCREEN_INDENT\r\n                : scrollableMenuHeight;\r\n\r\n        // Menu is typically positioned below the element that generates it\r\n        // So first check if it fits below the anchor (expands downwards)\r\n        if (\r\n            // Check if menu fits vertically\r\n            top <=\r\n            windowLayout.height -\r\n            menuLayout.height -\r\n            SCREEN_INDENT -\r\n            additionalVerticalValue ||\r\n            // Or if the menu overflows from bottom side\r\n            (top >=\r\n                windowLayout.height -\r\n                menuLayout.height -\r\n                SCREEN_INDENT -\r\n                additionalVerticalValue &&\r\n                // And bottom side of the screen has more space than top side\r\n                top <= windowLayout.height - top)\r\n        ) {\r\n            positionTransforms.push({\r\n                translateY: scaleAnimation.y.interpolate({\r\n                    inputRange: [0, menuLayout.height],\r\n                    outputRange: [-((scrollableMenuHeight || menuLayout.height) / 2), 0],\r\n                }),\r\n            });\r\n\r\n            // Check if menu position has enough space from top side\r\n            if (top < SCREEN_INDENT) {\r\n                top = SCREEN_INDENT;\r\n            }\r\n        } else {\r\n            positionTransforms.push({\r\n                translateY: scaleAnimation.y.interpolate({\r\n                    inputRange: [0, menuLayout.height],\r\n                    outputRange: [(scrollableMenuHeight || menuLayout.height) / 2, 0],\r\n                }),\r\n            });\r\n\r\n            top += anchorLayout.height - (scrollableMenuHeight || menuLayout.height);\r\n\r\n            const bottom =\r\n                top +\r\n                (scrollableMenuHeight || menuLayout.height) +\r\n                additionalVerticalValue;\r\n\r\n            // Check if menu position has enough space from bottom side\r\n            if (bottom > windowLayout.height - SCREEN_INDENT) {\r\n                top =\r\n                    scrollableMenuHeight === windowLayout.height - 2 * SCREEN_INDENT\r\n                        ? -SCREEN_INDENT * 2\r\n                        : windowLayout.height -\r\n                        menuLayout.height -\r\n                        SCREEN_INDENT -\r\n                        additionalVerticalValue;\r\n            }\r\n        }\r\n\r\n        const shadowMenuContainerStyle = {\r\n            opacity: opacityAnimation,\r\n            transform: scaleTransforms,\r\n            borderRadius: theme.roundness,\r\n            ...(scrollableMenuHeight ? { height: scrollableMenuHeight } : {}),\r\n        };\r\n\r\n        const positionStyle = {\r\n            top: this.isAnchorCoord() ? top : top + additionalVerticalValue,\r\n            ...(I18nManager.isRTL ? { right: left } : { left }),\r\n        };\r\n\r\n        return (\r\n            <View\r\n                ref={(ref) => {\r\n                    this.anchor = ref;\r\n                }}\r\n                collapsable={false}\r\n            >\r\n                {this.isAnchorCoord() ? null : anchor}\r\n                {rendered ? (\r\n                    <Modal visible={rendered}>\r\n                        <TouchableWithoutFeedback\r\n                            accessibilityLabel={overlayAccessibilityLabel}\r\n                            accessibilityRole=\"button\"\r\n                            onPress={onDismiss}\r\n                        >\r\n                            <View style={StyleSheet.absoluteFill} />\r\n                        </TouchableWithoutFeedback>\r\n                        <View\r\n                            ref={(ref) => {\r\n                                this.menu = ref;\r\n                            }}\r\n                            collapsable={false}\r\n                            accessibilityViewIsModal={visible}\r\n                            style={[styles.wrapper, positionStyle, style]}\r\n                            pointerEvents={visible ? \"box-none\" : \"none\"}\r\n                            onAccessibilityEscape={onDismiss}\r\n                        >\r\n                            <Animated.View style={{ transform: positionTransforms }}>\r\n                                <Surface\r\n                                    style={\r\n                                        [\r\n                                            styles.shadowMenuContainer,\r\n                                            shadowMenuContainerStyle,\r\n                                            contentStyle,\r\n                                        ] as StyleProp<ViewStyle>\r\n                                    }\r\n                                >\r\n                                    {(scrollableMenuHeight && (\r\n                                        <ScrollView>{children}</ScrollView>\r\n                                    )) || <React.Fragment>{children}</React.Fragment>}\r\n                                </Surface>\r\n                            </Animated.View>\r\n                        </View>\r\n                    </Modal>\r\n                ) : null}\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    wrapper: {\r\n        position: \"absolute\",\r\n    },\r\n    shadowMenuContainer: {\r\n        opacity: 0,\r\n        paddingVertical: 8,\r\n        elevation: 8,\r\n    },\r\n});\r\n\r\nexport default Menu;\r\n"]}