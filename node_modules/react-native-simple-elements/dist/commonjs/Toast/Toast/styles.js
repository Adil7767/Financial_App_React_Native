"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CloseButtonCont = exports.IconCont = exports.SubText = exports.Heading = exports.Accent = exports.StyledToast = exports.systemProps = void 0;

var _reactNative = require("react-native");

var _native = _interopRequireDefault(require("styled-components/native"));

var _styledSystem = require("styled-system");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _templateObject5() {
  const data = _taggedTemplateLiteral(["\n  ", ";\n  align-items: center;\n  justify-content: center;\n"]);

  _templateObject5 = function () {
    return data;
  };

  return data;
}

function _templateObject4() {
  const data = _taggedTemplateLiteral(["\n  ", ";\n  align-items: center;\n  justify-content: center;\n"]);

  _templateObject4 = function () {
    return data;
  };

  return data;
}

function _templateObject3() {
  const data = _taggedTemplateLiteral(["\n  ", ";\n  ", ";\n  ", ";\n  ", ";\n  flex-wrap: wrap;\n  font-weight: normal;\n"]);

  _templateObject3 = function () {
    return data;
  };

  return data;
}

function _templateObject2() {
  const data = _taggedTemplateLiteral(["\n  ", ";\n  ", ";\n  ", ";\n  ", ";\n  flex-wrap: wrap;\n  font-weight: normal;\n"]);

  _templateObject2 = function () {
    return data;
  };

  return data;
}

function _templateObject() {
  const data = _taggedTemplateLiteral(["\n  ", ";\n  top: 0;\n  left: 0;\n  bottom: 0;\n  width: 4px;\n  position: absolute;\n  border-top-left-radius: 4px;\n  border-bottom-left-radius: 4px;\n"]);

  _templateObject = function () {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

const systemProps = (0, _styledSystem.compose)(_styledSystem.space, _styledSystem.layout, _styledSystem.color, _styledSystem.flexbox, _styledSystem.background, _styledSystem.border, _styledSystem.position, _styledSystem.shadow);
exports.systemProps = systemProps;

// const AnimatedTouchable = Animated.createAnimatedComponent(TouchableOpacity);
const StyledToast = _reactNative.Animated.createAnimatedComponent(_native.default.TouchableOpacity(systemProps));

exports.StyledToast = StyledToast;
StyledToast.defaultProps = {
  py: 2,
  mb: 4,
  flex: "1 1 auto",
  zIndex: 1000,
  width: "100%",
  bg: "background",
  borderWidth: "1px",
  borderRadius: "4px",
  alignItems: "center",
  flexDirection: "row",
  accentColor: "green",
  justifyContent: "center",
  borderColor: "black"
};

const Accent = _native.default.View(_templateObject(), _styledSystem.color);

exports.Accent = Accent;

const Heading = _native.default.Text(_templateObject2(), _styledSystem.space, _styledSystem.color, _styledSystem.fontSize, _styledSystem.textAlign);

exports.Heading = Heading;
Heading.defaultProps = {
  fontSize: 2,
  color: "text"
};

const SubText = _native.default.Text(_templateObject3(), _styledSystem.space, _styledSystem.color, _styledSystem.fontSize, _styledSystem.textAlign);

exports.SubText = SubText;
SubText.defaultProps = {
  fontSize: 1,
  color: "text"
};

const IconCont = _native.default.View(_templateObject4(), _styledSystem.space);

exports.IconCont = IconCont;

const CloseButtonCont = _native.default.TouchableOpacity(_templateObject5(), _styledSystem.space);

exports.CloseButtonCont = CloseButtonCont;
//# sourceMappingURL=styles.js.map