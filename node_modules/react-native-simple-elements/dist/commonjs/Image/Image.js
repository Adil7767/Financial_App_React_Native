"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class Image extends React.Component {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "state", {
      placeholderOpacity: new _reactNative.Animated.Value(1)
    });

    _defineProperty(this, "onLoad", e => {
      const {
        transition,
        onLoad,
        transitionDuration = 360
      } = this.props;

      if (!transition) {
        this.state.placeholderOpacity.setValue(0);
        return;
      }

      setTimeout(() => {
        _reactNative.Animated.timing(this.state.placeholderOpacity, {
          toValue: 0,
          duration: transitionDuration,
          useNativeDriver: true
        }).start();
      }, 200);
      onLoad && onLoad(e);
    });
  }

  render() {
    const {
      onPress,
      onLongPress,
      Component = onPress || onLongPress ? _reactNative.TouchableOpacity : _reactNative.View,
      placeholderStyle,
      PlaceholderContent,
      containerStyle,
      childrenContainerStyle = null,
      style = {},
      ImageComponent = _reactNative.Image,
      children,
      ...attributes
    } = this.props;
    const hasImage = Boolean(attributes.source);

    const {
      width,
      height,
      ...styleProps
    } = _reactNative.StyleSheet.flatten(style);

    return /*#__PURE__*/React.createElement(Component, {
      onPress: onPress,
      onLongPress: onLongPress,
      accessibilityIgnoresInvertColors: true,
      style: _reactNative.StyleSheet.flatten([styles.container, {
        width,
        height
      }, containerStyle])
    }, /*#__PURE__*/React.createElement(ImageComponent, _extends({
      testID: "RNSP__Image",
      transition: true,
      transitionDuration: 360
    }, attributes, {
      onLoad: this.onLoad,
      style: _reactNative.StyleSheet.flatten([_reactNative.StyleSheet.absoluteFill, {
        width: width,
        height: height
      }, styleProps])
    })), /*#__PURE__*/React.createElement(_reactNative.Animated.View, {
      pointerEvents: hasImage ? "none" : "auto",
      accessibilityElementsHidden: hasImage,
      importantForAccessibility: hasImage ? "no-hide-descendants" : "yes",
      style: [styles.placeholderContainer, {
        opacity: hasImage ? this.state.placeholderOpacity : 1
      }]
    }, /*#__PURE__*/React.createElement(_reactNative.View, {
      testID: "RNSP__Image__placeholder",
      style: _reactNative.StyleSheet.flatten([style, styles.placeholder, placeholderStyle])
    }, PlaceholderContent)), /*#__PURE__*/React.createElement(_reactNative.View, {
      testID: "RNSP__Image__children__container",
      style: childrenContainerStyle !== null && childrenContainerStyle !== void 0 ? childrenContainerStyle : style
    }, children));
  }

}

_defineProperty(Image, "getSize", _reactNative.Image.getSize);

_defineProperty(Image, "getSizeWithHeaders", _reactNative.Image.getSizeWithHeaders);

_defineProperty(Image, "prefetch", _reactNative.Image.prefetch);

_defineProperty(Image, "abortPrefetch", _reactNative.Image.abortPrefetch);

_defineProperty(Image, "queryCache", _reactNative.Image.queryCache);

_defineProperty(Image, "resolveAssetSource", _reactNative.Image.resolveAssetSource);

const styles = _reactNative.StyleSheet.create({
  container: {
    backgroundColor: "transparent",
    position: "relative",
    overflow: "hidden"
  },
  placeholderContainer: { ..._reactNative.StyleSheet.absoluteFillObject
  },
  placeholder: {
    backgroundColor: "#bdbdbd",
    alignItems: "center",
    justifyContent: "center"
  }
});

var _default = Image;
exports.default = _default;
//# sourceMappingURL=Image.js.map