{"version":3,"sources":["CardContent.tsx"],"names":["CardContent","index","total","siblings","style","rest","cover","title","contentStyle","prev","next","styles","only","first","last","container","displayName","StyleSheet","create","paddingHorizontal","paddingTop","paddingBottom","paddingVertical"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,KAAT;AAAgBC,EAAAA,QAAhB;AAA0BC,EAAAA,KAA1B;AAAiC,KAAGC;AAApC,CAAD,KAAuD;AACvE,QAAMC,KAAK,GAAG,sBAAd;AACA,QAAMC,KAAK,GAAG,sBAAd;AAEA,MAAIC,YAAJ,EAAkBC,IAAlB,EAAwBC,IAAxB;;AAEA,MAAI,OAAOT,KAAP,KAAiB,QAAjB,IAA6BE,QAAjC,EAA2C;AACvCM,IAAAA,IAAI,GAAGN,QAAQ,CAACF,KAAK,GAAG,CAAT,CAAf;AACAS,IAAAA,IAAI,GAAGP,QAAQ,CAACF,KAAK,GAAG,CAAT,CAAf;AACH;;AAED,MACKQ,IAAI,KAAKH,KAAT,IAAkBI,IAAI,KAAKJ,KAA5B,IACCG,IAAI,KAAKF,KAAT,IAAkBG,IAAI,KAAKH,KAD5B,IAEAL,KAAK,KAAK,CAHd,EAIE;AACEM,IAAAA,YAAY,GAAGG,MAAM,CAACC,IAAtB;AACH,GAND,MAMO,IAAIX,KAAK,KAAK,CAAd,EAAiB;AACpB,QAAIS,IAAI,KAAKJ,KAAT,IAAkBI,IAAI,KAAKH,KAA/B,EAAsC;AAClCC,MAAAA,YAAY,GAAGG,MAAM,CAACC,IAAtB;AACH,KAFD,MAEO;AACHJ,MAAAA,YAAY,GAAGG,MAAM,CAACE,KAAtB;AACH;AACJ,GANM,MAMA,IAAI,OAAOX,KAAP,KAAiB,QAAjB,IAA6BD,KAAK,KAAKC,KAAK,GAAG,CAAnD,EAAsD;AACzD,QAAIO,IAAI,KAAKH,KAAT,IAAkBG,IAAI,KAAKF,KAA/B,EAAsC;AAClCC,MAAAA,YAAY,GAAGG,MAAM,CAACC,IAAtB;AACH,KAFD,MAEO;AACHJ,MAAAA,YAAY,GAAGG,MAAM,CAACG,IAAtB;AACH;AACJ,GANM,MAMA,IAAIL,IAAI,KAAKH,KAAT,IAAkBG,IAAI,KAAKF,KAA/B,EAAsC;AACzCC,IAAAA,YAAY,GAAGG,MAAM,CAACE,KAAtB;AACH,GAFM,MAEA,IAAIH,IAAI,KAAKJ,KAAT,IAAkBI,IAAI,KAAKH,KAA/B,EAAsC;AACzCC,IAAAA,YAAY,GAAGG,MAAM,CAACG,IAAtB;AACH;;AAED,sBAAO,oBAAC,iBAAD,eAAUT,IAAV;AAAgB,IAAA,KAAK,EAAE,CAACM,MAAM,CAACI,SAAR,EAAmBP,YAAnB,EAAiCJ,KAAjC;AAAvB,KAAP;AACH,CApCD;;AAsCAJ,WAAW,CAACgB,WAAZ,GAA0B,cAA1B;;AAEA,MAAML,MAAM,GAAGM,wBAAWC,MAAX,CAAkB;AAC7BH,EAAAA,SAAS,EAAE;AACPI,IAAAA,iBAAiB,EAAE;AADZ,GADkB;AAI7BN,EAAAA,KAAK,EAAE;AACHO,IAAAA,UAAU,EAAE;AADT,GAJsB;AAO7BN,EAAAA,IAAI,EAAE;AACFO,IAAAA,aAAa,EAAE;AADb,GAPuB;AAU7BT,EAAAA,IAAI,EAAE;AACFU,IAAAA,eAAe,EAAE;AADf;AAVuB,CAAlB,CAAf;;eAeetB,W","sourcesContent":["import * as React from \"react\";\r\nimport { StyleSheet, StyleProp, View, ViewStyle } from \"react-native\";\r\n\r\ntype Props = React.ComponentPropsWithRef<typeof View> & {\r\n    /**\r\n     * Items inside the `Card.Content`.\r\n     */\r\n    children: React.ReactNode;\r\n    /**\r\n     * @internal\r\n     */\r\n    index?: number;\r\n    /**\r\n     * @internal\r\n     */\r\n    total?: number;\r\n    /**\r\n     * @internal\r\n     */\r\n    siblings?: Array<string>;\r\n    style?: StyleProp<ViewStyle>;\r\n};\r\n\r\n/**\r\n * A component to show content inside a Card.\r\n *\r\n * <div class=\"screenshots\">\r\n *   <figure>\r\n *     <img class=\"medium\" src=\"screenshots/card-content-example.png\" />\r\n *   </figure>\r\n * </div>\r\n *\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import Card from 'react-native-simple-elements/components/Card';\r\n * import { Title, Paragraph } from \"react-native-simple-elements/components/Text\";\r\n *\r\n * const MyComponent = () => (\r\n *   <Card>\r\n *     <Card.Content>\r\n *       <Title>Card title</Title>\r\n *       <Paragraph>Card content</Paragraph>\r\n *     </Card.Content>\r\n *   </Card>\r\n * );\r\n *\r\n * export default MyComponent;\r\n * ```\r\n */\r\nconst CardContent = ({ index, total, siblings, style, ...rest }: Props) => {\r\n    const cover = \"withTheme(CardCover)\";\r\n    const title = \"withTheme(CardTitle)\";\r\n\r\n    let contentStyle, prev, next;\r\n\r\n    if (typeof index === \"number\" && siblings) {\r\n        prev = siblings[index - 1];\r\n        next = siblings[index + 1];\r\n    }\r\n\r\n    if (\r\n        (prev === cover && next === cover) ||\r\n        (prev === title && next === title) ||\r\n        total === 1\r\n    ) {\r\n        contentStyle = styles.only;\r\n    } else if (index === 0) {\r\n        if (next === cover || next === title) {\r\n            contentStyle = styles.only;\r\n        } else {\r\n            contentStyle = styles.first;\r\n        }\r\n    } else if (typeof total === \"number\" && index === total - 1) {\r\n        if (prev === cover || prev === title) {\r\n            contentStyle = styles.only;\r\n        } else {\r\n            contentStyle = styles.last;\r\n        }\r\n    } else if (prev === cover || prev === title) {\r\n        contentStyle = styles.first;\r\n    } else if (next === cover || next === title) {\r\n        contentStyle = styles.last;\r\n    }\r\n\r\n    return <View {...rest} style={[styles.container, contentStyle, style]} />;\r\n};\r\n\r\nCardContent.displayName = \"Card.Content\";\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        paddingHorizontal: 16,\r\n    },\r\n    first: {\r\n        paddingTop: 16,\r\n    },\r\n    last: {\r\n        paddingBottom: 16,\r\n    },\r\n    only: {\r\n        paddingVertical: 16,\r\n    },\r\n});\r\n\r\nexport default CardContent;\r\n"]}