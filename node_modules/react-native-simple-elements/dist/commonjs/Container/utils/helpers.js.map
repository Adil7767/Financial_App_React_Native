{"version":3,"sources":["helpers.ts"],"names":["isHidden","screenSize","props","smHidden","mdHidden","lgHidden","toPercent","num","getComponentWidth","sm","rowSize","parentWidth","md","lg","getComponentOffset","smOffset","mdOffset","lgOffset"],"mappings":"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","sourcesContent":["export const isHidden = (screenSize, props) => {\n    switch (screenSize) {\n    case \"small\":\n        return props.smHidden ? true : false;\n    case \"medium\":\n        return props.mdHidden ? true : false;\n    case \"large\":\n        return props.lgHidden ? true : false;\n    default:\n        return false;\n    }\n};\n\nconst toPercent = (num) => (num * 100) + \"%\";\n\nexport const getComponentWidth = (screenSize, props) => {\n    switch (screenSize) {\n    case \"small\":\n        if (props.sm) {\n            return toPercent(props.sm / props.rowSize);\n        } else {\n            return props.parentWidth;\n        }\n    case \"medium\":\n        if (props.md) {\n            return toPercent(props.md / props.rowSize);\n        } else if (props.sm) {\n            return toPercent(props.sm / props.rowSize);\n        } else {\n            return props.parentWidth;\n        }\n    case \"large\":\n        if (props.lg) {\n            return toPercent(props.lg / props.rowSize);\n        } else if (props.md) {\n            return toPercent(props.md / props.rowSize);\n        } else if (props.sm) {\n            return toPercent(props.sm / props.rowSize);\n        } else {\n            return props.parentWidth;\n        }\n    default:\n        return props.parentWidth;\n    }\n};\n\nexport const getComponentOffset = (screenSize, props) => {\n    switch (screenSize) {\n    case \"small\":\n        if (props.smOffset) {\n            return toPercent(props.smOffset / props.rowSize);\n        } else {\n            return 0;\n        }\n    case \"medium\":\n        if (props.mdOffset) {\n            return toPercent(props.mdOffset / props.rowSize);\n        } else if (props.smOffset) {\n            return toPercent(props.smOffset / props.rowSize);\n        } else {\n            return 0;\n        }\n    case \"large\":\n        if (props.lgOffset) {\n            return toPercent(props.lgOffset / props.rowSize);\n        } else if (props.mdOffset) {\n            return toPercent(props.mdOffset / props.rowSize);\n        } else if (props.smOffset) {\n            return toPercent(props.smOffset / props.rowSize);\n        } else {\n            return 0;\n        }\n    default:\n        return 0;\n    }\n};\n"]}