"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _native = _interopRequireDefault(require("styled-components/native"));

var _styledSystem = require("styled-system");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const DefaultScrollview = _native.default.ScrollView(_styledSystem.layout, _styledSystem.space);

DefaultScrollview.defaultProps = {
  overflowY: "scroll"
};

function ScrollviewViewport(props) {
  const {
    children,
    paddingTop,
    paddingBottom
  } = props;
  return /*#__PURE__*/React.createElement(DefaultScrollview, {
    height: "100%",
    paddingTop: paddingTop,
    paddingBottom: paddingBottom,
    style: {
      position: "absolute",
      top: 0,
      right: 0,
      left: 0
    }
  }, children);
}

ScrollviewViewport.defaultProps = {
  paddingTop: 0,
  paddingBottom: 0
};
var _default = ScrollviewViewport;
exports.default = _default;
//# sourceMappingURL=ScrollviewViewport.js.map