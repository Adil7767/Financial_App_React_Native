{"version":3,"sources":["FlexResponsiveContainer.tsx"],"names":["FlexResponsiveContainer","style","children","isMobileView","styles","container","flexDirection","StyleSheet","create","backgroundColor","display"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;AAOA,MAAMA,uBAAuB,GAAG,CAAC;AAC7BC,EAAAA,KAD6B;AAE7BC,EAAAA;AAF6B,CAAD,KAGnB;AAET,QAAM;AAAEC,IAAAA;AAAF,MAAmB,6BAAzB;AAEA,sBACI,oBAAC,iBAAD;AACI,IAAA,KAAK,EAAE,CACHC,MAAM,CAACC,SADJ,EAEHJ,KAFG,EAGH;AACIK,MAAAA,aAAa,EAAEH,YAAY,GAAG,QAAH,GAAc;AAD7C,KAHG;AADX,KASKD,QATL,CADJ;AAaH,CApBD;;eAsBeF,uB;;;AAEf,MAAMI,MAAM,GAAGG,wBAAWC,MAAX,CAAkB;AAC7BH,EAAAA,SAAS,EAAE;AACPI,IAAAA,eAAe,EAAE,aADV;AAEPC,IAAAA,OAAO,EAAE;AAFF;AADkB,CAAlB,CAAf","sourcesContent":["import useScreenSize from \"../hooks/useScreenSize\";\nimport * as React from \"react\";\nimport { View, StyleSheet, StyleProp, ViewStyle } from \"react-native\";\n\ntype Props = {\n    style?: StyleProp<ViewStyle>,\n    children?: React.ReactNode,\n}\n\nconst FlexResponsiveContainer = ({\n    style,\n    children,\n}: Props) => {\n\n    const { isMobileView } = useScreenSize();\n\n    return (\n        <View\n            style={[\n                styles.container,\n                style,\n                {\n                    flexDirection: isMobileView ? \"column\" : \"row\",\n                },\n            ]}\n        >\n            {children}\n        </View>\n    );\n};\n\nexport default FlexResponsiveContainer;\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: \"transparent\",\n        display: \"flex\",\n    },\n});\n"]}