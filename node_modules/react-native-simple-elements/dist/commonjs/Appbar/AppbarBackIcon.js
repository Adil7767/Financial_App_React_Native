"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _reactNative = require("react-native");

var _arrowLeft = _interopRequireDefault(require("@mdi/svg/svg/arrow-left.svg"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const AppbarBackIcon = ({
  size,
  color
}) => {
  // const iosIconSize = size - 3;
  // return Platform.OS === "ios" ? (
  //     <View
  //         style={[
  //             {
  //                 alignItems: "center",
  //                 justifyContent: "center",
  //             },
  //             {
  //                 width: size,
  //                 height: size,
  //                 transform: [{ scaleX: I18nManager.isRTL ? -1 : 1 }],
  //             },
  //         ]}
  //     >
  //         <Image
  //             source={require("../../assets/back-chevron.png")}
  //             style={[
  //                 {
  //                     resizeMode: "contain",
  //                 },
  //                 { tintColor: color, width: iosIconSize, height: iosIconSize },
  //             ]}
  //         />
  //     </View>
  // ) : (
  //     <Icon
  //         icon={ArrowLeftIcon}
  //         color={color}
  //         size={size}
  //         direction={I18nManager.isRTL ? "rtl" : "ltr"}
  //     />
  // );
  return /*#__PURE__*/React.createElement(_arrowLeft.default, {
    color: color,
    size: size,
    direction: _reactNative.I18nManager.isRTL ? "rtl" : "ltr"
  });
};

var _default = AppbarBackIcon;
exports.default = _default;
//# sourceMappingURL=AppbarBackIcon.js.map