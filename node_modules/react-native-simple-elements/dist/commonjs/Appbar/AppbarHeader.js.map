{"version":3,"sources":["AppbarHeader.tsx"],"names":["AppbarHeader","props","statusBarHeight","APPROX_STATUSBAR_HEIGHT","style","dark","rest","theme","React","useContext","ThemeContext","isDarkTheme","colors","mode","height","DEFAULT_APPBAR_HEIGHT","elevation","backgroundColor","customBackground","zIndex","restStyle","StyleSheet","flatten","surface","white","Wrapper","View","SafeAreaView","marginTop","styles","appbar","displayName","create","AppbarHeaderWithTheme"],"mappings":";;;;;;;AAAA;;AACA;;AAOA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,YAAY,GAAIC,KAAD,IAAkB;AACnC,QAAM;AACF;AACAC,IAAAA,eAAe,GAAGC,kCAFhB;AAGFC,IAAAA,KAHE;AAIFC,IAAAA,IAJE;AAKF,OAAGC;AALD,MAMFL,KANJ;AAOA,QAAMM,KAAK,GAAGC,KAAK,CAACC,UAAN,CAAiBC,8BAAjB,CAAd;AAEA,QAAM;AAAEL,IAAAA,IAAI,EAAEM,WAAR;AAAqBC,IAAAA,MAArB;AAA6BC,IAAAA;AAA7B,MAAsCN,KAA5C;AACA,QAAM;AACFO,IAAAA,MAAM,GAAGC,6BADP;AAEFC,IAAAA,SAAS,GAAG,CAFV;AAGFC,IAAAA,eAAe,EAAEC,gBAHf;AAIFC,IAAAA,MAAM,GAAG,CAJP;AAKF,OAAGC;AALD,MAMSC,wBAAWC,OAAX,CAAmBlB,KAAnB,KAA6B,EAN5C;AAOA,QAAMa,eAAe,GAAGC,gBAAgB,GAClCA,gBADkC,GAElCP,WAAW,IAAIE,IAAI,KAAK,UAAxB,GACI,sBAAQG,SAAR,EAAmBJ,MAAM,CAACW,OAA1B,CADJ,GAEIX,MAAM,CAACY,KAJjB,CAlBmC,CAuBnC;;AACA,QAAMC,OAAO,GACT,OAAOxB,KAAK,CAACC,eAAb,KAAiC,QAAjC,GAA4CwB,iBAA5C,GAAmDC,yBADvD;AAEA,sBACI,oBAAC,OAAD;AACI,IAAA,KAAK,EACD,CACI;AAAEV,MAAAA,eAAF;AAAmBE,MAAAA,MAAnB;AAA2BH,MAAAA;AAA3B,KADJ,EAEI,qBAAOA,SAAP,CAFJ;AAFR,kBAQI,oBAAC,cAAD;AACI,IAAA,KAAK,EAAE,CACH;AACA;AAAEF,MAAAA,MAAF;AAAUG,MAAAA,eAAV;AAA2BW,MAAAA,SAAS,EAAE1B;AAAtC,KAFG,EAGH2B,MAAM,CAACC,MAHJ,EAIHV,SAJG,CADX;AAOI,IAAA,IAAI,EAAEf;AAPV,KAQQC,IARR,EARJ,CADJ;AAqBH,CA/CD;;AAiDAN,YAAY,CAAC+B,WAAb,GAA2B,eAA3B;;AAEA,MAAMF,MAAM,GAAGR,wBAAWW,MAAX,CAAkB;AAC7BF,EAAAA,MAAM,EAAE;AACJd,IAAAA,SAAS,EAAE;AADP;AADqB,CAAlB,CAAf;;eAMehB,Y,EAEf;;;AACA,MAAMiC,qBAAqB,GAAGjC,YAA9B,C,CACA","sourcesContent":["import * as React from \"react\";\nimport {\n    StyleSheet,\n    StyleProp,\n    View,\n    SafeAreaView,\n    ViewStyle,\n} from \"react-native\";\nimport overlay from \"../theme/overlay\";\nimport { DEFAULT_APPBAR_HEIGHT, Appbar } from \"./Appbar\";\nimport shadow from \"../theme/shadow\";\nimport { APPROX_STATUSBAR_HEIGHT } from \"../theme/constants\";\nimport { DefaultTheme, ThemeContext } from \"styled-components\";\n\ntype Props = React.ComponentProps<typeof Appbar> & {\n    /**\n     * Whether the background color is a dark color. A dark header will render light text and vice-versa.\n     */\n    dark?: boolean;\n    /**\n     * Extra padding to add at the top of header to account for translucent status bar.\n     * This is automatically handled on iOS >= 11 including iPhone X using `SafeAreaView`.\n     * If you are using Expo, we assume translucent status bar and set a height for status bar automatically.\n     * Pass `0` or a custom value to disable the default behaviour, and customize the height.\n     */\n    statusBarHeight?: number;\n    /**\n     * Content of the header.\n     */\n    children: React.ReactNode;\n    /**\n     * @optional\n     */\n    theme?: DefaultTheme;\n\n    style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to use as a header at the top of the screen.\n * It can contain the screen title, controls such as navigation buttons, menu button etc.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-header.android.png\" />\n *     <figcaption>Android</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-header.ios.png\" />\n *     <figcaption>iOS</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import Appbar from 'react-native-simple-elements/components/Appbar';\n *\n * const MyComponent = () => {\n *   const _goBack = () => console.log('Went back');\n *\n *   const _handleSearch = () => console.log('Searching');\n *\n *   const _handleMore = () => console.log('Shown more');\n *\n *   return (\n *     <Appbar.Header>\n *       <Appbar.BackAction onPress={_goBack} />\n *       <Appbar.Content title=\"Title\" subtitle=\"Subtitle\" />\n *       <Appbar.Action icon=\"magnify\" onPress={_handleSearch} />\n *       <Appbar.Action icon=\"dots-vertical\" onPress={_handleMore} />\n *     </Appbar.Header>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst AppbarHeader = (props: Props) => {\n    const {\n        // Don't use default props since we check it to know whether we should use SafeAreaView\n        statusBarHeight = APPROX_STATUSBAR_HEIGHT,\n        style,\n        dark,\n        ...rest\n    } = props;\n    const theme = React.useContext(ThemeContext);\n\n    const { dark: isDarkTheme, colors, mode } = theme;\n    const {\n        height = DEFAULT_APPBAR_HEIGHT,\n        elevation = 4,\n        backgroundColor: customBackground,\n        zIndex = 0,\n        ...restStyle\n    }: ViewStyle = StyleSheet.flatten(style) || {};\n    const backgroundColor = customBackground\n        ? customBackground\n        : isDarkTheme && mode === \"adaptive\"\n            ? overlay(elevation, colors.surface)\n            : colors.white;\n    // Let the user override the behaviour\n    const Wrapper =\n        typeof props.statusBarHeight === \"number\" ? View : SafeAreaView;\n    return (\n        <Wrapper\n            style={\n                [\n                    { backgroundColor, zIndex, elevation },\n                    shadow(elevation),\n                ] as StyleProp<ViewStyle>\n            }\n        >\n            <Appbar\n                style={[\n                    //@ts-ignore Types of property 'backgroundColor' are incompatible.\n                    { height, backgroundColor, marginTop: statusBarHeight },\n                    styles.appbar,\n                    restStyle,\n                ]}\n                dark={dark}\n                {...rest}\n            />\n        </Wrapper>\n    );\n};\n\nAppbarHeader.displayName = \"Appbar.Header\";\n\nconst styles = StyleSheet.create({\n    appbar: {\n        elevation: 0,\n    },\n});\n\nexport default AppbarHeader;\n\n// @component-docs ignore-next-line\nconst AppbarHeaderWithTheme = AppbarHeader;\n// @component-docs ignore-next-line\nexport { AppbarHeaderWithTheme as AppbarHeader };\n"]}