import * as React from "react";
import { Animated, View } from "react-native";
declare type Props = {
    width?: number;
    height?: number;
    delay?: number;
    duration?: number;
    isInteraction?: boolean;
};
declare type State = {
    beginShimmerPosition?: Animated.Value;
};
declare class ShimmerPlaceholder extends React.PureComponent<Props, State> {
    static defaultProps: {
        delay: number;
        duration: number;
        isInteraction: boolean;
    };
    state: {
        beginShimmerPosition: Animated.Value;
    };
    getAnimated: () => Animated.CompositeAnimation;
    animatedValue: Animated.CompositeAnimation;
    render(): JSX.Element;
}
/**
 * To create ShimmerPlaceholder by Linear Gradient. Only useful when you use 3rd party,
 * For example: react-native-linear-gradient
 * @param {Linear Gradient Component} LinearGradient - 'expo-linear-gradient' by default
 *
 * @example
 *
 * import LinearGradient from 'react-native-linear-gradient';
 * import { createShimmerPlaceholder } from 'react-native-shimmer-placeholder'
 *
 * const ShimmerPlaceHolder = createShimmerPlaceholder(LinearGradient)
 *
 * ...
 *
 * <ShimmerPlaceHolder />
 */
export declare const createShimmerPlaceholder: (LinearGradient?: typeof View) => React.ForwardRefExoticComponent<Props & React.RefAttributes<ShimmerPlaceholder>>;
export default ShimmerPlaceholder;
