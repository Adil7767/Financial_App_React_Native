import * as React from "react";
import { Animated, StyleProp, ViewStyle } from "react-native";
declare type Props = {
    carouselRef: Record<string, unknown>;
    itemHeight: number;
    itemWidth: number;
    scrollPosition: Record<string, unknown>;
    sliderHeight: number;
    sliderWidth: number;
    vertical: boolean;
    containerStyle: StyleProp<ViewStyle>;
    dimensions: {
        width: number;
        height: number;
    };
    fadeDuration: number;
    parallaxFactor: number;
    showSpinner: boolean;
    spinnerColor: string;
    AnimatedImageComponent: (() => React.ReactNode) | Record<string, unknown>;
    onLoad?: (evt?: any) => void;
    onError?: (evt?: any) => void;
};
declare type State = {
    offset: number;
    width: number;
    height: number;
    status: number;
    animOpacity: Animated.Value;
};
export default class ParallaxImage extends React.Component<Props, State> {
    static defaultProps: {
        containerStyle: {};
        fadeDuration: number;
        parallaxFactor: number;
        showSpinner: boolean;
        spinnerColor: string;
        AnimatedImageComponent: Animated.AnimatedComponent<typeof import("react-native").Image>;
    };
    state: State;
    _container: any;
    _mounted: boolean;
    constructor(props: any);
    setNativeProps(nativeProps: any): void;
    componentDidMount(): void;
    componentWillUnmount(): void;
    _measureLayout(): void;
    _onLoad(event: any): void;
    _onError(event: any): void;
    get image(): JSX.Element;
    get spinner(): false | JSX.Element;
    render(): JSX.Element;
}
export {};
