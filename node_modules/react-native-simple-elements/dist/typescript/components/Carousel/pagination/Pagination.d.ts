import * as React from "react";
import { StyleProp, ViewStyle } from "react-native";
declare type Props = {
    activeDotIndex: number;
    dotsLength: number;
    activeOpacity?: number;
    carouselRef?: Record<string, unknown>;
    containerStyle?: StyleProp<ViewStyle>;
    dotColor?: string;
    dotContainerStyle?: StyleProp<ViewStyle>;
    dotElement?: React.ReactElement;
    dotStyle?: StyleProp<ViewStyle>;
    inactiveDotColor?: string;
    inactiveDotElement?: React.ReactElement;
    inactiveDotOpacity?: number;
    inactiveDotScale?: number;
    inactiveDotStyle?: StyleProp<ViewStyle>;
    renderDots?: (index: any, dotsLength: any, obj: any) => React.ReactNode;
    tappableDots?: boolean;
    vertical?: boolean;
    accessibilityLabel?: string;
    animatedDuration?: number;
    animatedFriction?: number;
    animatedTension?: number;
    delayPressInDot?: number;
    paginationStyle?: StyleProp<ViewStyle>;
};
export default class Pagination extends React.PureComponent<Props> {
    static defaultProps: {
        inactiveDotOpacity: number;
        inactiveDotScale: number;
        tappableDots: boolean;
        vertical: boolean;
        animatedDuration: number;
        animatedFriction: number;
        animatedTension: number;
        delayPressInDot: number;
    };
    constructor(props: any);
    _needsRTLAdaptations(): boolean;
    get _activeDotIndex(): number;
    get dots(): {};
    render(): false | JSX.Element;
}
export {};
