{"version":3,"sources":["index.tsx"],"names":["React","LayoutAnimation","UIManager","getStatusBarHeight","Box","Toast","uuid","ToastContext","createContext","toast","useToast","useContext","originalOffset","setLayoutAnimationEnabledExperimental","CustomLayoutConfig","duration","create","type","Types","easeInEaseOut","property","Properties","opacity","update","delete","ToastProvider","children","position","offset","offsetProp","maxToasts","toasts","setToasts","useState","newToast","configureNext","prevToasts","index","length","id","shift","pop","hideToast","filter","el","bottom","top","map","config"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { LayoutAnimation, LayoutAnimationConfig, UIManager } from \"react-native\";\nimport { getStatusBarHeight } from \"react-native-iphone-x-helper\";\nimport Box from \"../Box\";\nimport Toast, { ToastConfig } from \"../Toast\";\nimport { ToastInternalConfig } from \"../Toast/index\";\nimport { uuid } from \"../Utils\";\n\ntype ToastContextType = {\n    toast: (options: ToastConfig) => void\n    position?: \"TOP\" | \"BOTTOM\"\n    offset?: number\n    maxToasts?: number\n}\n\nexport const ToastContext = React.createContext<ToastContextType>({\n    toast: () => null\n});\n\nexport const useToast = () => React.useContext(ToastContext);\n\nconst originalOffset = getStatusBarHeight();\n\nUIManager && UIManager.setLayoutAnimationEnabledExperimental && UIManager.setLayoutAnimationEnabledExperimental(true);\n\nexport type FullToastConfig = ToastConfig & ToastInternalConfig\n\nconst CustomLayoutConfig: LayoutAnimationConfig = {\n    duration: 300,\n    create: {\n        type: LayoutAnimation.Types.easeInEaseOut,\n        property: LayoutAnimation.Properties.opacity\n    },\n    update: {\n        type: LayoutAnimation.Types.easeInEaseOut\n    },\n    delete: {\n        type: LayoutAnimation.Types.easeInEaseOut,\n        property: LayoutAnimation.Properties.opacity\n    }\n};\n\nconst ToastProvider: React.FC<Omit<ToastContextType, \"toast\">> = ({\n    children,\n    position,\n    offset: offsetProp,\n    maxToasts\n}) => {\n    const [toasts, setToasts] = React.useState<FullToastConfig[]>([]);\n\n    const toast = (newToast: ToastConfig) => {\n        LayoutAnimation.configureNext(CustomLayoutConfig);\n        setToasts((prevToasts) => {\n            const toasts =\n                position === \"BOTTOM\"\n                    ? [...prevToasts, { index: prevToasts.length, id: uuid(), ...newToast }]\n                    : [{ index: prevToasts.length, id: uuid(), ...newToast }, ...prevToasts];\n            if (maxToasts && prevToasts.length === maxToasts) {\n                position === \"BOTTOM\" ? toasts.shift() : toasts.pop();\n                return toasts;\n            } else {\n                return toasts;\n            }\n        });\n    };\n\n    const hideToast = (id: string) => {\n        LayoutAnimation.configureNext(CustomLayoutConfig);\n        setToasts((prevToasts) => prevToasts.filter((el) => el.id !== id));\n    };\n\n    const offset = offsetProp ? offsetProp + originalOffset : originalOffset;\n\n    return (\n        <ToastContext.Provider value={{ toast }}>\n            {children}\n            <Box\n                px={4}\n                left={0}\n                right={0}\n                position=\"absolute\"\n                pointerEvents=\"box-none\"\n                pt={position === \"BOTTOM\" ? 0 : offset}\n                pb={position === \"BOTTOM\" ? offset : 0}\n                style={position === \"BOTTOM\" ? { bottom: 0 } : { top: 0 }}\n                testID=\"toast_box\"\n            >\n                {toasts.map((config: ToastConfig & ToastInternalConfig) => {\n                    return <Toast position={position} key={config.id} onClose={(id) => hideToast(id)} {...config} />;\n                })}\n            </Box>\n        </ToastContext.Provider>\n    );\n};\n\nexport default ToastProvider;\n"]}