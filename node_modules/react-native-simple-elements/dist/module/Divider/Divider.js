function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import * as React from "react";
import color from "color";
import { StyleSheet, View } from "react-native";
import { ThemeContext } from "styled-components";
import { black, white } from "../theme/colors";

/**
 * A divider is a thin, lightweight separator that groups content in lists and page layouts.
 *
 * <div class="screenshots">
 *  <figure>
 *    <img class="medium" src="screenshots/divider.png" />
 *  </figure>
 * </div>
 *
 * ## Usage
 * ```js
 * import * as React from 'react';
 * import { View } from 'react-native';
 * import Divider from 'react-native-simple-elements/components/Divider';
 * import Text from "react-native-simple-elements/components/Text";
 *
 * const MyComponent = () => (
 *   <View>
 *     <Text>Lemon</Text>
 *     <Divider />
 *     <Text>Mango</Text>
 *     <Divider />
 *   </View>
 * );
 *
 * export default MyComponent;
 * ```
 */
const Divider = ({
  inset,
  style,
  ...rest
}) => {
  const theme = React.useContext(ThemeContext);
  const {
    dark: isDarkTheme
  } = theme;
  return /*#__PURE__*/React.createElement(View, _extends({}, rest, {
    style: [isDarkTheme ? styles.dark : styles.light, inset && styles.inset, style]
  }));
};

const styles = StyleSheet.create({
  light: {
    backgroundColor: color(black).alpha(0.12).rgb().string(),
    height: StyleSheet.hairlineWidth
  },
  dark: {
    backgroundColor: color(white).alpha(0.12).rgb().string(),
    height: StyleSheet.hairlineWidth
  },
  inset: {
    marginLeft: 72
  }
});
export default Divider;
//# sourceMappingURL=Divider.js.map