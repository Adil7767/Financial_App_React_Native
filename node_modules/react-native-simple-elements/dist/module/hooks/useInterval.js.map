{"version":3,"sources":["useInterval.tsx"],"names":["React","useInterval","callback","delay","savedCallback","useRef","useEffect","current","tick","id","setInterval","clearInterval"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAO,SAASC,WAAT,CAAqBC,QAArB,EAA+BC,KAA/B,EAAsC;AACzC,QAAMC,aAAa,GAAGJ,KAAK,CAACK,MAAN,EAAtB,CADyC,CAGzC;;AACAL,EAAAA,KAAK,CAACM,SAAN,CAAgB,MAAM;AAClBF,IAAAA,aAAa,CAACG,OAAd,GAAwBL,QAAxB;AACH,GAFD,EAEG,CAACA,QAAD,CAFH,EAJyC,CAQzC;;AACAF,EAAAA,KAAK,CAACM,SAAN,CAAgB,MAAM;AAClB,aAASE,IAAT,GAAgB;AACZJ,MAAAA,aAAa,CAACG,OAAd;AACH;;AACD,QAAIJ,KAAK,KAAK,IAAd,EAAoB;AAChB,YAAMM,EAAE,GAAGC,WAAW,CAACF,IAAD,EAAOL,KAAP,CAAtB;AACA,aAAO,MAAMQ,aAAa,CAACF,EAAD,CAA1B;AACH;AACJ,GARD,EAQG,CAACN,KAAD,CARH;AASH","sourcesContent":["import * as React from \"react\";\r\n\r\nexport function useInterval(callback, delay) {\r\n    const savedCallback = React.useRef<any>();\r\n\r\n    // Remember the latest callback.\r\n    React.useEffect(() => {\r\n        savedCallback.current = callback;\r\n    }, [callback]);\r\n\r\n    // Set up the interval.\r\n    React.useEffect(() => {\r\n        function tick() {\r\n            savedCallback.current();\r\n        }\r\n        if (delay !== null) {\r\n            const id = setInterval(tick, delay);\r\n            return () => clearInterval(id);\r\n        }\r\n    }, [delay]);\r\n}\r\n"]}