{"version":3,"sources":["CardTitle.tsx"],"names":["React","StyleSheet","View","Caption","Title","LEFT_SIZE","CardTitle","title","titleStyle","titleNumberOfLines","subtitle","subtitleStyle","subtitleNumberOfLines","left","leftStyle","right","rightStyle","style","styles","container","minHeight","size","titles","marginBottom","displayName","create","flexDirection","alignItems","justifyContent","paddingLeft","marginRight","height","width","flex","marginVertical"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport {\r\n    StyleProp,\r\n    StyleSheet,\r\n    TextStyle,\r\n    View,\r\n    ViewStyle,\r\n} from \"react-native\";\r\nimport { DefaultTheme } from \"styled-components\";\r\n\r\nimport Caption from \"./../Text/Caption\";\r\nimport Title from \"./../Text/Title\";\r\n\r\ntype Props = React.ComponentPropsWithRef<typeof View> & {\r\n    /**\r\n     * Text for the title. Note that this will only accept a string or `<Text>`-based node.\r\n     */\r\n    title: React.ReactNode;\r\n    /**\r\n     * Style for the title.\r\n     */\r\n    titleStyle?: StyleProp<TextStyle>;\r\n    /**\r\n     * Number of lines for the title.\r\n     */\r\n    titleNumberOfLines?: number;\r\n    /**\r\n     * Text for the subtitle. Note that this will only accept a string or `<Text>`-based node.\r\n     */\r\n    subtitle?: React.ReactNode;\r\n    /**\r\n     * Style for the subtitle.\r\n     */\r\n    subtitleStyle?: StyleProp<TextStyle>;\r\n    /**\r\n     * Number of lines for the subtitle.\r\n     */\r\n    subtitleNumberOfLines?: number;\r\n    /**\r\n     * Callback which returns a React element to display on the left side.\r\n     */\r\n    left?: (props: { size: number }) => React.ReactNode;\r\n    /**\r\n     * Style for the left element wrapper.\r\n     */\r\n    leftStyle?: StyleProp<ViewStyle>;\r\n    /**\r\n     * Callback which returns a React element to display on the right side.\r\n     */\r\n    right?: (props: { size: number }) => React.ReactNode;\r\n    /**\r\n     * Style for the right element wrapper.\r\n     */\r\n    rightStyle?: StyleProp<ViewStyle>;\r\n    /**\r\n     * @internal\r\n     */\r\n    index?: number;\r\n    /**\r\n     * @internal\r\n     */\r\n    total?: number;\r\n    style?: StyleProp<ViewStyle>;\r\n    /**\r\n     * @optional\r\n     */\r\n    theme?: DefaultTheme;\r\n};\r\n\r\nconst LEFT_SIZE = 40;\r\n\r\n/**\r\n * A component to show a title, subtitle and an avatar inside a Card.\r\n *\r\n * <div class=\"screenshots\">\r\n *   <img class=\"medium\" src=\"screenshots/card-title-1.png\" />\r\n * </div>\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { AvatarIcon } from 'react-native-simple-elements/components/Avatar';\r\n * import { CardTitle } from \"react-native-simple-elements/components/Card\";\r\n * import IconButton from \"react-native-simple-elements/components/IconButton\";\r\n *\r\n * const MyComponent = () => (\r\n *   <CardTitle\r\n *     title=\"Card Title\"\r\n *     subtitle=\"Card Subtitle\"\r\n *     left={(props) => <AvatarIcon {...props} icon=\"folder\" />}\r\n *     right={(props) => <IconButton {...props} icon=\"more-vert\" onPress={() => {}} />}\r\n *   />\r\n * );\r\n *\r\n * export default MyComponent;\r\n * ```\r\n */\r\nconst CardTitle = ({\r\n    title,\r\n    titleStyle,\r\n    titleNumberOfLines = 1,\r\n    subtitle,\r\n    subtitleStyle,\r\n    subtitleNumberOfLines = 1,\r\n    left,\r\n    leftStyle,\r\n    right,\r\n    rightStyle,\r\n    style,\r\n}: Props) => {\r\n    return (\r\n        <View\r\n            style={[\r\n                styles.container,\r\n                { minHeight: subtitle || left || right ? 72 : 50 },\r\n                style,\r\n            ]}\r\n        >\r\n            {left ? (\r\n                <View style={[styles.left, leftStyle]}>\r\n                    {left({\r\n                        size: LEFT_SIZE,\r\n                    })}\r\n                </View>\r\n            ) : null}\r\n\r\n            <View style={[styles.titles]}>\r\n                {title ? (\r\n                    <Title\r\n                        style={[\r\n                            styles.title,\r\n                            { marginBottom: subtitle ? 0 : 2 },\r\n                            titleStyle,\r\n                        ]}\r\n                        numberOfLines={titleNumberOfLines}\r\n                    >\r\n                        {title}\r\n                    </Title>\r\n                ) : null}\r\n\r\n                {subtitle ? (\r\n                    <Caption\r\n                        style={[styles.subtitle, subtitleStyle]}\r\n                        numberOfLines={subtitleNumberOfLines}\r\n                    >\r\n                        {subtitle}\r\n                    </Caption>\r\n                ) : null}\r\n            </View>\r\n\r\n            <View style={rightStyle}>{right ? right({ size: 24 }) : null}</View>\r\n        </View>\r\n    );\r\n};\r\n\r\nCardTitle.displayName = \"Card.Title\";\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        paddingLeft: 16,\r\n    },\r\n\r\n    left: {\r\n        justifyContent: \"center\",\r\n        marginRight: 16,\r\n        height: LEFT_SIZE,\r\n        width: LEFT_SIZE,\r\n    },\r\n\r\n    titles: {\r\n        flex: 1,\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n    },\r\n\r\n    title: {\r\n        minHeight: 30,\r\n    },\r\n\r\n    subtitle: {\r\n        minHeight: 20,\r\n        marginVertical: 0,\r\n    },\r\n});\r\n\r\nexport default CardTitle;\r\n\r\n// @component-docs ignore-next-line\r\nexport { CardTitle };\r\n"]}