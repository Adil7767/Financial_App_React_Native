{"version":3,"sources":["AlertDialogWithRef.tsx"],"names":["React","StyleSheet","AlertDialog","Surface","DialogTitle","DialogContent","DialogActions","Button","ThemeContext","Text","defaultProps","mode","translations","confirmText","cancelText","AlertDialogWithRef","innerRef","children","title","message","dialogContentStyle","messageStyle","rest","visible","setVisible","useState","optionsRef","useRef","colors","useContext","useImperativeHandle","open","options","current","onConfirm","onCancel","close","_handleConfirm","_handleDismiss","styles","errorMessage","color","error","create","paddingHorizontal"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport {\r\n    StyleProp,\r\n    StyleSheet, TextStyle, ViewStyle,\r\n} from \"react-native\";\r\nimport AlertDialog, { Props as BottomSheetProps} from \"./AlertDialog\";\r\nimport Surface from \"../Surface\";\r\nimport { DialogTitle, DialogContent, DialogActions } from \"../Dialog\";\r\nimport Button from \"../Button\";\r\nimport { ThemeContext } from \"styled-components\";\r\nimport Text from \"../Text\";\r\n\r\ntype RefProps = {\r\n    close: () => void,\r\n}\r\n\r\ntype TranslationProps = {\r\n    cancelText: string,\r\n    confirmText: string,\r\n}\r\n\r\ntype Props = Omit<BottomSheetProps, \"visible\" | \"onDismiss\"> & {\r\n    innerRef: React.RefObject<RefProps>,\r\n    mode?: \"message\" | \"confirm\" | \"error\",\r\n    title?: string,\r\n    message?: string,\r\n    translations?: TranslationProps,\r\n    dialogContentStyle?: StyleProp<ViewStyle>,\r\n    messageStyle?: StyleProp<TextStyle>,\r\n};\r\n\r\nconst defaultProps = {\r\n    mode: \"message\",\r\n    translations: {\r\n        confirmText: \"Ok\",\r\n        cancelText: \"Cancel\",\r\n    },\r\n};\r\n\r\nconst AlertDialogWithRef = ({\r\n    innerRef,\r\n    children,\r\n    mode,\r\n    title,\r\n    message,\r\n    translations,\r\n    dialogContentStyle,\r\n    messageStyle,\r\n    ...rest\r\n}: Props) => {\r\n\r\n    const [ visible, setVisible ] = React.useState(false);\r\n    const optionsRef = React.useRef({} as any);\r\n\r\n    const { colors } = React.useContext(ThemeContext);\r\n\r\n    React.useImperativeHandle(innerRef, () => ({\r\n        open: (options) => {\r\n            optionsRef.current = {\r\n                onConfirm: options?.onConfirm,\r\n                onCancel: options?.onCancel,\r\n            };\r\n            setVisible(true);\r\n        },\r\n        close: () => {\r\n            setVisible(false);\r\n        },\r\n    }));\r\n\r\n    const _handleConfirm = () => {\r\n        if (optionsRef && optionsRef.current && optionsRef.current.onConfirm) {\r\n            optionsRef.current.onConfirm();\r\n        }\r\n        innerRef.current.close();\r\n    };\r\n\r\n    const _handleDismiss = () => {\r\n        innerRef.current.close();\r\n    };\r\n\r\n    return (\r\n        <AlertDialog\r\n            animationType={\"fade\"}\r\n            visible={visible}\r\n            onDismiss={_handleDismiss}\r\n            {...rest}\r\n        >\r\n            <Surface>\r\n                {title ?\r\n                    <DialogTitle>{title}</DialogTitle>\r\n                    :\r\n                    null\r\n                }\r\n                <DialogContent\r\n                    style={[\r\n                        styles.dialogContentStyle,\r\n                        dialogContentStyle,\r\n                    ]}\r\n                >\r\n                    {message ?\r\n                        <Text\r\n                            style={[\r\n                                mode === \"error\" && styles.errorMessage,\r\n                                mode === \"error\" && {\r\n                                    color: colors.error,\r\n                                },\r\n                                messageStyle,\r\n                            ]}\r\n                        >\r\n                            {message}\r\n                        </Text>\r\n                        :\r\n                        children\r\n                    }\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    {mode === \"confirm\" ?\r\n                        <Button\r\n                            onPress={_handleDismiss}\r\n                        >\r\n                            {translations?.cancelText}\r\n                        </Button>\r\n                        :\r\n                        null\r\n                    }\r\n                    <Button\r\n                        onPress={_handleConfirm}\r\n                    >\r\n                        {translations?.confirmText}\r\n                    </Button>\r\n                </DialogActions>\r\n            </Surface>\r\n        </AlertDialog>\r\n    );\r\n};\r\n\r\nAlertDialogWithRef.defaultProps = defaultProps;\r\n\r\nexport default AlertDialogWithRef;\r\n\r\nconst styles = StyleSheet.create({\r\n    dialogContentStyle: {\r\n        paddingHorizontal: 16,\r\n    },\r\n    errorMessage: {\r\n    },\r\n});\r\n"]}