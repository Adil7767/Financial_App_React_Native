{"version":3,"sources":["MenuItem.tsx"],"names":["color","React","View","StyleSheet","SvgIcon","TouchableRipple","Text","black","white","ThemeContext","MenuItem","props","icon","title","disabled","onPress","style","contentStyle","testID","titleStyle","theme","useContext","disabledColor","dark","alpha","rgb","string","titleColor","colors","text","iconColor","styles","container","row","item","content","widthWithIcon","displayName","minWidth","maxWidth","iconWidth","create","paddingRight","paddingLeft","height","justifyContent","flexDirection","width","fontSize","marginRight","marginLeft"],"mappings":"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","sourcesContent":["import color from \"color\";\r\nimport * as React from \"react\";\r\nimport {\r\n    View,\r\n    StyleSheet,\r\n    TextStyle,\r\n    ViewStyle,\r\n    StyleProp,\r\n} from \"react-native\";\r\nimport { SvgIcon } from \"../Icon\";\r\nimport TouchableRipple from \"../TouchableRipple/TouchableRipple\";\r\nimport Text from \"../Text\";\r\nimport { black, white } from \"../theme/colors\";\r\nimport { DefaultTheme, ThemeContext } from \"styled-components\";\r\n\r\ntype Props = {\r\n    /**\r\n     * Title text for the `MenuItem`.\r\n     */\r\n    title: React.ReactNode;\r\n    /**\r\n     * Icon to display for the `MenuItem`.\r\n     */\r\n    icon?: React.ReactElement;\r\n    /**\r\n     * Whether the 'item' is disabled. A disabled 'item' is greyed out and `onPress` is not called on touch.\r\n     */\r\n    disabled?: boolean;\r\n    /**\r\n     * Function to execute on press.\r\n     */\r\n    onPress?: () => void;\r\n    /**\r\n     * @optional\r\n     */\r\n    theme?: DefaultTheme;\r\n    style?: StyleProp<ViewStyle>;\r\n    contentStyle?: StyleProp<ViewStyle>;\r\n    titleStyle?: StyleProp<TextStyle>;\r\n    /**\r\n     * TestID used for testing purposes\r\n     */\r\n    testID?: string;\r\n};\r\n\r\n/**\r\n * A component to show a single list item inside a Menu.\r\n *\r\n * <div class=\"screenshots\">\r\n *   <figure>\r\n *     <img class=\"medium\" src=\"screenshots/menu-item.png\" />\r\n *   </figure>\r\n * </div>\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { View } from 'react-native';\r\n * import { MenuItem } from 'react-native-simple-elements/components/Menu';\r\n *\r\n * const MyComponent = () => (\r\n *   <View style={{ flex: 1 }}>\r\n *     <Menu.Item icon=\"redo\" onPress={() => {}} title=\"Redo\" />\r\n *     <Menu.Item icon=\"undo\" onPress={() => {}} title=\"Undo\" />\r\n *     <Menu.Item icon=\"content-cut\" onPress={() => {}} title=\"Cut\" disabled />\r\n *     <Menu.Item icon=\"content-copy\" onPress={() => {}} title=\"Copy\" disabled />\r\n *     <Menu.Item icon=\"content-paste\" onPress={() => {}} title=\"Paste\" />\r\n *   </View>\r\n * );\r\n *\r\n * export default MyComponent;\r\n * ```\r\n */\r\n\r\nconst MenuItem = function(props: Props) {\r\n\r\n    const {\r\n        icon,\r\n        title,\r\n        disabled,\r\n        onPress,\r\n        style,\r\n        contentStyle,\r\n        testID,\r\n        titleStyle,\r\n    } = props;\r\n    const theme = React.useContext(ThemeContext);\r\n\r\n    const disabledColor = color(theme.dark ? white : black)\r\n        .alpha(0.32)\r\n        .rgb()\r\n        .string();\r\n\r\n    const titleColor = disabled\r\n        ? disabledColor\r\n        : color(theme.colors.text).alpha(0.87).rgb().string();\r\n\r\n    const iconColor = disabled\r\n        ? disabledColor\r\n        : color(theme.colors.text).alpha(0.54).rgb().string();\r\n\r\n    return (\r\n        <TouchableRipple\r\n            style={[styles.container, style]}\r\n            onPress={onPress}\r\n            disabled={disabled}\r\n            testID={testID}\r\n            accessibilityRole=\"menuitem\"\r\n            accessibilityState={{ disabled }}\r\n        >\r\n            <View style={styles.row}>\r\n                {icon ? (\r\n                    <View style={[styles.item, styles.icon]} pointerEvents=\"box-none\">\r\n                        <SvgIcon icon={icon} size={24} color={iconColor} />\r\n                    </View>\r\n                ) : null}\r\n                <View\r\n                    style={[\r\n                        styles.item,\r\n                        styles.content,\r\n                        icon ? styles.widthWithIcon : null,\r\n                        contentStyle,\r\n                    ]}\r\n                    pointerEvents=\"none\"\r\n                >\r\n                    <Text\r\n                        selectable={false}\r\n                        numberOfLines={1}\r\n                        style={[styles.title, { color: titleColor }, titleStyle]}\r\n                    >\r\n                        {title}\r\n                    </Text>\r\n                </View>\r\n            </View>\r\n        </TouchableRipple>\r\n    );\r\n};\r\n\r\nMenuItem.displayName = \"Menu.Item\";\r\n\r\nconst minWidth = 112;\r\nconst maxWidth = 280;\r\nconst iconWidth = 40;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        // paddingHorizontal: 8,\r\n        paddingRight: 8,\r\n        paddingLeft: 8,\r\n        minWidth,\r\n        maxWidth,\r\n        height: 48,\r\n        justifyContent: \"center\",\r\n    },\r\n    row: {\r\n        flexDirection: \"row\",\r\n    },\r\n    icon: {\r\n        width: iconWidth,\r\n    },\r\n    title: {\r\n        fontSize: 16,\r\n    },\r\n    item: {\r\n        // marginHorizontal: 8,\r\n        marginRight: 8,\r\n        marginLeft: 8,\r\n    },\r\n    content: {\r\n        justifyContent: \"center\",\r\n        minWidth: minWidth - 16,\r\n        maxWidth: maxWidth - 16,\r\n    },\r\n    widthWithIcon: {\r\n        maxWidth: maxWidth - (iconWidth + 48),\r\n    },\r\n});\r\n\r\nexport default MenuItem;\r\n\r\n// @component-docs ignore-next-line\r\nexport { MenuItem };\r\n"]}