{"version":3,"sources":["Shimmer.tsx"],"names":["React","Animated","Platform","StyleSheet","View","getOutputRange","width","isReversed","defaultProps","delay","duration","isInteraction","ShimmerPlaceholder","PureComponent","beginShimmerPosition","Value","props","loop","timing","state","toValue","useNativeDriver","includes","OS","getAnimated","render","animatedValue","BasedShimmerPlaceholder","height","shimmerColors","stopAutoRun","visible","location","style","contentStyle","shimmerStyle","LinearGradient","children","shimmerWidthPercent","linearTranslate","interpolate","inputRange","outputRange","useEffect","start","stop","styles","container","opacity","flex","backgroundColor","transform","translateX","x","y","create","overflow","createShimmerPlaceholder","forwardRef","ref"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport { Animated, Platform, StyleSheet, View } from \"react-native\";\r\n\r\nconst getOutputRange = (width, isReversed) => isReversed ? [width, -width] : [-width, width];\r\n\r\ntype Props = {\r\n    width?: number,\r\n    height?: number,\r\n    delay?: number,\r\n    duration?: number,\r\n    isInteraction?: boolean,\r\n};\r\n\r\ntype State = {\r\n    beginShimmerPosition?: Animated.Value,\r\n};\r\n\r\nconst defaultProps = {\r\n    delay: 0,\r\n    duration: 1000,\r\n    isInteraction: true\r\n};\r\n\r\nclass ShimmerPlaceholder extends React.PureComponent<Props, State> {\r\n\r\n    static defaultProps = defaultProps;\r\n\r\n    state = {\r\n        beginShimmerPosition: new Animated.Value(-1)\r\n    }\r\n\r\n    getAnimated = () => {\r\n        const { delay, duration, isInteraction } = this.props;\r\n        return Animated.loop(Animated.timing(this.state.beginShimmerPosition, {\r\n            toValue: 1,\r\n            delay,\r\n            duration,\r\n            useNativeDriver: ![\"web\"].includes(Platform.OS),\r\n            isInteraction\r\n        }));\r\n    }\r\n    animatedValue = this.getAnimated()\r\n\r\n    render() {\r\n        return (\r\n            <BasedShimmerPlaceholder\r\n                {...this.props}\r\n                animatedValue={this.animatedValue}\r\n                beginShimmerPosition={this.state.beginShimmerPosition}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst BasedShimmerPlaceholder = (props) => {\r\n    const {\r\n        width = 200,\r\n        height = 15,\r\n        // duration = 1000,\r\n        // delay = 0,\r\n        shimmerColors = [\"#ebebeb\", \"#c5c5c5\", \"#ebebeb\"],\r\n        isReversed = false,\r\n        stopAutoRun = false,\r\n        visible,\r\n        location = [0.3, 0.5, 0.7],\r\n        style,\r\n        contentStyle,\r\n        shimmerStyle,\r\n        // isInteraction = true,\r\n        LinearGradient = View,\r\n        // LinearGradient = global.Expo ? global.Expo.LinearGradient : View,\r\n        children,\r\n        animatedValue,\r\n        beginShimmerPosition,\r\n        shimmerWidthPercent = 1,\r\n    } = props;\r\n\r\n    const linearTranslate = beginShimmerPosition.interpolate({\r\n        inputRange: [-1, 1],\r\n        outputRange: getOutputRange(width, isReversed)\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        if (!stopAutoRun) {\r\n            animatedValue.start();\r\n        }\r\n        return () => {\r\n            animatedValue.stop();\r\n        };\r\n    }, [stopAutoRun]);\r\n\r\n    React.useEffect(() => {\r\n        if (visible) {\r\n            animatedValue.stop();\r\n        }\r\n        if (!visible && !stopAutoRun) {\r\n            animatedValue.start();\r\n        }\r\n    }, [visible, stopAutoRun]);\r\n\r\n    return (\r\n        <View\r\n            style={[!visible && { height, width }, styles.container, !visible && shimmerStyle, style]}\r\n        >\r\n            {/* Force render children to restrict rendering twice */}\r\n            <View style={[!visible && { width: 0, height: 0, opacity: 0 }, visible && contentStyle]}>{children}</View>\r\n            {\r\n                !visible && (\r\n                    <View style={{ flex: 1, backgroundColor: shimmerColors[0] }}>\r\n                        <Animated.View\r\n                            style={{ flex: 1, transform: [{ translateX: linearTranslate }] }}\r\n                        >\r\n                            <LinearGradient\r\n                                colors={shimmerColors}\r\n                                style={{ flex: 1, width: width * shimmerWidthPercent }}\r\n                                start={{\r\n                                    x: -1,\r\n                                    y: 0.5\r\n                                }}\r\n                                end={{\r\n                                    x: 2,\r\n                                    y: 0.5\r\n                                }}\r\n                                locations={location}\r\n                            />\r\n                        </Animated.View>\r\n\r\n                    </View>\r\n                )\r\n            }\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        overflow: \"hidden\"\r\n    },\r\n});\r\n\r\n/**\r\n * To create ShimmerPlaceholder by Linear Gradient. Only useful when you use 3rd party,\r\n * For example: react-native-linear-gradient\r\n * @param {Linear Gradient Component} LinearGradient - 'expo-linear-gradient' by default\r\n *\r\n * @example\r\n *\r\n * import LinearGradient from 'react-native-linear-gradient';\r\n * import { createShimmerPlaceholder } from 'react-native-shimmer-placeholder'\r\n *\r\n * const ShimmerPlaceHolder = createShimmerPlaceholder(LinearGradient)\r\n *\r\n * ...\r\n *\r\n * <ShimmerPlaceHolder />\r\n */\r\nexport const createShimmerPlaceholder = (LinearGradient = View) => React.forwardRef<ShimmerPlaceholder, Props>((props, ref) =>\r\n    // @ts-ignore\r\n    <ShimmerPlaceholder LinearGradient={LinearGradient} ref={ref} {...props} />);\r\n\r\nexport default ShimmerPlaceholder;\r\n"]}