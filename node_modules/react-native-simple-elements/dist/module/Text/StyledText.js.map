{"version":3,"sources":["StyledText.tsx"],"names":["color","React","I18nManager","StyleSheet","ThemeContext","Text","StyledText","alpha","family","style","rest","theme","useContext","textColor","colors","text","rgb","string","font","fonts","writingDirection","isRTL","styles","create","textAlign"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,WAAT,EAA4CC,UAA5C,QAA8D,cAA9D;AACA,SAAuBC,YAAvB,QAA2C,mBAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AASA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,MAAT;AAAiBC,EAAAA,KAAjB;AAAwB,KAAGC;AAA3B,CAAD,KAA8C;AAC7D,QAAMC,KAAK,GAAGV,KAAK,CAACW,UAAN,CAAiBR,YAAjB,CAAd;AACA,QAAMS,SAAS,GAAGb,KAAK,CAACW,KAAK,CAACG,MAAN,CAAaC,IAAd,CAAL,CAAyBR,KAAzB,CAA+BA,KAA/B,EAAsCS,GAAtC,GAA4CC,MAA5C,EAAlB;AACA,QAAMC,IAAI,GAAGP,KAAK,CAACQ,KAAN,CAAYX,MAAZ,CAAb;AACA,QAAMY,gBAAgB,GAAGlB,WAAW,CAACmB,KAAZ,GAAoB,KAApB,GAA4B,KAArD;AAEA,sBACI,oBAAC,IAAD,eACQX,IADR;AAEI,IAAA,KAAK,EAAE,CACHY,MAAM,CAACP,IADJ,EAEH;AAAEf,MAAAA,KAAK,EAAEa,SAAT;AAAoB,SAAGK,IAAvB;AAA6BE,MAAAA;AAA7B,KAFG,EAGHX,KAHG;AAFX,KADJ;AAUH,CAhBD;;AAkBA,MAAMa,MAAM,GAAGnB,UAAU,CAACoB,MAAX,CAAkB;AAC7BR,EAAAA,IAAI,EAAE;AACFS,IAAAA,SAAS,EAAE;AADT;AADuB,CAAlB,CAAf;AAMA,eAAelB,UAAf","sourcesContent":["\nimport color from \"color\";\nimport * as React from \"react\";\nimport { I18nManager, StyleProp, TextStyle, StyleSheet } from \"react-native\";\nimport { DefaultTheme, ThemeContext } from \"styled-components\";\nimport Text from \"./Text\";\n\ntype Props = React.ComponentProps<typeof Text> & {\n    alpha: number;\n    family: \"regular\" | \"medium\" | \"light\" | \"thin\";\n    style?: StyleProp<TextStyle>;\n    theme?: DefaultTheme;\n};\n\nconst StyledText = ({ alpha, family, style, ...rest }: Props) => {\n    const theme = React.useContext(ThemeContext);\n    const textColor = color(theme.colors.text).alpha(alpha).rgb().string();\n    const font = theme.fonts[family];\n    const writingDirection = I18nManager.isRTL ? \"rtl\" : \"ltr\";\n\n    return (\n        <Text\n            {...rest}\n            style={[\n                styles.text,\n                { color: textColor, ...font, writingDirection },\n                style,\n            ]}\n        />\n    );\n};\n\nconst styles = StyleSheet.create({\n    text: {\n        textAlign: \"left\",\n    },\n});\n\nexport default StyledText;\n"]}