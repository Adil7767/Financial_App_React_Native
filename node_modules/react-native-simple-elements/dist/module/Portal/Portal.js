import * as React from "react";
import PortalConsumer from "./PortalConsumer";
import { PortalContext } from "./PortalHost";
import { Provider as SettingsProvider, Consumer as SettingsConsumer } from "../theme/settings";
import { ThemeContext, ThemeProvider } from "styled-components";

/**
 * Portal allows to render a component at a different place in the parent tree.
 * You can use it to render content which should appear above other elements, similar to `Modal`.
 * It requires a [`Portal.Host`](portal-host.html) component to be rendered somewhere in the parent tree.
 *
 * ## Usage
 * ```js
 * import * as React from 'react';
 * import Portal from 'react-native-simple-elements/components/Portal';
 * import Text from "react-native-simple-elements/components/Text";
 *
 * const MyComponent = () => (
 *   <Portal>
 *     <Text>This is rendered at a different place</Text>
 *   </Portal>
 * );
 *
 * export default MyComponent;
 * ```
 */
const Portal = ({
  children
}) => {
  const theme = React.useContext(ThemeContext);
  return /*#__PURE__*/React.createElement(SettingsConsumer, null, settings => /*#__PURE__*/React.createElement(PortalContext.Consumer, null, manager => /*#__PURE__*/React.createElement(PortalConsumer, {
    manager: manager
  }, /*#__PURE__*/React.createElement(SettingsProvider, {
    value: settings
  }, /*#__PURE__*/React.createElement(ThemeProvider, {
    theme: theme
  }, children)))));
};

export default Portal;
//# sourceMappingURL=Portal.js.map