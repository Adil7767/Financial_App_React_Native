{"version":3,"sources":["AppbarContent.tsx"],"names":["React","Platform","StyleSheet","TouchableWithoutFeedback","View","color","Text","white","ThemeContext","AppbarContent","titleColor","subtitle","subtitleStyle","onPress","style","titleRef","titleStyle","title","rest","theme","useContext","fonts","subtitleColor","alpha","rgb","string","styles","container","OS","regular","medium","displayName","create","flex","paddingHorizontal","fontSize","AppbarContentWithTheme"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n    Platform,\n    StyleProp,\n    StyleSheet,\n    TextStyle,\n    TouchableWithoutFeedback,\n    View,\n    ViewStyle,\n} from \"react-native\";\nimport color from \"color\";\n\nimport Text from \"../Text\";\n\nimport { white } from \"../theme/colors\";\n\nimport type { $RemoveChildren } from \"../types\";\nimport { DefaultTheme, ThemeContext } from \"styled-components\";\n\ntype Props = $RemoveChildren<typeof View> & {\n    /**\n     * Custom color for the text.\n     */\n    color?: string;\n    /**\n     * Text for the title.\n     */\n    title: React.ReactNode;\n    /**\n     * Style for the title.\n     */\n    titleStyle?: StyleProp<TextStyle>;\n    /**\n     * Reference for the title.\n     */\n    titleRef?: React.RefObject<Text>;\n    /**\n     * Text for the subtitle.\n     */\n    subtitle?: React.ReactNode;\n    /**\n     * Style for the subtitle.\n     */\n    subtitleStyle?: StyleProp<TextStyle>;\n    /**\n     * Function to execute on press.\n     */\n    onPress?: () => void;\n    style?: StyleProp<ViewStyle>;\n    /**\n     * @optional\n     */\n    theme?: DefaultTheme;\n};\n\n/**\n * A component used to display a title and optional subtitle in an appbar.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-content.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import Appbar from 'react-native-simple-elements/components/Appbar';\n *\n * const MyComponent = () => (\n *     <Appbar.Header>\n *        <Appbar.Content title=\"Title\" subtitle={'Subtitle'} />\n *     </Appbar.Header>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst AppbarContent = ({\n    color: titleColor = white,\n    subtitle,\n    subtitleStyle,\n    onPress,\n    style,\n    titleRef,\n    titleStyle,\n    title,\n    ...rest\n}: Props) => {\n    const theme = React.useContext(ThemeContext);\n    const { fonts } = theme;\n\n    const subtitleColor = color(titleColor).alpha(0.7).rgb().string();\n\n    return (\n        <TouchableWithoutFeedback onPress={onPress} disabled={!onPress}>\n            <View style={[styles.container, style]} {...rest}>\n                <Text\n                    ref={titleRef}\n                    style={[\n                        {\n                            color: titleColor,\n                            ...(Platform.OS === \"ios\" ? fonts.regular : fonts.medium),\n                        },\n                        styles.title,\n                        titleStyle,\n                    ]}\n                    numberOfLines={1}\n                    accessible\n                    accessibilityTraits=\"header\"\n                    // @ts-ignore Type '\"heading\"' is not assignable to type ...\n                    accessibilityRole={Platform.OS === \"web\" ? \"heading\" : \"header\"}\n                >\n                    {title}\n                </Text>\n                {subtitle ? (\n                    <Text\n                        style={[styles.subtitle, { color: subtitleColor }, subtitleStyle]}\n                        numberOfLines={1}\n                    >\n                        {subtitle}\n                    </Text>\n                ) : null}\n            </View>\n        </TouchableWithoutFeedback>\n    );\n};\n\nAppbarContent.displayName = \"Appbar.Content\";\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        paddingHorizontal: 12,\n    },\n    title: {\n        fontSize: Platform.OS === \"ios\" ? 17 : 20,\n    },\n    subtitle: {\n        fontSize: Platform.OS === \"ios\" ? 11 : 14,\n    },\n});\n\nexport default AppbarContent;\n\n// @component-docs ignore-next-line\nconst AppbarContentWithTheme = AppbarContent;\n// @component-docs ignore-next-line\nexport { AppbarContentWithTheme as AppbarContent };\n"]}