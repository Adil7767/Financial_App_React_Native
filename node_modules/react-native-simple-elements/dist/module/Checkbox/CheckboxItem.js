import * as React from "react";
import { StyleSheet, View } from "react-native";
import CheckboxAndroid from "./CheckboxAndroid";
import CheckboxIOS from "./CheckboxIOS";
import Text from "../Text";
import TouchableRipple from "../TouchableRipple/TouchableRipple";
import { ThemeContext } from "styled-components";

/**
 * Checkbox.Item allows you to press the whole row (item) instead of only the Checkbox.
 *
 * ## Usage
 * ```js
 * import * as React from 'react';
 * import { View } from 'react-native';
 * import Checkbox from 'react-native-simple-elements/components/Checkbox';
 *
 * const MyComponent = () => (
 *   <View>
 *     <Checkbox.Item label="Item" status="checked" />
 *   </View>
 * );
 *
 * export default MyComponent;
 *```
 */
const CheckboxItem = ({
  style,
  status,
  label,
  onPress,
  labelStyle,
  testID,
  mode,
  textAfterButton,
  ...props
}) => {
  const theme = React.useContext(ThemeContext);
  const checkboxProps = { ...props,
    status,
    theme
  };
  let checkbox;

  if (mode === "android") {
    checkbox = /*#__PURE__*/React.createElement(CheckboxAndroid, checkboxProps);
  } else if (mode === "ios") {
    checkbox = /*#__PURE__*/React.createElement(CheckboxIOS, checkboxProps);
  } else {
    checkbox = /*#__PURE__*/React.createElement(CheckboxAndroid, checkboxProps);
  }

  return /*#__PURE__*/React.createElement(TouchableRipple, {
    onPress: onPress,
    testID: testID
  }, /*#__PURE__*/React.createElement(View, {
    style: [styles.container, style],
    pointerEvents: "none"
  }, !textAfterButton ? /*#__PURE__*/React.createElement(Text, {
    style: [styles.label, {
      color: theme.colors.text
    }, labelStyle]
  }, label) : null, checkbox, textAfterButton ? /*#__PURE__*/React.createElement(Text, {
    style: [styles.label, {
      color: theme.colors.text
    }, labelStyle]
  }, label) : null));
};

CheckboxItem.displayName = "Checkbox.Item";
export default CheckboxItem; // @component-docs ignore-next-line

const CheckboxItemWithTheme = CheckboxItem; // @component-docs ignore-next-line

export { CheckboxItemWithTheme as CheckboxItem };
const styles = StyleSheet.create({
  container: {
    flexDirection: "row",
    alignItems: "center",
    justifyContent: "space-between",
    paddingVertical: 8,
    paddingTop: 8,
    paddingBottom: 8,
    paddingHorizontal: 16,
    paddingRight: 16,
    paddingLeft: 16
  },
  label: {
    fontSize: 16,
    flex: 1
  }
});
//# sourceMappingURL=CheckboxItem.js.map