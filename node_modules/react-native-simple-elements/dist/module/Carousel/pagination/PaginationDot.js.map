{"version":3,"sources":["PaginationDot.tsx"],"names":["React","Animated","Easing","TouchableOpacity","DEFAULT_DOT_SIZE","DEFAULT_DOT_COLOR","PaginationDot","PureComponent","animColor","Value","animOpacity","animTransform","componentDidMount","props","active","_animate","componentDidUpdate","prevProps","toValue","state","animatedDuration","animatedFriction","animatedTension","commonProperties","duration","isInteraction","useNativeDriver","_shouldAnimateColor","animations","timing","easing","linear","spring","friction","tension","push","parallel","start","color","inactiveColor","render","activeOpacity","carouselRef","containerStyle","inactiveStyle","inactiveOpacity","inactiveScale","index","style","tappable","delayPressInDot","animatedStyle","opacity","interpolate","inputRange","outputRange","transform","scale","animatedColor","backgroundColor","dotContainerStyle","alignItems","justifyContent","marginHorizontal","dotStyle","width","height","borderRadius","onPress","currentRef","current","_snapToItem","_getPositionIndex","error","console","warn","undefined"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n    Animated,\n    Easing,\n    TouchableOpacity,\n    StyleProp,\n    ViewStyle,\n} from \"react-native\";\n\nconst DEFAULT_DOT_SIZE = 7;\nconst DEFAULT_DOT_COLOR = \"rgba(0, 0, 0, 0.75)\";\n\ntype Props = {\n    inactiveOpacity: number,\n    inactiveScale: number,\n    active?: boolean,\n    activeOpacity?: number,\n    carouselRef?: Record<string, Record<string, unknown>>,\n    color?: string,\n    containerStyle?: StyleProp<ViewStyle>,\n    inactiveColor?: string,\n    inactiveStyle?: StyleProp<ViewStyle>,\n    index?: number,\n    style?: StyleProp<ViewStyle>,\n    tappable?: boolean,\n    animatedDuration?: number,\n    animatedFriction?: number,\n    animatedTension?: number,\n    delayPressInDot?: number,\n};\n\ntype State = {\n    animColor: Animated.Value,\n    animOpacity: Animated.Value,\n    animTransform: Animated.Value,\n}\n\nexport default class PaginationDot extends React.PureComponent<Props, State> {\n\n    state: State = {\n        animColor: new Animated.Value(0),\n        animOpacity: new Animated.Value(0),\n        animTransform: new Animated.Value(0),\n    };\n\n    componentDidMount() {\n        if (this.props.active) {\n            this._animate(1);\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.active !== this.props.active) {\n            this._animate(this.props.active ? 1 : 0);\n        }\n    }\n\n    _animate(toValue = 0) {\n        const { animColor, animOpacity, animTransform } = this.state;\n        const { animatedDuration, animatedFriction, animatedTension } = this.props;\n\n        const commonProperties = {\n            toValue,\n            duration: animatedDuration,\n            isInteraction: false,\n            useNativeDriver: !this._shouldAnimateColor,\n        };\n\n        const animations = [\n            Animated.timing(animOpacity, {\n                easing: Easing.linear,\n                ...commonProperties,\n            }),\n            Animated.spring(animTransform, {\n                friction: animatedFriction,\n                tension: animatedTension,\n                ...commonProperties,\n            }),\n        ];\n\n        if (this._shouldAnimateColor) {\n            animations.push(\n                Animated.timing(animColor, {\n                    easing: Easing.linear,\n                    ...commonProperties,\n                })\n            );\n        }\n\n        Animated.parallel(animations).start();\n    }\n\n    get _shouldAnimateColor() {\n        const { color, inactiveColor } = this.props;\n        return color && inactiveColor;\n    }\n\n    render() {\n        const { animColor, animOpacity, animTransform } = this.state;\n        const {\n            active,\n            activeOpacity,\n            carouselRef,\n            color,\n            containerStyle,\n            inactiveColor,\n            inactiveStyle,\n            inactiveOpacity,\n            inactiveScale,\n            index,\n            style,\n            tappable,\n            delayPressInDot,\n        } = this.props;\n\n        const animatedStyle = {\n            opacity: animOpacity.interpolate({\n                inputRange: [0, 1],\n                outputRange: [inactiveOpacity, 1],\n            }),\n            transform: [\n                {\n                    scale: animTransform.interpolate({\n                        inputRange: [0, 1],\n                        outputRange: [inactiveScale, 1],\n                    }),\n                },\n            ],\n        };\n        const animatedColor = this._shouldAnimateColor\n            ? {\n                backgroundColor: animColor.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [inactiveColor, color],\n                }),\n            }\n            : {};\n\n        const dotContainerStyle = [\n            {\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                marginHorizontal: 8,\n            },\n            containerStyle || {},\n        ] as any;\n\n        const dotStyle = [\n            {\n                width: DEFAULT_DOT_SIZE,\n                height: DEFAULT_DOT_SIZE,\n                borderRadius: DEFAULT_DOT_SIZE / 2,\n                backgroundColor: DEFAULT_DOT_COLOR,\n            },\n            style || {},\n            (!active && inactiveStyle) || {},\n            animatedStyle,\n            animatedColor,\n        ];\n\n        const onPress = tappable\n            ? () => {\n                try {\n                    const currentRef = carouselRef.current || carouselRef;\n                    // @ts-ignore\n                    currentRef._snapToItem(currentRef._getPositionIndex(index));\n                } catch (error) {\n                    console.warn(\n                        \"react-native-snap-carousel | Pagination: \" +\n                        \"`carouselRef` has to be a Carousel ref.\\n\" +\n                        error\n                    );\n                }\n            }\n            : undefined;\n\n        return (\n            <TouchableOpacity\n                accessible={false}\n                style={dotContainerStyle}\n                activeOpacity={tappable ? activeOpacity : 1}\n                onPress={onPress}\n                delayPressIn={delayPressInDot}\n            >\n                <Animated.View style={dotStyle} />\n            </TouchableOpacity>\n        );\n    }\n}\n"]}