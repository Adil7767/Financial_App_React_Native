{"version":3,"sources":["AvatarIcon.tsx"],"names":["React","View","StyleSheet","color","SvgIcon","white","ThemeContext","defaultSize","Avatar","icon","size","style","rest","theme","useContext","backgroundColor","colors","primary","restStyle","flatten","textColor","isLight","width","height","borderRadius","styles","container","displayName","create","justifyContent","alignItems"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,EAA0BC,UAA1B,QAAuD,cAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,SAAxB;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAAuBC,YAAvB,QAA2C,mBAA3C;AAEA,MAAMC,WAAW,GAAG,EAApB;;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAI,GAAGH,WAAf;AAA4BI,EAAAA,KAA5B;AAAmC,KAAGC;AAAtC,CAAD,KAAyD;AACpE,QAAMC,KAAK,GAAGb,KAAK,CAACc,UAAN,CAAiBR,YAAjB,CAAd;AACA,QAAM;AAAES,IAAAA,eAAe,GAAGF,KAAK,CAACG,MAAN,CAAaC,OAAjC;AAA0C,OAAGC;AAA7C,MACFhB,UAAU,CAACiB,OAAX,CAAmBR,KAAnB,KAA6B,EADjC;AAEA,QAAMS,SAAS,GACXR,IAAI,CAACT,KAAL,KACCA,KAAK,CAACY,eAAD,CAAL,CAA8BM,OAA9B,KAA0C,oBAA1C,GAAiEhB,KADlE,CADJ;AAIA,sBACI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAE,CACH;AACIiB,MAAAA,KAAK,EAAEZ,IADX;AAEIa,MAAAA,MAAM,EAAEb,IAFZ;AAGIc,MAAAA,YAAY,EAAEd,IAAI,GAAG,CAHzB;AAIIK,MAAAA;AAJJ,KADG,EAOHU,MAAM,CAACC,SAPJ,EAQHR,SARG;AADX,KAWQN,IAXR,gBAaI,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAEH,IAAf;AAAqB,IAAA,KAAK,EAAEW,SAA5B;AAAuC,IAAA,IAAI,EAAEV,IAAI,GAAG;AAApD,IAbJ,CADJ;AAiBH,CAzBD;;AA2BAF,MAAM,CAACmB,WAAP,GAAqB,aAArB;AAEA,MAAMF,MAAM,GAAGvB,UAAU,CAAC0B,MAAX,CAAkB;AAC7BF,EAAAA,SAAS,EAAE;AACPG,IAAAA,cAAc,EAAE,QADT;AAEPC,IAAAA,UAAU,EAAE;AAFL;AADkB,CAAlB,CAAf;AAOA,eAAetB,MAAf","sourcesContent":["import * as React from \"react\";\r\nimport { View, ViewStyle, StyleSheet, StyleProp } from \"react-native\";\r\nimport color from \"color\";\r\nimport { SvgIcon } from \"../Icon\";\r\nimport { white } from \"../theme/colors\";\r\nimport { DefaultTheme, ThemeContext } from \"styled-components\";\r\n\r\nconst defaultSize = 64;\r\n\r\ntype Props = React.ComponentPropsWithRef<typeof View> & {\r\n    /**\r\n     * Icon to display for the `Avatar`.\r\n     */\r\n    icon: React.ReactElement;\r\n    /**\r\n     * Size of the avatar.\r\n     */\r\n    size?: number;\r\n    /**\r\n     * Custom color for the icon.\r\n     */\r\n    color?: string;\r\n    style?: StyleProp<ViewStyle>;\r\n    /**\r\n     * @optional\r\n     */\r\n    theme?: DefaultTheme;\r\n};\r\n\r\n/**\r\n * Avatars can be used to represent people in a graphical way.\r\n *\r\n * <div class=\"screenshots\">\r\n *   <figure>\r\n *     <img class=\"medium\" src=\"screenshots/avatar-icon.png\" />\r\n *   </figure>\r\n * </div>\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { AvatarIcon } from 'react-native-simple-elements/components/Avatar';\r\n *\r\n * const MyComponent = () => (\r\n *   <AvatarIcon size={24} icon=\"folder\" />\r\n * );\r\n * ```\r\n */\r\nconst Avatar = ({ icon, size = defaultSize, style, ...rest }: Props) => {\r\n    const theme = React.useContext(ThemeContext);\r\n    const { backgroundColor = theme.colors.primary, ...restStyle } =\r\n        StyleSheet.flatten(style) || {};\r\n    const textColor =\r\n        rest.color ||\r\n        (color(backgroundColor as any).isLight() ? \"rgba(0, 0, 0, .54)\" : white);\r\n\r\n    return (\r\n        <View\r\n            style={[\r\n                {\r\n                    width: size,\r\n                    height: size,\r\n                    borderRadius: size / 2,\r\n                    backgroundColor,\r\n                },\r\n                styles.container,\r\n                restStyle,\r\n            ]}\r\n            {...rest}\r\n        >\r\n            <SvgIcon icon={icon} color={textColor} size={size * 0.6} />\r\n        </View>\r\n    );\r\n};\r\n\r\nAvatar.displayName = \"Avatar.Icon\";\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n});\r\n\r\nexport default Avatar;\r\n"]}