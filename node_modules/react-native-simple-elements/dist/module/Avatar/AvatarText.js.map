{"version":3,"sources":["AvatarText.tsx"],"names":["React","View","StyleSheet","Color","Text","white","ThemeContext","defaultSize","AvatarText","label","size","style","labelStyle","color","rest","theme","useContext","backgroundColor","colors","primary","restStyle","flatten","textColor","isLight","width","height","borderRadius","styles","container","text","fontSize","lineHeight","displayName","create","justifyContent","alignItems","textAlign","textAlignVertical"],"mappings":";;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACIC,IADJ,EAGIC,UAHJ,QAMO,cANP;AAOA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAAuBC,YAAvB,QAA2C,mBAA3C;AAEA,MAAMC,WAAW,GAAG,EAApB;;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,UAAU,GAAG,CAAC;AAChBC,EAAAA,KADgB;AAEhBC,EAAAA,IAAI,GAAGH,WAFS;AAGhBI,EAAAA,KAHgB;AAIhBC,EAAAA,UAJgB;AAKhBC,EAAAA,KALgB;AAMhB,KAAGC;AANa,CAAD,KAON;AACT,QAAMC,KAAK,GAAGf,KAAK,CAACgB,UAAN,CAAiBV,YAAjB,CAAd;AACA,QAAM;AAAEW,IAAAA,eAAe,GAAGF,KAAK,CAACG,MAAN,CAAaC,OAAjC;AAA0C,OAAGC;AAA7C,MACFlB,UAAU,CAACmB,OAAX,CAAmBV,KAAnB,KAA6B,EADjC;AAEA,QAAMW,SAAS,GACXT,KAAK,KAAKV,KAAK,CAACc,eAAD,CAAL,CAA8BM,OAA9B,KAA0C,oBAA1C,GAAiElB,KAAtE,CADT;AAGA,sBACI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAE,CACH;AACImB,MAAAA,KAAK,EAAEd,IADX;AAEIe,MAAAA,MAAM,EAAEf,IAFZ;AAGIgB,MAAAA,YAAY,EAAEhB,IAAI,GAAG,CAHzB;AAIIO,MAAAA;AAJJ,KADG,EAOHU,MAAM,CAACC,SAPJ,EAQHR,SARG;AADX,KAWQN,IAXR,gBAaI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAE,CACHa,MAAM,CAACE,IADJ,EAEH;AACIhB,MAAAA,KAAK,EAAES,SADX;AAEIQ,MAAAA,QAAQ,EAAEpB,IAAI,GAAG,CAFrB;AAGIqB,MAAAA,UAAU,EAAErB;AAHhB,KAFG,EAOHE,UAPG,CADX;AAUI,IAAA,aAAa,EAAE;AAVnB,KAYKH,KAZL,CAbJ,CADJ;AA8BH,CA5CD;;AA8CAD,UAAU,CAACwB,WAAX,GAAyB,aAAzB;AAEA,MAAML,MAAM,GAAGzB,UAAU,CAAC+B,MAAX,CAAkB;AAC7BL,EAAAA,SAAS,EAAE;AACPM,IAAAA,cAAc,EAAE,QADT;AAEPC,IAAAA,UAAU,EAAE;AAFL,GADkB;AAK7BN,EAAAA,IAAI,EAAE;AACFO,IAAAA,SAAS,EAAE,QADT;AAEFC,IAAAA,iBAAiB,EAAE;AAFjB;AALuB,CAAlB,CAAf;AAWA,eAAe7B,UAAf","sourcesContent":["\r\nimport * as React from \"react\";\r\nimport {\r\n    View,\r\n    ViewStyle,\r\n    StyleSheet,\r\n    StyleProp,\r\n    TextStyle,\r\n} from \"react-native\";\r\nimport Color from \"color\";\r\nimport Text from \"../Text\";\r\nimport { white } from \"../theme/colors\";\r\nimport { DefaultTheme, ThemeContext } from \"styled-components\";\r\n\r\nconst defaultSize = 64;\r\n\r\ntype Props = React.ComponentPropsWithRef<typeof View> & {\r\n    /**\r\n     * Initials to show as the text in the `Avatar`.\r\n     */\r\n    label: string;\r\n    /**\r\n     * Size of the avatar.\r\n     */\r\n    size?: number;\r\n    /**\r\n     * Custom color for the text.\r\n     */\r\n    color?: string;\r\n    /**\r\n     * Style for text container\r\n     */\r\n    style?: StyleProp<ViewStyle>;\r\n    /**\r\n     * Style for the title.\r\n     */\r\n    labelStyle?: StyleProp<TextStyle>;\r\n    /**\r\n     * @optional\r\n     */\r\n    theme?: DefaultTheme;\r\n};\r\n\r\n/**\r\n * Avatars can be used to represent people in a graphical way.\r\n *\r\n * <div class=\"screenshots\">\r\n *   <figure>\r\n *     <img class=\"medium\" src=\"screenshots/avatar-text.png\" />\r\n *   </figure>\r\n * </div>\r\n *\r\n * ## Usage\r\n * ```js\r\n * import * as React from 'react';\r\n * import { AvatarText } from 'react-native-simple-elements/components/Avatar';\r\n *\r\n * const MyComponent = () => (\r\n *   <Avatar.Text size={24} label=\"XD\" />\r\n * );\r\n * ```\r\n */\r\nconst AvatarText = ({\r\n    label,\r\n    size = defaultSize,\r\n    style,\r\n    labelStyle,\r\n    color,\r\n    ...rest\r\n}: Props) => {\r\n    const theme = React.useContext(ThemeContext);\r\n    const { backgroundColor = theme.colors.primary, ...restStyle } =\r\n        StyleSheet.flatten(style) || {};\r\n    const textColor =\r\n        color || (Color(backgroundColor as any).isLight() ? \"rgba(0, 0, 0, .54)\" : white);\r\n\r\n    return (\r\n        <View\r\n            style={[\r\n                {\r\n                    width: size,\r\n                    height: size,\r\n                    borderRadius: size / 2,\r\n                    backgroundColor,\r\n                },\r\n                styles.container,\r\n                restStyle,\r\n            ]}\r\n            {...rest}\r\n        >\r\n            <Text\r\n                style={[\r\n                    styles.text,\r\n                    {\r\n                        color: textColor,\r\n                        fontSize: size / 2,\r\n                        lineHeight: size,\r\n                    },\r\n                    labelStyle,\r\n                ]}\r\n                numberOfLines={1}\r\n            >\r\n                {label}\r\n            </Text>\r\n        </View>\r\n    );\r\n};\r\n\r\nAvatarText.displayName = \"Avatar.Text\";\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    text: {\r\n        textAlign: \"center\",\r\n        textAlignVertical: \"center\",\r\n    },\r\n});\r\n\r\nexport default AvatarText;\r\n"]}