function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import * as React from "react";
import { Platform } from "react-native";
import styled from "styled-components/native";
import { ThemeContext } from "styled-components";
const StyledViewport = styled.View({
  position: ["web"].includes(Platform.OS) ? "fixed" : "absolute",
  top: 0,
  right: 0,
  bottom: 0,
  left: 0
});

const Viewport = props => {
  const {
    children,
    style,
    ...rest
  } = props;
  const {
    colors
  } = React.useContext(ThemeContext);
  return /*#__PURE__*/React.createElement(StyledViewport, _extends({
    style: [{
      backgroundColor: colors.background
    }, style],
    testID: "viewport"
  }, rest), children);
};

export default Viewport;
//# sourceMappingURL=Viewport.js.map