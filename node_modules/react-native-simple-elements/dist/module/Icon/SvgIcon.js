function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import * as React from "react";
import { Text as NativeText, Platform } from "react-native";
import { ThemeContext } from "styled-components";

const isImageSource = source => // source is an object with uri
typeof source === "object" && source !== null && Object.prototype.hasOwnProperty.call(source, "uri") && typeof source.uri === "string" || // source is a module, e.g. - require('image')
typeof source === "number" || // image url on web
Platform.OS === "web" && typeof source === "string" && (source.startsWith("data:image") || /\.(bmp|jpg|jpeg|png|gif|svg)$/.test(source));

const getIconId = source => {
  if (typeof source === "object" && source !== null && Object.prototype.hasOwnProperty.call(source, "uri") && typeof source.uri === "string") {
    return source.uri;
  }

  return source;
};

export const isValidIcon = source => typeof source === "string" || typeof source === "function" || isImageSource(source);
export const isEqualIcon = (a, b) => a === b || getIconId(a) === getIconId(b);

const SvgIcon = props => {
  const {
    icon: Icon,
    color,
    ...rest
  } = props;
  const theme = React.useContext(ThemeContext);
  const iconColor = color || theme.colors.text;
  const size = rest.size || 24;
  const outline = rest.outline || false;
  const colorStyle = outline ? {
    stroke: iconColor
  } : {
    fill: iconColor
  };
  return props.icon ?
  /*#__PURE__*/
  // @ts-ignore
  React.createElement(Icon, _extends({}, rest, colorStyle, {
    width: size,
    height: size
  })) : /*#__PURE__*/React.createElement(NativeText, null, "Icon");
};

SvgIcon.defaultProps = {
  direction: "ltr"
};
export default SvgIcon;
//# sourceMappingURL=SvgIcon.js.map