"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var themeStoreShape_1 = require("./themeStoreShape");
function withStyles(createStyles) {
    return function createComponent(BaseComponent) {
        var WrappedComponent = (function (_super) {
            __extends(WrappedComponent, _super);
            function WrappedComponent() {
                return _super !== null && _super.apply(this, arguments) || this;
            }
            WrappedComponent.prototype.render = function () {
                return React.createElement(BaseComponent, __assign({}, this.props, { styles: this.state.styles }));
            };
            WrappedComponent.prototype.componentWillMount = function () {
                var _this = this;
                var theme = this.context.theme;
                this.updateStyles(this.props);
                if (typeof createStyles === 'function') {
                    this.unsubscribe = theme.subscribe(function () {
                        _this.updateStyles(_this.props);
                    });
                }
            };
            WrappedComponent.prototype.componentWillReceiveProps = function (nextProps) {
                if (typeof withStyles === 'function') {
                    this.updateStyles(nextProps);
                }
            };
            WrappedComponent.prototype.componentWillUnmount = function () {
                if (this.unsubscribe)
                    this.unsubscribe();
            };
            WrappedComponent.prototype.updateStyles = function (props) {
                var theme = this.context.theme;
                this.setState({
                    styles: typeof createStyles === 'function'
                        ? createStyles(theme.getState(), props)
                        : createStyles
                });
            };
            return WrappedComponent;
        }(React.PureComponent));
        WrappedComponent.displayName = "withStyles(" + (BaseComponent.displayName || 'Component') + ")";
        WrappedComponent.contextTypes = {
            theme: themeStoreShape_1.default.isRequired
        };
        return WrappedComponent;
    };
}
exports.default = withStyles;
//# sourceMappingURL=withStyles.js.map